{"version":3,"file":"index.js","sources":["../../../../node_modules/@typhonjs-svelte/runtime-base/_dist/svelte/action/util/index.js"],"sourcesContent":["import { isObject } from '@typhonjs-svelte/runtime-base/util/object';\n\n/**\n * Applies the given action dynamically allowing the hosted action to be updated reactively while still appropriately\n * handling the action lifecycle methods.\n *\n * @param {HTMLElement} node - The node associated with the action.\n *\n * @param {import('./types').DynamicActionOptions} options - Defines the action to dynamically mount.\n *\n * @returns {import('svelte/action').ActionReturn<import('./types').DynamicActionOptions>} The action lifecycle\n *          methods.\n */\nfunction dynamicAction(node, { action, data } = {})\n{\n   let actionResult;\n\n   if (typeof action === 'function') { actionResult = action(node, data); }\n\n   return {\n      /**\n       * @param {import('./types').DynamicActionOptions} newOptions - Defines the new action to dynamically mount.\n       */\n      update: (newOptions) =>\n      {\n         // If `newOptions` is not an object then destroy any old action.\n         if (!isObject(newOptions))\n         {\n            actionResult?.destroy?.();\n            action = void 0;\n            data = void 0;\n\n            return;\n         }\n\n         const { action: newAction, data: newData } = newOptions;\n\n         if (typeof newAction !== 'function')\n         {\n            console.warn(`dynamicAction.update warning: Aborting as 'action' is not a function.`);\n            return;\n         }\n\n         const hasNewData = newData !== data;\n\n         if (hasNewData) { data = newData; }\n\n         if (newAction !== action)\n         {\n            // If the action changes destroy the previous action and apply the new one.\n            actionResult?.destroy?.();\n\n            action = newAction;\n            actionResult = action(node, data);\n         }\n         else if (hasNewData)\n         {\n            actionResult?.update?.(data);\n         }\n      },\n\n      destroy: () =>\n      {\n         actionResult?.destroy?.();\n\n         action = void 0;\n         data = void 0;\n         actionResult = void 0;\n      }\n   };\n}\n\nexport { dynamicAction };\n//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE;AAClD;AACA,GAAG,IAAI,YAAY;;AAEnB,GAAG,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE,EAAE,YAAY,GAAG,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;AAEzE,GAAG,OAAO;AACV;AACA;AACA;AACA,MAAM,MAAM,EAAE,CAAC,UAAU;AACzB,MAAM;AACN;AACA,SAAS,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;AAClC,SAAS;AACT,YAAY,YAAY,EAAE,OAAO,IAAI;AACrC,YAAY,MAAM,GAAG,MAAM;AAC3B,YAAY,IAAI,GAAG,MAAM;;AAEzB,YAAY;AACZ;;AAEA,SAAS,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,UAAU;;AAEhE,SAAS,IAAI,OAAO,SAAS,KAAK,UAAU;AAC5C,SAAS;AACT,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,qEAAqE,CAAC,CAAC;AACjG,YAAY;AACZ;;AAEA,SAAS,MAAM,UAAU,GAAG,OAAO,KAAK,IAAI;;AAE5C,SAAS,IAAI,UAAU,EAAE,EAAE,IAAI,GAAG,OAAO,CAAC;;AAE1C,SAAS,IAAI,SAAS,KAAK,MAAM;AACjC,SAAS;AACT;AACA,YAAY,YAAY,EAAE,OAAO,IAAI;;AAErC,YAAY,MAAM,GAAG,SAAS;AAC9B,YAAY,YAAY,GAAG,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;AAC7C;AACA,cAAc,IAAI,UAAU;AAC5B,SAAS;AACT,YAAY,YAAY,EAAE,MAAM,GAAG,IAAI,CAAC;AACxC;AACA,OAAO;;AAEP,MAAM,OAAO,EAAE;AACf,MAAM;AACN,SAAS,YAAY,EAAE,OAAO,IAAI;;AAElC,SAAS,MAAM,GAAG,MAAM;AACxB,SAAS,IAAI,GAAG,MAAM;AACtB,SAAS,YAAY,GAAG,MAAM;AAC9B;AACA,IAAI;AACJ;;;;","x_google_ignoreList":[0]}