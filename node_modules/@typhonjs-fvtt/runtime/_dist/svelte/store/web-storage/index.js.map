{"version":3,"file":"index.js","sources":["../../../../node_modules/@typhonjs-svelte/runtime-base/_dist/svelte/store/web-storage/index.js"],"sourcesContent":["import { writable, get } from 'svelte/store';\nimport { CrossWindow } from '@typhonjs-svelte/runtime-base/util/browser';\n\n/**\n * Generates derived, readable, writable helper functions wrapping the given Storage API provided with any additional\n * customization for data serialization. By default, JSON serialization is used.\n *\n * @param {object}   opts - Generator options.\n *\n * @param {Storage}  opts.storage - The web storage source.\n *\n * @param {(value: any, ...rest: any[]) => string}  [opts.serialize] - Replace with custom serialization;\n *        default: `JSON.stringify`.\n *\n * @param {(value: string, ...rest: any[]) => any}  [opts.deserialize] - Replace with custom deserialization;\n *        default: `JSON.parse`.\n *\n * @returns {StorageStores} A complete set of store helper functions and associated storage API instance and\n *          serialization strategy.\n */\nfunction storeGenerator({ storage, serialize = JSON.stringify, deserialize = JSON.parse }) {\n    function isSimpleDeriver(deriver) {\n        return deriver.length < 2;\n    }\n    function storageReadable(key, value, start) {\n        return {\n            subscribe: storageWritable(key, value, start).subscribe\n        };\n    }\n    function storageWritable(key, value, start) {\n        function wrap_start(ogSet) {\n            return start(function wrap_set(new_value) {\n                if (storage) {\n                    storage.setItem(key, serialize(new_value));\n                }\n                return ogSet(new_value);\n            }, function wrap_update(fn) {\n                set(fn(get(ogStore)));\n            });\n        }\n        if (storage) {\n            const storageValue = storage.getItem(key);\n            try {\n                if (storageValue) {\n                    value = deserialize(storageValue);\n                }\n            }\n            catch (err) { /**/ }\n            storage.setItem(key, serialize(value));\n        }\n        const ogStore = writable(value, start ? wrap_start : void 0);\n        function set(new_value) {\n            if (storage) {\n                storage.setItem(key, serialize(new_value));\n            }\n            ogStore.set(new_value);\n        }\n        function update(fn) {\n            set(fn(get(ogStore)));\n        }\n        function subscribe(run, invalidate) {\n            return ogStore.subscribe(run, invalidate);\n        }\n        return { set, update, subscribe };\n    }\n    function storageDerived(key, stores, fn, initial_value) {\n        const single = !Array.isArray(stores);\n        const stores_array = single ? [stores] : stores;\n        if (storage && storage.getItem(key)) {\n            try {\n                initial_value = deserialize(storage.getItem(key));\n            }\n            catch (err) { /**/ }\n        }\n        return storageReadable(key, initial_value, (set, update) => {\n            let inited = false;\n            const values = [];\n            let pending = 0;\n            let cleanup;\n            const sync = () => {\n                if (pending) {\n                    return;\n                }\n                cleanup?.();\n                const input = single ? values[0] : values;\n                if (isSimpleDeriver(fn)) {\n                    set(fn(input));\n                }\n                else {\n                    const result = fn(input, set, update);\n                    if (typeof result === 'function') {\n                        cleanup = result;\n                    }\n                }\n            };\n            const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n                values[i] = value;\n                pending &= ~(1 << i);\n                if (inited) {\n                    sync();\n                }\n            }, () => { pending |= (1 << i); }));\n            inited = true;\n            sync();\n            return function stop() {\n                // Equivalent to run_all from Svelte internals.\n                unsubscribers.forEach((unsubscriber) => unsubscriber());\n                cleanup?.();\n            };\n        });\n    }\n    return {\n        readable: storageReadable,\n        writable: storageWritable,\n        derived: storageDerived,\n        storage,\n        serialize,\n        deserialize\n    };\n}\n\n/**\n * Provides all Storage API enabled `localStorage` store helper functions. Data is serialized as JSON.\n */\nconst localStores = storeGenerator({ storage: globalThis?.localStorage });\n/**\n * Provides the Storage API enabled derived `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.derived;\n/**\n * Provides the Storage API enabled readable `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.readable;\n/**\n * Provides the Storage API enabled writable `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.writable;\n\n/**\n * Provides all Storage API enabled `sessionStorage` store helper functions. Data is serialized as JSON.\n */\nconst sessionStores = storeGenerator({ storage: globalThis?.sessionStorage });\n/**\n * Provides the Storage API enabled derived `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.derived;\n/**\n * Provides the Storage API enabled readable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.readable;\n/**\n * Provides the Storage API enabled writable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.writable;\n\n/**\n * Provides the base Storage API store manager. It is recommended to use {@link TJSLocalStorage} &\n * {@link TJSSessionStorage} for standard browser local and session storage use cases. TJSWebStorage exists\n * to provide additional customization options for custom Storage API compatible storage instances and custom\n * serialization configuration.\n *\n * @implements {import('./types').WebStorage}\n */\nclass TJSWebStorage\n{\n   /** @type {import('./').StorageStores} */\n   #storageStores;\n\n   /**\n    * @type {(Map<string, {\n    *    store: import('svelte/store').Writable,\n    *    deserialize?: (value: string, ...rest: any[]) => any,\n    *    serialize?: (value: any, ...rest: any[]) => string\n    * }>)}\n    */\n   #stores = new Map();\n\n   /**\n    * @param {import('./').StorageStores} storageStores - Provides a complete set of\n    *        storage API store helper functions and the associated storage API instance and serializations strategy.\n    */\n   constructor(storageStores)\n   {\n      this.#storageStores = storageStores;\n   }\n\n   /**\n    * Creates a new store for the given key.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {T}        [defaultValue] - A default value to set for the store.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The new store.\n    */\n   #createStore(key, defaultValue = void 0, storageStores)\n   {\n      try\n      {\n         const value = this.#storageStores.storage.getItem(key);\n         if (value !== null)\n         {\n            const deserialize = storageStores?.deserialize ?? this.#storageStores.deserialize;\n            defaultValue = deserialize(value);\n         }\n      }\n      catch (err) { /**/ }\n\n      const writable = storageStores?.writable ?? this.#storageStores.writable;\n\n      return writable(key, defaultValue);\n   }\n\n   /**\n    * @param {string}   key - Storage key.\n    *\n    * @returns {(value: string, ...rest: any[]) => any} Deserialize function.\n    */\n   #getDeserialize(key)\n   {\n      return this.#stores.get(key)?.deserialize ?? this.#storageStores.deserialize;\n   }\n\n   /**\n    * @param {string}   key - Storage key.\n    *\n    * @returns {(value: any, ...rest: any[]) => string} Serialize function.\n    */\n   #getSerialize(key)\n   {\n      return this.#stores.get(key)?.serialize ?? this.#storageStores.serialize;\n   }\n\n   /**\n    * Gets a store from the `stores` Map or creates a new store for the key and a given default value.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {T}        [defaultValue] - A default value to set for the store.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The store for the given key.\n    */\n   #getStore(key, defaultValue = void 0, storageStores)\n   {\n      const storeEntry = this.#stores.get(key);\n      if (storeEntry) { return storeEntry.store; }\n\n      const store = this.#createStore(key, defaultValue, storageStores);\n\n      // Set any key specific storage helper details.\n      this.#stores.set(key, {\n         store,\n         deserialize: storageStores?.deserialize,\n         serialize: storageStores?.serialize\n      });\n\n      return store;\n   }\n\n   /**\n    * Get value from the storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {*} Value from session storage or if not defined any default value provided.\n    */\n   getItem(key, defaultValue)\n   {\n      let value = defaultValue;\n\n      const storageValue = this.#storageStores.storage.getItem(key);\n\n      if (storageValue !== null)\n      {\n         try\n         {\n            value = this.#getDeserialize(key)(storageValue);\n         }\n         catch (err)\n         {\n            value = defaultValue;\n         }\n      }\n      else if (defaultValue !== void 0)\n      {\n         try\n         {\n            const newValue = this.#getSerialize(key)(defaultValue);\n\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\n            this.#storageStores.storage.setItem(key, newValue);\n         }\n         catch (err) { /* */ }\n      }\n\n      return value;\n   }\n\n   /**\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\n    * is not already set.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {T}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The Svelte store for this key.\n    */\n   getStore(key, defaultValue, storageStores)\n   {\n      return this.#getStore(key, defaultValue, storageStores);\n   }\n\n   /**\n    * Returns whether a store has already been created for the given key.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    */\n   hasStore(key)\n   {\n      return this.#stores.has(key);\n   }\n\n   /**\n    * Sets the value for the given key in storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {*}        value - A value to set for this key.\n    */\n   setItem(key, value)\n   {\n      const store = this.#getStore(key);\n      store.set(value);\n   }\n\n   /**\n    * Convenience method to swap a boolean value stored in storage API updating the associated store value.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {boolean} The boolean swap for the given key.\n    */\n   swapItemBoolean(key, defaultValue)\n   {\n      const store = this.#getStore(key, defaultValue);\n\n      let currentValue = false;\n\n      try\n      {\n         currentValue = !!this.#getDeserialize(key)(this.#storageStores.storage.getItem(key));\n      }\n      catch (err) { /**/ }\n\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\n\n      store.set(newValue);\n      return newValue;\n   }\n\n   // Iterators ------------------------------------------------------------------------------------------------------\n\n   /**\n    * @template T\n    *\n    * Returns an iterable for the session storage keys and stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\n    *\n    * @returns {IterableIterator<[string, import('svelte/store').Writable<T>]>} Iterable iterator of keys and stores.\n    * @yields {import('svelte/store').Writable<[string, Writable<T>]>}\n    */\n   *entries(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield [key, this.getStore(key)]; }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield [key, this.getStore(key)]; }\n      }\n   }\n\n   /**\n    * Returns an iterable for the session storage keys from existing stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\n    *\n    * @returns {IterableIterator<string>} Iterable iterator of session storage keys.\n    * @yields {string}\n    */\n   *keys(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield key; }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield key; }\n      }\n   }\n\n   /**\n    * @template T\n    *\n    * Returns an iterable for the session storage stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\n    *\n    * @returns {IterableIterator<import('svelte/store').Writable<T>>} Iterable iterator of stores.\n    * @yields {import('svelte/store').Writable<T>}\n    */\n   *stores(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield this.getStore(key); }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield this.getStore(key); }\n      }\n   }\n}\n\n/**\n * Provides a {@link TJSWebStorage} instance for standard browser local storage use cases.\n */\nclass TJSLocalStorage extends TJSWebStorage\n{\n   constructor()\n   {\n      super(localStores);\n   }\n}\n\n/**\n * Provides a {@link TJSWebStorage} instance for standard browser session storage use cases.\n */\nclass TJSSessionStorage extends TJSWebStorage\n{\n   constructor()\n   {\n      super(sessionStores);\n   }\n}\n\nexport { TJSLocalStorage, TJSSessionStorage, TJSWebStorage, localStores, sessionStores, storeGenerator };\n//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}