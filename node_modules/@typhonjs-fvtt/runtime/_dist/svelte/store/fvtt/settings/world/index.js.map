{"version":3,"file":"index.js","sources":["../../../../../../node_modules/@typhonjs-svelte/runtime-base/_dist/svelte/store/reducer/array-object/index.js","../../../../../../node_modules/@typhonjs-fvtt/svelte/_dist/store/fvtt/settings/world/index.js"],"sourcesContent":["import { DynArrayReducer } from '@typhonjs-svelte/runtime-base/svelte/store/reducer';\nimport { isMinimalWritableStore, subscribeIgnoreFirst } from '@typhonjs-svelte/runtime-base/svelte/store/util';\nimport { Hashing, Timing } from '@typhonjs-svelte/runtime-base/util';\nimport { isObject, hasGetter, klona } from '@typhonjs-svelte/runtime-base/util/object';\n\n/**\n * Provides a base implementation for store entries in {@link ArrayObjectStore}.\n *\n * In particular providing the required getting / accessor for the 'id' property.\n */\nclass ObjectEntryStore {\n    /**\n     */\n    #data;\n    /**\n     * Stores the subscribers.\n     */\n    #subscribers = [];\n    /**\n     * Invoked by ArrayObjectStore to provide custom duplication. Override this static method in your entry store.\n     *\n     * @param data - A copy of local data w/ new ID already set.\n     *\n     * @param arrayStore - The source ArrayObjectStore instance.\n     */\n    static duplicate(data, arrayStore) { } // eslint-disable-line no-unused-vars\n    /**\n     * @param data -\n     */\n    constructor(data) {\n        if (!isObject(data)) {\n            throw new TypeError(`'data' is not an object.`);\n        }\n        this.#data = data;\n        // If `id` is missing then add it.\n        if (typeof this.#data.id !== 'string') {\n            this.#data.id = Hashing.uuidv4();\n        }\n        if (!Hashing.isUuidv4(this.#data.id)) {\n            throw new Error(`'data.id' (${this.#data.id}) is not a valid UUIDv4 string.`);\n        }\n    }\n    /**\n     * @returns The object data tracked by this store.\n     */\n    get _data() { return this.#data; }\n    /**\n     * @returns The ID attribute in object data tracked by this store.\n     */\n    get id() { return this.#data.id; }\n    /**\n     * @returns A JSON data object for the backing data. The default implementation directly returns the backing private\n     *          data object. You may override this method to clone the data via {@link ObjectEntryStore._data}.\n     */\n    toJSON() {\n        return this.#data;\n    }\n    /**\n     * @param handler - Callback function that is invoked on update / changes.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscribers.push(handler); // add handler to the array of subscribers\n        handler(this.#data); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscribers.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscribers.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Update subscribers of this store. Useful for child implementations.\n     */\n    _updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscribers.length; cntr++) {\n            this.#subscribers[cntr](this.#data);\n        }\n    }\n}\n\n/**\n * @typeParam S - Store type.\n */\nclass ArrayObjectStore {\n    /**\n     */\n    #data = [];\n    /**\n     */\n    #dataMap = new Map();\n    /**\n     */\n    #dataReducer;\n    /**\n     */\n    #manualUpdate;\n    /**\n     */\n    #StoreClass;\n    /**\n     * Stores the subscribers.\n     */\n    #subscribers = [];\n    /**\n     */\n    #updateSubscribersBound;\n    /**\n     * @returns The default object entry store constructor that can facilitate the creation of the required\n     *          {@link ArrayObjectStore.Options.Config.StoreClass} and generic `T` type parameter.\n     */\n    static get EntryStore() { return ObjectEntryStore; }\n    /**\n     * @param options - ArrayObjectStore options.\n     */\n    constructor({ StoreClass, childDebounce = 250, dataReducer = false, manualUpdate = false }) {\n        if (!Number.isInteger(childDebounce) || childDebounce < 0 || childDebounce > 1000) {\n            throw new TypeError(`'childDebounce' must be an integer between and including 0 - 1000.`);\n        }\n        if (typeof manualUpdate !== 'boolean') {\n            throw new TypeError(`'manualUpdate' is not a boolean.`);\n        }\n        if (!isMinimalWritableStore(StoreClass.prototype)) {\n            throw new TypeError(`'StoreClass' is not a minimal writable store constructor.`);\n        }\n        if (!hasGetter(StoreClass.prototype, 'id')) {\n            throw new TypeError(`'StoreClass' does not have a getter accessor for 'id' property.`);\n        }\n        this.#manualUpdate = manualUpdate;\n        this.#StoreClass = StoreClass;\n        if (dataReducer) {\n            this.#dataReducer = new DynArrayReducer({ data: this.#data });\n        }\n        // Prepare a debounced callback that is used for all child store entry subscriptions.\n        this.#updateSubscribersBound = childDebounce === 0 ? this.updateSubscribers.bind(this) :\n            Timing.debounce((update) => this.updateSubscribers(update), childDebounce);\n    }\n    /**\n     * Provide an iterator for public access to entry stores.\n     *\n     * @returns iterator\n     */\n    *[Symbol.iterator]() {\n        if (this.#data.length === 0) {\n            return;\n        }\n        for (const entryStore of this.#data) {\n            yield entryStore;\n        }\n    }\n    /**\n     * @returns The internal data array tracked allowing child classes direct access.\n     */\n    get _data() { return this.#data; }\n    /**\n     * @returns The data reducer.\n     */\n    get dataReducer() {\n        if (!this.#dataReducer) {\n            throw new Error(`'dataReducer' is not initialized; did you forget to specify 'dataReducer' as true in constructor options?`);\n        }\n        return this.#dataReducer;\n    }\n    /**\n     * @returns The length of all data.\n     */\n    get length() { return this.#data.length; }\n    /**\n     * Removes all child store entries.\n     */\n    clearEntries() {\n        for (const storeEntryData of this.#dataMap.values()) {\n            storeEntryData.unsubscribe();\n        }\n        this.#dataMap.clear();\n        this.#data.length = 0;\n        this.updateSubscribers();\n    }\n    /**\n     * Creates a new store from given data.\n     *\n     * @param entryData - Entry data.\n     *\n     * @returns The store\n     */\n    createEntry(entryData) {\n        if (!isObject(entryData)) {\n            throw new TypeError(`'entryData' is not an object.`);\n        }\n        if (typeof entryData.id !== 'string') {\n            entryData.id = Hashing.uuidv4();\n        }\n        if (this.#data.findIndex((entry) => entry.id === entryData.id) >= 0) {\n            throw new Error(`'entryData.id' (${entryData.id}) already in this ArrayObjectStore instance.`);\n        }\n        // The required `id` is added to `entryData` if not defined.\n        const store = this.#createStore(entryData);\n        this.updateSubscribers();\n        return store;\n    }\n    /**\n     * Add a new store entry from the given data.\n     *\n     * @param entryData - Entry data.\n     *\n     * @returns New store entry instance.\n     */\n    #createStore(entryData) {\n        const store = new this.#StoreClass(entryData, this);\n        if (!Hashing.isUuidv4(store.id)) {\n            throw new Error(`'store.id' (${store.id}) is not a UUIDv4 compliant string.`);\n        }\n        const unsubscribe = subscribeIgnoreFirst(store, this.#updateSubscribersBound);\n        this.#data.push(store);\n        this.#dataMap.set(store.id, { store, unsubscribe });\n        return store;\n    }\n    /**\n     * Deletes a given entry store by ID from this world setting array store instance.\n     *\n     * @param id - ID of entry to delete.\n     *\n     * @returns Delete operation successful.\n     */\n    deleteEntry(id) {\n        const result = this.#deleteStore(id);\n        if (result) {\n            this.updateSubscribers();\n        }\n        return result;\n    }\n    #deleteStore(id) {\n        if (typeof id !== 'string') {\n            throw new TypeError(`'id' is not a string.`);\n        }\n        const storeEntryData = this.#dataMap.get(id);\n        if (storeEntryData) {\n            storeEntryData.unsubscribe();\n            this.#dataMap.delete(id);\n            const index = this.#data.findIndex((entry) => entry.id === id);\n            if (index >= 0) {\n                this.#data.splice(index, 1);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Duplicates an entry store by the given ID.\n     *\n     * @param {string}   id - UUIDv4 string.\n     *\n     * @returns {*} Instance of StoreClass.\n     */\n    duplicateEntry(id) {\n        if (typeof id !== 'string') {\n            throw new TypeError(`'id' is not a string.`);\n        }\n        const storeEntryData = this.#dataMap.get(id);\n        if (storeEntryData) {\n            const data = klona(storeEntryData.store.toJSON());\n            data.id = Hashing.uuidv4();\n            // Allow StoreClass to statically perform any specialized duplication.\n            this.#StoreClass?.duplicate?.(data, this);\n            return this.createEntry(data);\n        }\n        return void 0;\n    }\n    /**\n     * Find an entry in the backing child store array.\n     *\n     * @param predicate - A predicate function.\n     *\n     * @returns Found entry in array or undefined.\n     */\n    findEntry(predicate) {\n        return this.#data.find(predicate);\n    }\n    /**\n     * Finds an entry store instance by 'id' / UUIDv4.\n     *\n     * @param id - A UUIDv4 string.\n     *\n     * @returns Entry store instance.\n     */\n    getEntry(id) {\n        const storeEntryData = this.#dataMap.get(id);\n        return storeEntryData ? storeEntryData.store : void 0;\n    }\n    /**\n     * Sets the children store data by 'id', adds new entry store instances, or removes entries that are no longer in the\n     * update list.\n     *\n     * @param updateList -\n     */\n    set(updateList) {\n        if (!Array.isArray(updateList)) {\n            console.warn(`ArrayObjectStore.set warning: aborting set operation as 'updateList' is not an array.`);\n            return;\n        }\n        // Create a set of all current entry IDs.\n        const removeIDSet = new Set(this.#dataMap.keys());\n        let rebuildIndex = false;\n        for (let updateIndex = 0; updateIndex < updateList.length; updateIndex++) {\n            const updateData = updateList[updateIndex];\n            const id = updateData.id;\n            if (typeof id !== 'string') {\n                throw new Error(`'updateData.id' is not a string.`);\n            }\n            const localIndex = this.#data.findIndex((entry) => entry.id === id);\n            if (localIndex >= 0) {\n                const localEntry = this.#data[localIndex];\n                // Update the entry data.\n                localEntry.set(updateData);\n                // Must move to correct position\n                if (localIndex !== updateIndex) {\n                    // Remove from current location.\n                    this.#data.splice(localIndex, 1);\n                    if (updateIndex < this.#data.length) {\n                        // Insert at new location.\n                        this.#data.splice(updateIndex, 0, localEntry);\n                    }\n                    else {\n                        // Local data length is less than update data index; rebuild index.\n                        rebuildIndex = true;\n                    }\n                }\n                // Delete from removeIDSet as entry is still in local data.\n                removeIDSet.delete(id);\n            }\n            else {\n                this.#createStore(updateData);\n            }\n        }\n        if (rebuildIndex) {\n            // Must invoke unsubscribe for all child stores.\n            for (const storeEntryData of this.#dataMap.values()) {\n                storeEntryData.unsubscribe();\n            }\n            this.#data.length = 0;\n            this.#dataMap.clear();\n            for (const updateData of updateList) {\n                this.#createStore(updateData);\n            }\n        }\n        else {\n            // Remove entries that are no longer in data.\n            for (const id of removeIDSet) {\n                this.#deleteStore(id);\n            }\n        }\n        this.updateSubscribers();\n    }\n    toJSON() {\n        return this.#data;\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * @param handler - Callback function that is invoked on update / changes.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscribers.push(handler); // add handler to the array of subscribers\n        handler(this.#data); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscribers.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscribers.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers.\n     *\n     * @param [update] -\n     */\n    updateSubscribers(update = void 0) {\n        const updateGate = typeof update === 'boolean' ? update : !this.#manualUpdate;\n        if (updateGate) {\n            for (let cntr = 0; cntr < this.#subscribers.length; cntr++) {\n                this.#subscribers[cntr](this.#data);\n            }\n        }\n        // This will update the filtered data and `dataReducer` store and forces an update to subscribers.\n        if (this.#dataReducer) {\n            this.#dataReducer.index.update(true);\n        }\n    }\n}\n\n/**\n * @typeParam S - Store type.\n */\nclass CrudArrayObjectStore extends ArrayObjectStore {\n    /**\n     */\n    #crudDispatch;\n    /**\n     */\n    #extraData;\n    /**\n     * @param options - CrudArrayObjectStore options.\n     */\n    constructor({ crudDispatch, extraData, ...rest }) {\n        // 'manualUpdate' is set to true if 'crudUpdate' is defined, but can be overridden by `...rest`.\n        super({\n            manualUpdate: typeof crudDispatch === 'function',\n            ...rest,\n        });\n        if (crudDispatch !== void 0 && typeof crudDispatch !== 'function') {\n            throw new TypeError(`'crudDispatch' is not a function.`);\n        }\n        if (extraData !== void 0 && !isObject(extraData)) {\n            throw new TypeError(`'extraData' is not an object.`);\n        }\n        this.#crudDispatch = crudDispatch;\n        this.#extraData = extraData ?? {};\n    }\n    /**\n     * Removes all child store entries.\n     */\n    clearEntries() {\n        super.clearEntries();\n        if (this.#crudDispatch) {\n            this.#crudDispatch({ action: 'clear', ...this.#extraData });\n        }\n    }\n    /**\n     * Creates a new store from given data.\n     *\n     * @param entryData -\n     *\n     * @returns Associated store with entry data.\n     */\n    createEntry(entryData) {\n        const store = super.createEntry(entryData);\n        if (store && this.#crudDispatch) {\n            this.#crudDispatch({\n                action: 'create',\n                ...this.#extraData,\n                id: store.id,\n                data: store.toJSON()\n            });\n        }\n        return store;\n    }\n    /**\n     * Deletes a given entry store by ID from this world setting array store instance.\n     *\n     * @param id - ID of entry to delete.\n     *\n     * @returns Delete operation successful.\n     */\n    deleteEntry(id) {\n        const result = super.deleteEntry(id);\n        if (result && this.#crudDispatch) {\n            this.#crudDispatch({ action: 'delete', ...this.#extraData, id });\n        }\n        return result;\n    }\n    /**\n     * Updates subscribers, but provides special handling when a `crudDispatch` function is attached. When `update` is\n     * an object with a valid UUIDv4 string as the id property the `crudDispatch` function is invoked along with the\n     * data payload.\n     *\n     * @param [update] - A boolean indicating that subscribers should be notified otherwise\n     */\n    updateSubscribers(update = void 0) {\n        if (this.#crudDispatch && isObject(update) && Hashing.isUuidv4(update.id)) {\n            const result = this.#crudDispatch({\n                action: 'update',\n                ...this.#extraData,\n                id: update.id,\n                data: update // TODO: Consider using klona to clone data.\n            });\n            // If the crudDispatch function returns a boolean then invoke 'ArrayObjectStore.updateSubscribers' with it.\n            super.updateSubscribers(typeof result === 'boolean' ? result : update);\n        }\n        else {\n            super.updateSubscribers(update);\n        }\n    }\n}\n\nexport { ArrayObjectStore, CrudArrayObjectStore, ObjectEntryStore };\n//# sourceMappingURL=index.js.map\n","import { CrudArrayObjectStore } from '@typhonjs-svelte/runtime-base/svelte/store/reducer/array-object';\nimport { Hashing } from '@typhonjs-svelte/runtime-base/util';\n\n/**\n * Defines a {@link CrudArrayObjectStore} with streamlined configuration through {@link TJSGameSettings} to register\n * a world game setting. WorldArrayObjectStore is automatically associated as the store receiving updates with the\n * associated game setting.\n *\n * @typeParam S - Store type.\n */\nclass WorldArrayObjectStore extends CrudArrayObjectStore {\n    /**\n     * Game setting 'key' field.\n     */\n    #key;\n    /**\n     * Game setting 'namespace' field.\n     */\n    #namespace;\n    /**\n     * @param options - WorldArrayObjectStore Options.\n     */\n    constructor({ namespace, key, defaultData = [], gameSettings, ...rest }) {\n        super({\n            ...rest,\n            extraData: { namespace, key }\n        });\n        if (typeof key !== 'string') {\n            throw new TypeError(`'key' is not a string.`);\n        }\n        if (typeof namespace !== 'string') {\n            throw new TypeError(`'namespace' is not a string.`);\n        }\n        this.#namespace = namespace;\n        this.#key = key;\n        if (!Array.isArray(defaultData)) {\n            throw new TypeError(`'defaultData' is not an array.`);\n        }\n        // Define default `id` if not provided in `defaultData` then create a random `UUIDv4` value.\n        for (const entry of defaultData) {\n            if (typeof entry.id !== 'string') {\n                entry.id = Hashing.uuidv4();\n            }\n        }\n        if (gameSettings) {\n            gameSettings.register({\n                namespace,\n                key,\n                store: this,\n                options: {\n                    scope: 'world',\n                    config: false,\n                    default: Array.isArray(defaultData) ? defaultData : [],\n                    type: Array,\n                    name: key\n                }\n            });\n        }\n    }\n    /**\n     * @returns The Foundry game setting key.\n     */\n    get key() { return this.#key; }\n    /**\n     * @returns The Foundry game setting namespace.\n     */\n    get namespace() { return this.#namespace; }\n}\n\nexport { WorldArrayObjectStore };\n//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1]}