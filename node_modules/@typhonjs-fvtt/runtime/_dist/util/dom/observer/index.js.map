{"version":3,"file":"index.js","sources":["../../../../node_modules/@typhonjs-svelte/runtime-base/_dist/util/dom/observer/index.js"],"sourcesContent":["import { isWritableStore } from '@typhonjs-svelte/runtime-base/svelte/store/util';\nimport { CrossWindow } from '@typhonjs-svelte/runtime-base/util/browser';\nimport { StyleParse } from '@typhonjs-svelte/runtime-base/util/dom/style';\nimport { isObject } from '@typhonjs-svelte/runtime-base/util/object';\n\n/**\n * Provides an instance of {@link ResizeObserver} that can manage multiple elements and notify a wide range of\n * {@link ResizeObserverData.ResizeTarget} listeners. Offset width and height is also provided through caching the\n * margin and padding styles of the target element.\n *\n * The action, {@link resizeObserver}, utilizes ResizeObserverManager for automatic registration and removal\n * via Svelte.\n */\nclass ResizeObserverManager\n{\n   /** @type {Map<HTMLElement, import('./types-local').ResizeObserverSubscriber[]>} */\n   #elMap = new Map();\n\n   /** @type {ResizeObserver} */\n   #resizeObserver;\n\n   /**\n    * Defines the various shape / update type of the given target.\n    *\n    * @type {{ [key: string]: number }}\n    */\n   static #updateTypes = Object.freeze({\n      none: 0,\n      attribute: 1,\n      function: 2,\n      resizeObserved: 3,\n      setContentBounds: 4,\n      setDimension: 5,\n      storeObject: 6,\n      storesObject: 7\n   });\n\n   constructor()\n   {\n      this.#resizeObserver = new ResizeObserver((entries) =>\n      {\n         for (const entry of entries)\n         {\n            const subscribers = this.#elMap.get(entry?.target);\n\n            if (Array.isArray(subscribers))\n            {\n               const contentWidth = entry.contentRect.width;\n               const contentHeight = entry.contentRect.height;\n\n               for (const subscriber of subscribers)\n               {\n                  ResizeObserverManager.#updateSubscriber(subscriber, contentWidth, contentHeight);\n               }\n            }\n         }\n      });\n   }\n\n   /**\n    * Add an {@link HTMLElement} and {@link ResizeObserverData.ResizeTarget} instance for monitoring. Create cached\n    * style attributes for the given element include border & padding dimensions for offset width / height calculations.\n    *\n    * @param {HTMLElement}    el - The element to observe.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget} target - A target that contains one of several\n    *        mechanisms for updating resize data.\n    */\n   add(el, target)\n   {\n      if (!CrossWindow.isHTMLElement(el))\n      {\n         throw new TypeError(`ResizeObserverManager.add error: 'el' is not a HTMLElement.`);\n      }\n\n      // Verify that this target is not already added for this element.\n      if (this.#hasTarget(el, target)) { return; }\n\n      const updateType = ResizeObserverManager.#getUpdateType(target);\n\n      if (updateType === 0)\n      {\n         throw new Error(`ResizeObserverManager.add error: 'target' is not a valid ResizeObserverManager target.`);\n      }\n\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n      const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n      const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n      const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n      const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ?? StyleParse.pixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n      const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n      const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n      /** @type {import('./types-local').ResizeObserverSubscriber} */\n      const data = {\n         updateType,\n         target,\n\n         // Stores most recent contentRect.width and contentRect.height values from ResizeObserver.\n         contentWidth: 0,\n         contentHeight: 0,\n\n         // Convenience data for total border & padding for offset width & height calculations.\n         styles: {\n            additionalWidth: borderLeft + borderRight + paddingLeft + paddingRight,\n            additionalHeight: borderTop + borderBottom + paddingTop + paddingBottom\n         }\n      };\n\n      if (this.#elMap.has(el))\n      {\n         const subscribers = this.#elMap.get(el);\n         subscribers.push(data);\n      }\n      else\n      {\n         this.#elMap.set(el, [data]);\n      }\n\n      this.#resizeObserver.observe(el);\n   }\n\n   /**\n    * Clears and unobserves all currently tracked elements and managed targets.\n    */\n   clear()\n   {\n      for (const el of this.#elMap.keys()) { this.#resizeObserver.unobserve(el); }\n\n      this.#elMap.clear();\n   }\n\n   /**\n    * Removes all {@link ResizeObserverData.ResizeTarget} instances for the given element from monitoring when just an\n    * element is provided otherwise removes a specific target from the monitoring map. If no more targets remain then\n    * the element is removed from monitoring.\n    *\n    * @param {HTMLElement} el - Element to remove from monitoring.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget} [target] - A specific target to remove from monitoring.\n    */\n   remove(el, target = void 0)\n   {\n      const subscribers = this.#elMap.get(el);\n      if (Array.isArray(subscribers))\n      {\n         // Remove specific target from subscribers.\n         if (target !== void 0)\n         {\n            const index = subscribers.findIndex((entry) => entry.target === target);\n            if (index >= 0)\n            {\n               subscribers.splice(index, 1);\n            }\n         }\n         else\n         {\n            // Remove all subscribers.\n            subscribers.length = 0;\n         }\n\n         // Remove element monitoring if last target removed.\n         if (subscribers.length === 0)\n         {\n            this.#elMap.delete(el);\n            this.#resizeObserver.unobserve(el);\n         }\n      }\n   }\n\n   /**\n    * Provides a function that when invoked with an element updates the cached styles for each subscriber of the\n    * element.\n    *\n    * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n    * to update the cache if you change border or padding attributes of the element.\n    *\n    * @param {HTMLElement} el - A HTML element.\n    */\n   updateCache(el)\n   {\n      const subscribers = this.#elMap.get(el);\n\n      if (Array.isArray(subscribers))\n      {\n         const computed = globalThis.getComputedStyle(el);\n\n         // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n         // Used to create the offset width & height values from the context box ResizeObserver provides.\n         const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n         const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n         const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n         const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n         const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ??\n          StyleParse.pixels(computed.paddingBottom) ?? 0;\n         const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n         const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n         const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n         const additionalWidth = borderLeft + borderRight + paddingLeft + paddingRight;\n         const additionalHeight = borderTop + borderBottom + paddingTop + paddingBottom;\n\n         for (const subscriber of subscribers)\n         {\n            subscriber.styles.additionalWidth = additionalWidth;\n            subscriber.styles.additionalHeight = additionalHeight;\n            ResizeObserverManager.#updateSubscriber(subscriber, subscriber.contentWidth, subscriber.contentHeight);\n         }\n      }\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Determines the shape of the target instance regarding valid update mechanisms to set width & height changes.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget}  target - The target instance.\n    *\n    * @returns {number} Update type value.\n    */\n   static #getUpdateType(target)\n   {\n      if (typeof target?.resizeObserved === 'function') { return this.#updateTypes.resizeObserved; }\n      if (typeof target?.setDimension === 'function') { return this.#updateTypes.setDimension; }\n      if (typeof target?.setContentBounds === 'function') { return this.#updateTypes.setContentBounds; }\n\n      const targetType = typeof target;\n\n      // Does the target have resizeObserved writable store?\n      if (targetType !== null && (targetType === 'object' || targetType === 'function'))\n      {\n         if (isWritableStore(target.resizeObserved))\n         {\n            return this.#updateTypes.storeObject;\n         }\n\n         // Now check for a child stores object which is a common TRL pattern for exposing stores.\n         const stores = target?.stores;\n         if (isObject(stores) || typeof stores === 'function')\n         {\n            if (isWritableStore(stores.resizeObserved))\n            {\n               return this.#updateTypes.storesObject;\n            }\n         }\n      }\n\n      if (targetType !== null && targetType === 'object') { return this.#updateTypes.attribute; }\n\n      if (targetType === 'function') { return this.#updateTypes.function; }\n\n      return this.#updateTypes.none;\n   }\n\n   /**\n    * Determines if a given element and target is already being observed.\n    *\n    * @param {HTMLElement} el - A HTMLElement.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget} [target] - A specific target to find.\n    *\n    * @returns {boolean} Whether the target is already being tracked for the given element.\n    */\n   #hasTarget(el, target)\n   {\n      if (target === void 0 || target === null) { return false; }\n\n      const subscribers = this.#elMap.get(el);\n      if (Array.isArray(subscribers))\n      {\n         return subscribers.findIndex((entry) => entry.target === target) >= 0;\n      }\n\n      return false;\n   }\n\n   /**\n    * Updates a subscriber target with given content width & height values. Offset width & height is calculated from\n    * the content values + cached styles.\n    *\n    * @param {import('./types-local').ResizeObserverSubscriber} subscriber - Internal data about subscriber.\n    *\n    * @param {number|undefined}  contentWidth - ResizeObserver `contentRect.width` value or undefined.\n    *\n    * @param {number|undefined}  contentHeight - ResizeObserver `contentRect.height` value or undefined.\n    */\n   static #updateSubscriber(subscriber, contentWidth, contentHeight)\n   {\n      const styles = subscriber.styles;\n\n      subscriber.contentWidth = contentWidth;\n      subscriber.contentHeight = contentHeight;\n\n      const offsetWidth = Number.isFinite(contentWidth) ? contentWidth + styles.additionalWidth : void 0;\n      const offsetHeight = Number.isFinite(contentHeight) ? contentHeight + styles.additionalHeight : void 0;\n\n      const target = subscriber.target;\n\n      switch (subscriber.updateType)\n      {\n         case this.#updateTypes.attribute:\n            target.contentWidth = contentWidth;\n            target.contentHeight = contentHeight;\n            target.offsetWidth = offsetWidth;\n            target.offsetHeight = offsetHeight;\n            break;\n\n         case this.#updateTypes.function:\n            target?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n            break;\n\n         case this.#updateTypes.resizeObserved:\n            target.resizeObserved?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n            break;\n\n         case this.#updateTypes.setContentBounds:\n            target.setContentBounds?.(contentWidth, contentHeight);\n            break;\n\n         case this.#updateTypes.setDimension:\n            target.setDimension?.(offsetWidth, offsetHeight);\n            break;\n\n         case this.#updateTypes.storeObject:\n            target.resizeObserved.update((object) =>\n            {\n               object.contentHeight = contentHeight;\n               object.contentWidth = contentWidth;\n               object.offsetHeight = offsetHeight;\n               object.offsetWidth = offsetWidth;\n\n               return object;\n            });\n            break;\n\n         case this.#updateTypes.storesObject:\n            target.stores.resizeObserved.update((object) =>\n            {\n               object.contentHeight = contentHeight;\n               object.contentWidth = contentWidth;\n               object.offsetHeight = offsetHeight;\n               object.offsetWidth = offsetWidth;\n\n               return object;\n            });\n            break;\n      }\n   }\n}\n\nexport { ResizeObserverManager };\n//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}