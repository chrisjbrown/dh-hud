{"version":3,"file":"index.js","sources":["../../../node_modules/@typhonjs-svelte/runtime-base/_dist/util/a11y/index.js"],"sourcesContent":["import { CrossWindow } from '@typhonjs-svelte/runtime-base/util/browser';\nimport { isObject, isIterable } from '@typhonjs-svelte/runtime-base/util/object';\n\n/**\n * Provides several helpful utility methods for accessibility and keyboard navigation.\n *\n * Note: Global debugging can be enabled by setting `A11yHelper.debug = true`.\n */\nclass A11yHelper\n{\n   /**\n    * You can set global focus debugging enabled by setting `A11yHelper.debug = true`.\n    *\n    * @type {boolean}\n    */\n   static #globalDebug = false;\n\n   /**\n    * @returns {boolean} Global debugging enabled.\n    */\n   static get debug() { return this.#globalDebug; }\n\n   /**\n    * @param {boolean}  debug - Global debug enabled\n    */\n   static set debug(debug)\n   {\n      if (typeof debug !== 'boolean') { throw new TypeError(`'debug' is not a boolean.`); }\n\n      this.#globalDebug = debug;\n   }\n\n   /**\n    * Runs a media query to determine if the user / OS configuration is set up for reduced motion / animation.\n    *\n    * @returns {boolean} User prefers reduced motion.\n    */\n   static get prefersReducedMotion()\n   {\n      return globalThis?.matchMedia('(prefers-reduced-motion: reduce)')?.matches ?? false;\n   }\n\n   /**\n    * Apply focus to the HTMLElement / SVGElement targets in a given A11yFocusSource data object. An iterable list\n    * `options.focusEl` can contain HTMLElement / SVGElements or selector strings. If multiple focus targets are\n    * provided in a list then the first valid target found will be focused. If focus target is a string then a lookup\n    * via `document.querySelector` is performed. In this case you should provide a unique selector for the desired\n    * focus target.\n    *\n    * Note: The body of this method is postponed to the next clock tick to allow any changes in the DOM to occur that\n    * might alter focus targets before applying.\n    *\n    * @param {A11yFocusSource | { focusSource: A11yFocusSource }}   options - The focus options instance to apply.\n    */\n   static applyFocusSource(options)\n   {\n      if (!isObject(options)) { return; }\n\n      // Handle the case of receiving an object with embedded `focusSource`.\n      const focusOpts = isObject(options?.focusSource) ? options.focusSource : options;\n\n      setTimeout(() =>\n      {\n         const debug = typeof focusOpts.debug === 'boolean' ? this.debug || focusOpts.debug : this.debug;\n\n         if (isIterable(focusOpts.focusEl))\n         {\n            if (debug)\n            {\n               console.debug(`A11yHelper.applyFocusSource debug - Attempting to apply focus target: `,\n                focusOpts.focusEl);\n            }\n\n            for (const target of focusOpts.focusEl)\n            {\n               if (target?.nodeType === Node.ELEMENT_NODE && target?.isConnected)\n               {\n                  target?.focus();\n                  if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, target);\n                  }\n                  break;\n               }\n               else if (typeof target === 'string')\n               {\n                  const element = document.querySelector(target);\n                  if (element?.nodeType === Node.ELEMENT_NODE && element?.isConnected)\n                  {\n                     element?.focus();\n                     if (debug)\n                     {\n                        console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, element);\n                     }\n                     break;\n                  }\n                  else if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Could not query selector: `, target);\n                  }\n               }\n            }\n         }\n         else if (debug)\n         {\n            console.debug(`A11yHelper.applyFocusSource debug - No focus targets defined.`);\n         }\n      }, 0);\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {Element | Document} [element=document] - Optional element to start query.\n    *\n    * @param {FocusableElementOptions} [options] - Optional parameters.\n    *\n    * @returns {FocusableElement} First focusable child element.\n    */\n   static getFirstFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[0] : void 0;\n   }\n\n   /**\n    * Returns all focusable elements within a specified element.\n    *\n    * @param {Element | Document} [element=document] Optional element to start query.\n    *\n    * @param {FocusableElementOptions} [options] - Optional parameters.\n    *\n    * @returns {Array<FocusableElement>} Child keyboard focusable elements.\n    */\n   static getFocusableElements(element = document, { anchorHref = true, ignoreClasses, ignoreElements,\n    parentHidden = false, selectors } = {})\n   {\n      if (element?.nodeType !== Node.ELEMENT_NODE && element?.nodeType !== Node.DOCUMENT_NODE)\n      {\n         throw new TypeError(`'element' is not a HTMLElement, SVGElement, or Document instance.`);\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      if (ignoreElements !== void 0 && !CrossWindow.isSet(ignoreElements))\n      {\n         throw new TypeError(`'ignoreElements' is not a Set.`);\n      }\n\n      if (selectors !== void 0 && typeof selectors !== 'string')\n      {\n         throw new TypeError(`'selectors' is not a string.`);\n      }\n\n      const selectorQuery = selectors ?? this.#getFocusableSelectors(anchorHref);\n\n      let allElements = [...element.querySelectorAll(selectorQuery)];\n\n      if (ignoreElements && ignoreClasses)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && !ignoreElements.has(el) && el.style.display !== 'none' &&\n             el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') && !el.hasAttribute('inert') &&\n              el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreClasses)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreElements)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            return !ignoreElements.has(el) && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else\n      {\n         allElements = allElements.filter((el) =>\n         {\n            return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n             !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n\n      if (parentHidden)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            return !this.isParentHidden(el, element);\n         });\n      }\n\n      return allElements;\n   }\n\n   /**\n    * Returns the default focusable selectors query.\n    *\n    * @param {boolean}  [anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @returns {string} Focusable selectors for `querySelectorAll`.\n    */\n   static #getFocusableSelectors(anchorHref = true)\n   {\n      return `button, [contenteditable=\"\"], [contenteditable=\"true\"], details summary:not([tabindex=\"-1\"]), embed, a${\n       anchorHref ? '[href]' : ''}, iframe, object, input:not([type=hidden]), select, textarea, ` +\n        `[tabindex]:not([tabindex=\"-1\"])`;\n   }\n\n   /**\n    * Gets a A11yFocusSource object from the given DOM event allowing for optional X / Y screen space overrides.\n    * Browsers (Firefox / Chrome) forwards a mouse event for the context menu keyboard button. Provides detection of\n    * when the context menu event is from the keyboard. Firefox as of (1/23) does not provide the correct screen space\n    * coordinates, so for keyboard context menu presses coordinates are generated from the centroid point of the\n    * element.\n    *\n    * A default fallback element or selector string may be provided to provide the focus target. If the event comes from\n    * the keyboard however the source focused element is inserted as the target with the fallback value appended to the\n    * list of focus targets. When A11yFocusSource is applied by {@link A11yHelper.applyFocusSource} the target focus\n    * list is iterated through until a connected target is found and focus applied.\n    *\n    * @param {object} options - Options\n    *\n    * @param {KeyboardEvent | MouseEvent}   [options.event] - The source DOM event.\n    *\n    * @param {boolean} [options.debug] - When true {@link A11yHelper.applyFocusSource} logs focus target data.\n    *\n    * @param {FocusableElement | string} [options.focusEl] - A specific HTMLElement / SVGElement or selector\n    *        string as the focus target.\n    *\n    * @param {number}   [options.x] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @param {number}   [options.y] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @returns {A11yFocusSource} A A11yFocusSource object.\n    *\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1426671\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=314314\n    *\n    * @privateRemarks\n    * TODO: Evaluate / test against touch input devices.\n    */\n   static getFocusSource({ event, x, y, focusEl, debug = false })\n   {\n      if (focusEl !== void 0 && !this.isFocusSource(focusEl))\n      {\n         throw new TypeError(\n          `A11yHelper.getFocusSource error: 'focusEl' is not a HTMLElement, SVGElement, or string.`);\n      }\n\n      if (debug !== void 0 && typeof debug !== 'boolean')\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'debug' is not a boolean.`);\n      }\n\n      const debugEnabled = typeof debug === 'boolean' ? this.debug || debug : this.debug;\n\n      // Handle the case when no event is provided and x, y, or focusEl is explicitly defined.\n      if (event === void 0)\n      {\n         if (typeof x !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'x' is not a number.`);\n         }\n\n         if (typeof y !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'y' is not a number.`);\n         }\n\n         const result = {\n            debug,\n            focusEl: focusEl !== void 0 ? [focusEl] : void 0,\n            x,\n            y,\n         };\n\n         if (debugEnabled)\n         {\n            console.debug(`A11yHelper.getFocusSource debug: generated 'focusSource' without event: `, result);\n         }\n\n         return result;\n      }\n\n      // Perform duck typing on event constructor name.\n      if (event !== void 0 && !CrossWindow.isUserInputEvent(event))\n      {\n         throw new TypeError(\n          `A11yHelper.getFocusSource error: 'event' is not a KeyboardEvent, MouseEvent, or PointerEvent.`);\n      }\n\n      if (x !== void 0 && !Number.isInteger(x))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'x' is not a number.`);\n      }\n\n      if (y !== void 0 && !Number.isInteger(y))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'y' is not a number.`);\n      }\n\n      /** @type {Element} */\n      let targetEl;\n\n      if (event)\n      {\n         if (A11yHelper.isFocusable(event.target))\n         {\n            targetEl = event.target;\n            if (debugEnabled)\n            {\n               console.debug(`A11yHelper.getFocusSource debug: 'targetEl' set to event.target: `, targetEl);\n            }\n         }\n         else if (A11yHelper.isFocusable(event.currentTarget))\n         {\n            targetEl = event.currentTarget;\n            if (debugEnabled)\n            {\n               console.debug(`A11yHelper.getFocusSource debug: 'targetEl' set to event.currentTarget: `, targetEl);\n            }\n         }\n         else\n         {\n            if (debugEnabled)\n            {\n               console.debug(\n                `A11yHelper.getFocusSource debug: 'event.target' / 'event.currentTarget' are not focusable.`);\n               console.debug(`A11yHelper.getFocusSource debug: 'event.target': `, event.target);\n               console.debug(`A11yHelper.getFocusSource debug: 'event.currentTarget': `, event.currentTarget);\n            }\n         }\n\n         if (targetEl)\n         {\n            if (targetEl?.nodeType !== Node.ELEMENT_NODE && typeof targetEl?.focus !== 'function')\n            {\n               throw new TypeError(`A11yHelper.getFocusSource error: 'targetEl' is not an HTMLElement or SVGElement.`);\n            }\n         }\n      }\n\n      const result = { debug };\n\n      // Perform duck typing on event constructor name.\n      if (CrossWindow.isPointerEvent(event))\n      {\n         // Firefox currently (11/24) does not correctly determine the location of a keyboard originated\n         // context menu location, so calculate position from middle of the event target.\n         // Firefox fires a mouse event for the context menu key.\n         if (event?.button !== 2 && event.type === 'contextmenu')\n         {\n            // Always include x / y coordinates and targetEl may not be defined.\n            const rectTarget = targetEl ?? event.target;\n\n            const rect = rectTarget.getBoundingClientRect();\n            result.source = 'keyboard';\n            result.x = x ?? rect.left + (rect.width / 2);\n            result.y = y ?? rect.top + (rect.height / 2);\n            result.focusEl = targetEl ? [targetEl] : [];\n\n            if (focusEl) { result.focusEl.push(focusEl); }\n         }\n         else\n         {\n            result.source = 'pointer';\n            result.x = x ?? event.pageX;\n            result.y = y ?? event.pageY;\n            result.focusEl = targetEl ? [targetEl] : [];\n\n            if (focusEl) { result.focusEl.push(focusEl); }\n         }\n      }\n      else\n      {\n         // Always include x / y coordinates and targetEl may not be defined.\n         const rectTarget = targetEl ?? event?.target;\n\n         if (rectTarget)\n         {\n            const rect = rectTarget.getBoundingClientRect();\n            result.source = 'keyboard';\n            result.x = x ?? rect.left + (rect.width / 2);\n            result.y = y ?? rect.top + (rect.height / 2);\n            result.focusEl = targetEl ? [targetEl] : [];\n         }\n\n         if (focusEl) { result.focusEl.push(focusEl); }\n      }\n\n      if (debugEnabled)\n      {\n         console.debug(`A11yHelper.getFocusSource debug: generated 'focusSource' with event: `, result);\n      }\n\n      return result;\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {Element | Document} [element=document] - Optional element to start query.\n    *\n    * @param {FocusableElementOptions} [options] - Optional parameters.\n    *\n    * @returns {FocusableElement} Last focusable child element.\n    */\n   static getLastFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : void 0;\n   }\n\n   /**\n    * Tests if the given element is focusable.\n    *\n    * @param {unknown} el - Element to test.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {boolean} [options.anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @returns {boolean} Element is focusable.\n    */\n   static isFocusable(el, { anchorHref = true, ignoreClasses } = {})\n   {\n      if (el === void 0 || el === null || el?.hidden || !el?.isConnected || el?.nodeType !== Node.ELEMENT_NODE ||\n       typeof el?.focus !== 'function')\n      {\n         return false;\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      const contenteditableAttr = el.getAttribute('contenteditable');\n      const contenteditableFocusable = typeof contenteditableAttr === 'string' &&\n       (contenteditableAttr === '' || contenteditableAttr === 'true');\n\n      const tabindexAttr = globalThis.parseInt(el.getAttribute('tabindex'));\n      const tabindexFocusable = Number.isInteger(tabindexAttr) && tabindexAttr >= 0;\n\n      if (contenteditableFocusable || tabindexFocusable || CrossWindow.isFocusableHTMLElement(el))\n      {\n         // Ensure that an anchor element has an `href` attribute.\n         if (anchorHref && !tabindexFocusable && CrossWindow.isHTMLAnchorElement(el) &&\n          typeof el.getAttribute('href') !== 'string')\n         {\n            return false;\n         }\n\n         return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n          !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n      }\n\n      return false;\n   }\n\n   /**\n    * Convenience method to check if the given data is a valid focus source.\n    *\n    * @param {Element | EventTarget | string}   data - Either an HTMLElement, SVGElement, or selector string.\n    *\n    * @returns {boolean} Is valid focus source.\n    */\n   static isFocusSource(data)\n   {\n      return typeof data === 'string' || (data?.nodeType === Node.ELEMENT_NODE && typeof data?.focus === 'function');\n   }\n\n   /**\n    * Tests if the given `element` is a Element node and has a `focus` method.\n    *\n    * @param {unknown}  element - Element to test for focus method.\n    *\n    * @returns {element is FocusableElement} Whether the element has a focus method.\n    */\n   static isFocusTarget(element)\n   {\n      return element !== void 0 && element !== null && element?.nodeType === Node.ELEMENT_NODE &&\n       typeof element?.focus === 'function';\n   }\n\n   /**\n    * Perform a parent traversal from the current active element attempting to match the given element to test whether\n    * current active element is within that element.\n    *\n    * @param {Element}  element - An element to match in parent traversal from the active element.\n    *\n    * @returns {boolean} Whether there is focus within the given element.\n    */\n   static isFocusWithin(element)\n   {\n      if (!isObject(element) || element?.hidden || !element?.isConnected) { return false; }\n\n      let active = CrossWindow.getActiveElement(element);\n\n      if (!active) { return false; }\n\n      while (active)\n      {\n         if (active === element) { return true; }\n\n         active = active.parentElement;\n      }\n\n      return false;\n   }\n\n   /**\n    * Traverses the given element's parent elements to check if any parent has `offsetWidth` and `offsetHeight` of 0,\n    * indicating that a parent element is hidden. If a parent element is hidden, the given element is also considered\n    * hidden. This is a reasonably efficient check and can be enabled as a filter step in conjunction with focusable\n    * element detection methods like {@link A11yHelper.getFocusableElements}.\n    *\n    * @param {Element}  element - The starting element to check.\n    *\n    * @param {Element}  [stopElement] - The stopping parent element for traversal. If not defined, `document.body` is\n    *        used as the stopping element.\n    *\n    * @returns {boolean} `true` if a parent element of the given element is hidden; otherwise, `false`.\n    */\n   static isParentHidden(element, stopElement)\n   {\n      if (!CrossWindow.isElement(element)) { throw new TypeError(`'element' is not an Element.`); }\n\n      // Set `stopElement` to `document.body` if undefined.\n      stopElement = stopElement ?? CrossWindow.getDocument(element)?.body;\n\n      if (!CrossWindow.isElement(stopElement)) { throw new TypeError(`'stopElement' must be an Element.`); }\n\n      let current = element.parentElement;\n\n      while (current)\n      {\n         // Stop traversal if `stopElement` is reached.\n         if (current === stopElement) { break; }\n\n         // Check if the current parent is hidden by its size.\n         if (current.offsetWidth === 0 && current.offsetHeight === 0) { return true; }\n\n         current = current.parentElement;\n      }\n\n      // No parent is hidden.\n      return false;\n   }\n}\n\n/**\n * @typedef {Element & HTMLOrSVGElement} FocusableElement A focusable element; either HTMLElement or SvgElement.\n */\n\n/**\n * @typedef {object} FocusableElementOptions Options for {@link A11yHelper.getFirstFocusableElement},\n * {@link A11yHelper.getFocusableElements}, and {@link A11yHelper.getLastFocusableElement}.\n *\n * @property {boolean}           [anchorHref=true] When true anchors must have an HREF; default: `true`.\n *\n * @property {Iterable<string>}  [ignoreClasses] Iterable list of classes to ignore elements.\n *\n * @property {Set<Element>}      [ignoreElements] Set of elements to ignore.\n *\n * @property {boolean}           [parentHidden=false] When true elements with hidden parents will be removed;\n * default: `false`.\n *\n * @property {string}            [selectors] Custom list of focusable selectors for `querySelectorAll`.\n */\n\n/**\n * @typedef {object} A11yFocusSource Provides essential data to return focus to an HTMLElement / SVGElement after a\n * series of UI actions like working with context menus and modal dialogs.\n *\n * @property {boolean} [debug] When true logs to console the actions taken in {@link A11yHelper.applyFocusSource}.\n *\n * @property {Iterable<FocusableElement | string>} [focusEl] List of targets to attempt to focus.\n *\n * @property {string} [source] The source of the event: 'keyboard' for instance.\n *\n * @property {number} [x] Potential X coordinate of initial event.\n *\n * @property {number} [y] Potential Y coordinate of initial event.\n */\n\nexport { A11yHelper };\n//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}