{"version":3,"file":"index.js","sources":["../../../node_modules/@typhonjs-svelte/runtime-base/_dist/util/async/index.js"],"sourcesContent":["import { isIterable, isObject, safeAccess } from '@typhonjs-svelte/runtime-base/util/object';\nimport { CrossWindow } from '@typhonjs-svelte/runtime-base/util/browser';\n\n/**\n * Provides utility functions for retrieving data about images.\n */\nclass ImageData\n{\n   /**\n    * Loads given URLs into image elements returning those that resolved with width & height dimensions. This is useful\n    * when the size of an image is necessary before usage.\n    *\n    * @param {string | { url?: string } | Iterable<string | { url?: string }>} urls - A list of image URLS to load or\n    *        object with an `url` property.\n    *\n    * @param {object} [options] - Optional options.\n    *\n    * @param {string} [options.accessor='url'] - Accessor string to access child attribute when `urls` entry contains\n    *        objects.\n    *\n    * @param {boolean} [options.warn=false] - Log debug warnings when a target URL can not be determined; default: false.\n    *\n    * @returns {(Promise<{\n    *    fulfilled: { url: string, width: number, height: number }[],\n    *    rejected: { url: string }[]\n    * }>)} An object with `fulfilled` and `rejected` requests.\n    */\n   static async getDimensions(urls, { accessor = 'url', warn = false } = {})\n   {\n      const promises = [];\n      const fulfilled = [];\n      const rejected = [];\n\n      const targetURLs = isIterable(urls) ? urls : [urls];\n\n      for (const url of targetURLs)\n      {\n         let targetURL;\n\n         if (typeof url === 'string')\n         {\n            targetURL = url;\n         }\n         else if (isObject(url))\n         {\n            targetURL = safeAccess(url, accessor);\n         }\n\n         if (typeof targetURL !== 'string')\n         {\n            if (warn)\n            {\n               console.warn('ImageData.getDimensions warning: Failed to locate target URL.');\n            }\n\n            continue;\n         }\n\n         promises.push(new Promise((resolve, reject) =>\n         {\n            const img = new Image();\n            img.src = targetURL;\n\n            // Get the actual width / height of the image.\n            img.onload = () => resolve({ url: targetURL, width: img.naturalWidth, height: img.naturalHeight });\n            img.onerror = () => reject({ url: targetURL });\n         }));\n      }\n\n      const promiseResults = await Promise.allSettled(promises);\n\n      for (const result of promiseResults)\n      {\n         switch (result.status)\n         {\n            case 'fulfilled':\n               fulfilled.push(result.value);\n               break;\n\n            case 'rejected':\n               rejected.push(result.reason);\n               break;\n         }\n      }\n\n      return { fulfilled, rejected };\n   }\n}\n\n/**\n * Provides management of a single Promise that can be shared and accessed across JS & Svelte components. This allows a\n * Promise to be created and managed as part of the TRL application lifecycle and accessed safely in various control\n * flow scenarios. When resolution of the current managed Promise starts further interaction is prevented.\n *\n * Note: to enable debugging / log statements set the static `logging` variable to true.\n */\nclass ManagedPromise\n{\n   /** @type {boolean} */\n   static #logging = false;\n\n   /** @type {{ isProcessing?: boolean, promise?: Promise, reject: Function, resolve: Function }} */\n   #current;\n\n   /**\n    * @returns {boolean} Whether global logging is enabled.\n    */\n   static get logging()\n   {\n      return this.#logging;\n   }\n\n   /**\n    * @returns {boolean} Whether there is an active managed Promise.\n    */\n   get isActive()\n   {\n      return this.#current !== void 0;\n   }\n\n   /**\n    * @returns {boolean} Whether there is an active managed Promise and resolution is currently being processed.\n    */\n   get isProcessing()\n   {\n      return this.#current !== void 0 ? this.#current.isProcessing : false;\n   }\n\n   /**\n    * Sets global logging enabled state.\n    *\n    * @param {boolean}  logging - New logging enabled state.\n    */\n   static set logging(logging)\n   {\n      if (typeof logging !== 'boolean')\n      {\n         throw new TypeError(`[TRL] ManagedPromise.logging error: 'logging' is not a boolean.`);\n      }\n\n      this.#logging = logging;\n   }\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Resolves any current Promise with undefined and creates a new current Promise.\n    *\n    * @template T\n    *\n    * @param {object} opts - Options.\n    *\n    * @param {boolean}  [opts.reuse=false] - When true if there is an existing live Promise it is returned immediately.\n    *\n    * @returns {Promise<T>} The new current managed Promise.\n    */\n   create({ reuse = false } = {})\n   {\n      if (typeof reuse !== 'boolean')\n      {\n         throw new TypeError(`[TRL] ManagedPromise.create error: 'reuse' is not a boolean.`);\n      }\n\n      if (reuse && this.#current !== void 0 && CrossWindow.isPromise(this.#current.promise))\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.create info: Reusing / returning existing managed Promise.`);\n         }\n\n         return this.#current.promise;\n      }\n\n      if (this.#current !== void 0)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(\n             `[TRL] ManagedPromise.create info: Creating a new Promise and resolving existing immediately.`);\n         }\n\n         this.#current.resolve(void 0);\n         this.#current = void 0;\n      }\n\n      const promise = new Promise((resolve, reject) =>\n      {\n         this.#current = {\n            isProcessing: false,\n            reject,\n            resolve\n         };\n      });\n\n      this.#current.promise = promise;\n\n      return promise;\n   }\n\n   /**\n    * Gets the current Promise if any.\n    *\n    * @returns {Promise<any>} Current Promise.\n    */\n   get()\n   {\n      return this.#current ? this.#current.promise : void 0;\n   }\n\n   /**\n    * Rejects the current Promise if applicable.\n    *\n    * @param {*}  [result] - Result to reject.\n    *\n    * @returns {boolean} Was the promise rejected.\n    */\n   reject(result = void 0)\n   {\n      // Early out as Promise resolution is currently processing.\n      if (this.#current !== void 0 && this.#current.isProcessing)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.reject info: Currently processing promise.`);\n         }\n\n         return true;\n      }\n\n      if (this.#current !== void 0)\n      {\n         this.#current.isProcessing = true;\n\n         if (CrossWindow.isPromise(result))\n         {\n            result.then((value) =>\n            {\n               this.#current.reject(value);\n               this.#current = void 0;\n            }).catch((err) =>\n            {\n               this.#current.reject(err);\n               this.#current = void 0;\n            });\n         }\n         else\n         {\n            this.#current.reject(result);\n            this.#current = void 0;\n         }\n\n         return true;\n      }\n      else\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.reject warning: No current managed Promise to reject.`);\n         }\n\n         return false;\n      }\n   }\n\n   /**\n    * Resolves the current Promise if applicable.\n    *\n    * @param {*}  [result] - Result to resolve.\n    *\n    * @returns {boolean} Was the promise resolved.\n    */\n   resolve(result = void 0)\n   {\n      // Early out as Promise resolution is currently processing.\n      if (this.#current !== void 0 && this.#current.isProcessing)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.resolve info: Currently processing promise.`);\n         }\n\n         return true;\n      }\n\n      if (this.#current !== void 0)\n      {\n         if (CrossWindow.isPromise(result))\n         {\n            this.#current.isProcessing = true;\n\n            result.then((value) =>\n            {\n               this.#current.resolve(value);\n               this.#current = void 0;\n            }).catch((err) =>\n            {\n               this.#current.reject(err);\n               this.#current = void 0;\n            });\n         }\n         else\n         {\n            this.#current.resolve(result);\n            this.#current = void 0;\n         }\n\n         return true;\n      }\n      else\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.resolve warning: No current managed Promise to resolve.`);\n         }\n\n         return false;\n      }\n   }\n}\n\nexport { ImageData, ManagedPromise };\n//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":";;;AAGA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,aAAa,aAAa,CAAC,IAAI,EAAE,EAAE,QAAQ,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,GAAG,EAAE;AAC3E,GAAG;AACH,MAAM,MAAM,QAAQ,GAAG,EAAE;AACzB,MAAM,MAAM,SAAS,GAAG,EAAE;AAC1B,MAAM,MAAM,QAAQ,GAAG,EAAE;;AAEzB,MAAM,MAAM,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC;;AAEzD,MAAM,KAAK,MAAM,GAAG,IAAI,UAAU;AAClC,MAAM;AACN,SAAS,IAAI,SAAS;;AAEtB,SAAS,IAAI,OAAO,GAAG,KAAK,QAAQ;AACpC,SAAS;AACT,YAAY,SAAS,GAAG,GAAG;AAC3B;AACA,cAAc,IAAI,QAAQ,CAAC,GAAG,CAAC;AAC/B,SAAS;AACT,YAAY,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC;AACjD;;AAEA,SAAS,IAAI,OAAO,SAAS,KAAK,QAAQ;AAC1C,SAAS;AACT,YAAY,IAAI,IAAI;AACpB,YAAY;AACZ,eAAe,OAAO,CAAC,IAAI,CAAC,+DAA+D,CAAC;AAC5F;;AAEA,YAAY;AACZ;;AAEA,SAAS,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;AACnD,SAAS;AACT,YAAY,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE;AACnC,YAAY,GAAG,CAAC,GAAG,GAAG,SAAS;;AAE/B;AACA,YAAY,GAAG,CAAC,MAAM,GAAG,MAAM,OAAO,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,CAAC,YAAY,EAAE,MAAM,EAAE,GAAG,CAAC,aAAa,EAAE,CAAC;AAC9G,YAAY,GAAG,CAAC,OAAO,GAAG,MAAM,MAAM,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;AAC1D,UAAU,CAAC,CAAC;AACZ;;AAEA,MAAM,MAAM,cAAc,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC;;AAE/D,MAAM,KAAK,MAAM,MAAM,IAAI,cAAc;AACzC,MAAM;AACN,SAAS,QAAQ,MAAM,CAAC,MAAM;AAC9B;AACA,YAAY,KAAK,WAAW;AAC5B,eAAe,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AAC3C,eAAe;;AAEf,YAAY,KAAK,UAAU;AAC3B,eAAe,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAC3C,eAAe;AACf;AACA;;AAEA,MAAM,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG,OAAO,QAAQ,GAAG,KAAK;;AAE1B;AACA,GAAG,QAAQ;;AAEX;AACA;AACA;AACA,GAAG,WAAW,OAAO;AACrB,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,QAAQ;AAC1B;;AAEA;AACA;AACA;AACA,GAAG,IAAI,QAAQ;AACf,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,QAAQ,KAAK,MAAM;AACrC;;AAEA;AACA;AACA;AACA,GAAG,IAAI,YAAY;AACnB,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,QAAQ,KAAK,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,KAAK;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG,WAAW,OAAO,CAAC,OAAO;AAC7B,GAAG;AACH,MAAM,IAAI,OAAO,OAAO,KAAK,SAAS;AACtC,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,+DAA+D,CAAC,CAAC;AAC/F;;AAEA,MAAM,IAAI,CAAC,QAAQ,GAAG,OAAO;AAC7B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,MAAM,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,GAAG,EAAE;AAChC,GAAG;AACH,MAAM,IAAI,OAAO,KAAK,KAAK,SAAS;AACpC,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,4DAA4D,CAAC,CAAC;AAC5F;;AAEA,MAAM,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,IAAI,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC3F,MAAM;AACN,SAAS,IAAI,cAAc,CAAC,QAAQ;AACpC,SAAS;AACT,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,+EAA+E,CAAC,CAAC;AAC3G;;AAEA,SAAS,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO;AACrC;;AAEA,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM;AAClC,MAAM;AACN,SAAS,IAAI,cAAc,CAAC,QAAQ;AACpC,SAAS;AACT,YAAY,OAAO,CAAC,IAAI;AACxB,aAAa,CAAC,4FAA4F,CAAC,CAAC;AAC5G;;AAEA,SAAS,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;AACtC,SAAS,IAAI,CAAC,QAAQ,GAAG,MAAM;AAC/B;;AAEA,MAAM,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;AAClD,MAAM;AACN,SAAS,IAAI,CAAC,QAAQ,GAAG;AACzB,YAAY,YAAY,EAAE,KAAK;AAC/B,YAAY,MAAM;AAClB,YAAY;AACZ,UAAU;AACV,OAAO,CAAC;;AAER,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO;;AAErC,MAAM,OAAO,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG;AACN,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,MAAM;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM;AACzB,GAAG;AACH;AACA,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY;AAChE,MAAM;AACN,SAAS,IAAI,cAAc,CAAC,QAAQ;AACpC,SAAS;AACT,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,+DAA+D,CAAC,CAAC;AAC3F;;AAEA,SAAS,OAAO,IAAI;AACpB;;AAEA,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM;AAClC,MAAM;AACN,SAAS,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI;;AAE1C,SAAS,IAAI,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC;AAC1C,SAAS;AACT,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK;AAC9B,YAAY;AACZ,eAAe,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;AAC1C,eAAe,IAAI,CAAC,QAAQ,GAAG,MAAM;AACrC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG;AACzB,YAAY;AACZ,eAAe,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;AACxC,eAAe,IAAI,CAAC,QAAQ,GAAG,MAAM;AACrC,aAAa,CAAC;AACd;AACA;AACA,SAAS;AACT,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;AACxC,YAAY,IAAI,CAAC,QAAQ,GAAG,MAAM;AAClC;;AAEA,SAAS,OAAO,IAAI;AACpB;AACA;AACA,MAAM;AACN,SAAS,IAAI,cAAc,CAAC,QAAQ;AACpC,SAAS;AACT,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,0EAA0E,CAAC,CAAC;AACtG;;AAEA,SAAS,OAAO,KAAK;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,CAAC,MAAM,GAAG,MAAM;AAC1B,GAAG;AACH;AACA,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY;AAChE,MAAM;AACN,SAAS,IAAI,cAAc,CAAC,QAAQ;AACpC,SAAS;AACT,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,gEAAgE,CAAC,CAAC;AAC5F;;AAEA,SAAS,OAAO,IAAI;AACpB;;AAEA,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM;AAClC,MAAM;AACN,SAAS,IAAI,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC;AAC1C,SAAS;AACT,YAAY,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI;;AAE7C,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK;AAC9B,YAAY;AACZ,eAAe,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;AAC3C,eAAe,IAAI,CAAC,QAAQ,GAAG,MAAM;AACrC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG;AACzB,YAAY;AACZ,eAAe,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;AACxC,eAAe,IAAI,CAAC,QAAQ,GAAG,MAAM;AACrC,aAAa,CAAC;AACd;AACA;AACA,SAAS;AACT,YAAY,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;AACzC,YAAY,IAAI,CAAC,QAAQ,GAAG,MAAM;AAClC;;AAEA,SAAS,OAAO,IAAI;AACpB;AACA;AACA,MAAM;AACN,SAAS,IAAI,cAAc,CAAC,QAAQ;AACpC,SAAS;AACT,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,4EAA4E,CAAC,CAAC;AACxG;;AAEA,SAAS,OAAO,KAAK;AACrB;AACA;AACA;;;;","x_google_ignoreList":[0]}