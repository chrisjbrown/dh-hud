{"version":3,"file":"dh-hud.js","sources":["../node_modules/@typhonjs-fvtt/runtime/_dist/util/object/index.js","../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/environment.js","../node_modules/svelte/src/runtime/internal/loop.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/style_manager.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/Component.js","../node_modules/svelte/src/shared/version.js","../node_modules/svelte/src/runtime/internal/dev.js","../node_modules/svelte/src/runtime/store/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/util/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/browser/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/web-storage/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/writable-derived/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/util/index.js","../node_modules/svelte/src/runtime/easing/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/easing/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/a11y/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/math/util/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/math/interpolate/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/math/gl-matrix/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/dom/style/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/animate/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/position/index.js","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/cssVariables.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/dom/observer/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/dom/observer/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/dom/style/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/util/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/transition/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/AppShellContextInternal.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/ResizeHandleTransform.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/ResizableHandle.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/internal/dom/TJSFocusWrap.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/EmptyApplicationShell.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/index.js","../src/view/Panel.svelte","../src/view/popovers/ItemsPopover.svelte","../node_modules/@popperjs/core/dist/esm/enums.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getNodeName.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getWindow.js","../node_modules/@popperjs/core/dist/esm/dom-utils/instanceOf.js","../node_modules/@popperjs/core/dist/esm/modifiers/applyStyles.js","../node_modules/@popperjs/core/dist/esm/utils/getBasePlacement.js","../node_modules/@popperjs/core/dist/esm/utils/math.js","../node_modules/@popperjs/core/dist/esm/utils/userAgent.js","../node_modules/@popperjs/core/dist/esm/dom-utils/isLayoutViewport.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getBoundingClientRect.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getLayoutRect.js","../node_modules/@popperjs/core/dist/esm/dom-utils/contains.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getComputedStyle.js","../node_modules/@popperjs/core/dist/esm/dom-utils/isTableElement.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getDocumentElement.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getParentNode.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getOffsetParent.js","../node_modules/@popperjs/core/dist/esm/utils/getMainAxisFromPlacement.js","../node_modules/@popperjs/core/dist/esm/utils/within.js","../node_modules/@popperjs/core/dist/esm/utils/getFreshSideObject.js","../node_modules/@popperjs/core/dist/esm/utils/mergePaddingObject.js","../node_modules/@popperjs/core/dist/esm/utils/expandToHashMap.js","../node_modules/@popperjs/core/dist/esm/modifiers/arrow.js","../node_modules/@popperjs/core/dist/esm/utils/getVariation.js","../node_modules/@popperjs/core/dist/esm/modifiers/computeStyles.js","../node_modules/@popperjs/core/dist/esm/modifiers/eventListeners.js","../node_modules/@popperjs/core/dist/esm/utils/getOppositePlacement.js","../node_modules/@popperjs/core/dist/esm/utils/getOppositeVariationPlacement.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getWindowScroll.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getWindowScrollBarX.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getViewportRect.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getDocumentRect.js","../node_modules/@popperjs/core/dist/esm/dom-utils/isScrollParent.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getScrollParent.js","../node_modules/@popperjs/core/dist/esm/dom-utils/listScrollParents.js","../node_modules/@popperjs/core/dist/esm/utils/rectToClientRect.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getClippingRect.js","../node_modules/@popperjs/core/dist/esm/utils/computeOffsets.js","../node_modules/@popperjs/core/dist/esm/utils/detectOverflow.js","../node_modules/@popperjs/core/dist/esm/utils/computeAutoPlacement.js","../node_modules/@popperjs/core/dist/esm/modifiers/flip.js","../node_modules/@popperjs/core/dist/esm/modifiers/hide.js","../node_modules/@popperjs/core/dist/esm/modifiers/offset.js","../node_modules/@popperjs/core/dist/esm/modifiers/popperOffsets.js","../node_modules/@popperjs/core/dist/esm/utils/getAltAxis.js","../node_modules/@popperjs/core/dist/esm/modifiers/preventOverflow.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getHTMLElementScroll.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getNodeScroll.js","../node_modules/@popperjs/core/dist/esm/dom-utils/getCompositeRect.js","../node_modules/@popperjs/core/dist/esm/utils/orderModifiers.js","../node_modules/@popperjs/core/dist/esm/utils/debounce.js","../node_modules/@popperjs/core/dist/esm/utils/mergeByName.js","../node_modules/@popperjs/core/dist/esm/createPopper.js","../node_modules/@popperjs/core/dist/esm/popper.js","../src/view/popovers/Popover.svelte","../src/view/Attacks.svelte","../src/view/Features.svelte","../src/view/Domains.svelte","../src/view/Portrait.svelte","../src/view/Stats.svelte","../src/view/Overlay.svelte","../src/view/PositionBasicOverlayApp.ts","../src/constants.ts","../src/index.ts"],"sourcesContent":["function set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\n/**\n * Provides common object manipulation utility functions and TypeScript type guards.\n *\n * @packageDocumentation\n */\n/**\n * Freezes all entries traversed that are objects including entries in arrays.\n *\n * @param data - An object or array.\n *\n * @param [options] - Options\n *\n * @param [options.skipKeys] - A Set of strings indicating keys of objects to not freeze.\n *\n * @returns The frozen object.\n *\n * @typeParam T - Type of data.\n */\nfunction deepFreeze(data, { skipKeys } = {}) {\n    if (typeof data !== 'object' || data === null) {\n        throw new TypeError(`deepFreeze error: 'data' is not an object or array.`);\n    }\n    if (skipKeys !== void 0 && Object.prototype.toString.call(skipKeys) !== '[object Set]') {\n        throw new TypeError(`deepFreeze error: 'options.skipKeys' is not a Set.`);\n    }\n    const stack = [data];\n    while (stack.length > 0) {\n        const obj = stack.pop();\n        if (typeof obj !== 'object' || obj === null || Object.isFrozen(obj)) {\n            continue;\n        }\n        // Collect nested properties before freezing.\n        const children = [];\n        if (Array.isArray(obj)) {\n            for (let cntr = 0; cntr < obj.length; cntr++) {\n                children.push(obj[cntr]);\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.hasOwn(obj, key) && !skipKeys?.has?.(key)) {\n                    children.push(obj[key]);\n                }\n            }\n        }\n        // Freeze after collecting children to avoid modifying a frozen object.\n        Object.freeze(obj);\n        // Push collected children onto the stack for further processing.\n        stack.push(...children);\n    }\n    return data;\n}\nfunction deepMerge(target, ...sourceObj) {\n    if (Object.prototype.toString.call(target) !== '[object Object]') {\n        throw new TypeError(`deepMerge error: 'target' is not an object.`);\n    }\n    if (sourceObj.length === 0) {\n        throw new TypeError(`deepMerge error: 'sourceObj' is not an object.`);\n    }\n    for (let cntr = 0; cntr < sourceObj.length; cntr++) {\n        if (Object.prototype.toString.call(sourceObj[cntr]) !== '[object Object]') {\n            throw new TypeError(`deepMerge error: 'sourceObj[${cntr}]' is not an object.`);\n        }\n    }\n    // When merging a single source object there is an implementation that is twice as fast as multiple source objects.\n    if (sourceObj.length === 1) {\n        const stack = [];\n        for (const obj of sourceObj) {\n            stack.push({ target, source: obj });\n        }\n        while (stack.length > 0) {\n            const { target, source } = stack.pop(); // LIFO but maintains correct merge order.\n            for (const prop in source) {\n                if (Object.hasOwn(source, prop)) {\n                    const sourceValue = source[prop];\n                    const targetValue = target[prop];\n                    // If both values are plain objects, enqueue for further merging.\n                    if (Object.hasOwn(target, prop) && targetValue?.constructor === Object &&\n                        sourceValue?.constructor === Object) {\n                        stack.push({ target: targetValue, source: sourceValue });\n                    }\n                    else {\n                        target[prop] = sourceValue;\n                    }\n                }\n            }\n        }\n    }\n    else // Stack implementation for multiple source objects.\n     {\n        const stack = [{ target, sources: sourceObj }];\n        while (stack.length > 0) {\n            const { target, sources } = stack.pop();\n            for (const source of sources) {\n                for (const prop in source) {\n                    if (Object.hasOwn(source, prop)) {\n                        const sourceValue = source[prop];\n                        const targetValue = target[prop];\n                        // If both values are plain objects, push for further merging with a new object.\n                        if (Object.hasOwn(target, prop) && targetValue?.constructor === Object &&\n                            sourceValue?.constructor === Object) {\n                            target[prop] = Object.assign({}, targetValue); // Copy existing target data.\n                            stack.push({ target: target[prop], sources: [sourceValue] });\n                        }\n                        else {\n                            target[prop] = sourceValue;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return target;\n}\n/**\n * Seals all entries traversed that are objects including entries in arrays.\n *\n * @param data - An object or array.\n *\n * @param [options] - Options\n *\n * @param [options.skipKeys] - A Set of strings indicating keys of objects to not seal.\n *\n * @returns The sealed object.\n *\n * @typeParam T - Type of data.\n */\nfunction deepSeal(data, { skipKeys } = {}) {\n    if (typeof data !== 'object' || data === null) {\n        throw new TypeError(`deepSeal error: 'data' is not an object or array.`);\n    }\n    if (skipKeys !== void 0 && Object.prototype.toString.call(skipKeys) !== '[object Set]') {\n        throw new TypeError(`deepSeal error: 'options.skipKeys' is not a Set.`);\n    }\n    const stack = [data];\n    while (stack.length > 0) {\n        const obj = stack.pop();\n        if (typeof obj !== 'object' || obj === null || Object.isSealed(obj)) {\n            continue;\n        }\n        // Collect nested properties before freezing.\n        const children = [];\n        if (Array.isArray(obj)) {\n            for (let cntr = 0; cntr < obj.length; cntr++) {\n                children.push(obj[cntr]);\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.hasOwn(obj, key) && !skipKeys?.has?.(key)) {\n                    children.push(obj[key]);\n                }\n            }\n        }\n        // Freeze after collecting children to avoid modifying a frozen object.\n        Object.seal(obj);\n        // Push collected children onto the stack for further processing.\n        stack.push(...children);\n    }\n    return data;\n}\n/**\n * Determine if the given object has a getter & setter accessor.\n *\n * @param object - An object.\n *\n * @param accessor - Accessor to test.\n *\n * @returns Whether the given object has the getter and setter for accessor.\n *\n * @typeParam T - Type of data.\n * @typeParam K - Accessor key.\n */\nfunction hasAccessor(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.get !== void 0 && iDescriptor.set !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.get !== void 0 && descriptor.set !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Determine if the given object has a getter accessor.\n *\n * @param object - An object.\n *\n * @param accessor - Accessor to test.\n *\n * @returns Whether the given object has the getter for accessor.\n *\n * @typeParam T - Type of data.\n * @typeParam K - Accessor key.\n */\nfunction hasGetter(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.get !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.get !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Returns whether the target is or has the given prototype walking up the prototype chain.\n *\n * @param target - Any target class / constructor function to test.\n *\n * @param Prototype - Class / constructor function to find.\n *\n * @returns Target matches prototype.\n *\n * @typeParam T - Prototype class / constructor.\n */\nfunction hasPrototype(target, Prototype) {\n    if (typeof target !== 'function') {\n        return false;\n    }\n    if (target === Prototype) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\n        if (proto === Prototype) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Determine if the given object has a setter accessor.\n *\n * @param object - An object.\n *\n * @param accessor - Accessor to test.\n *\n * @returns Whether the given object has the setter for accessor.\n *\n * @typeParam T - Type of data.\n * @typeParam K - Accessor key.\n */\nfunction hasSetter(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.set !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.set !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Tests for whether an object is async iterable.\n *\n * @param value - Any value.\n *\n * @returns Whether value is async iterable.\n */\nfunction isAsyncIterable(value) {\n    if (typeof value !== 'object' || value === null || value === void 0) {\n        return false;\n    }\n    return Symbol.asyncIterator in value;\n}\n/**\n * Tests for whether an object is iterable.\n *\n * @param value - Any value.\n *\n * @returns Whether object is iterable.\n */\nfunction isIterable(value) {\n    if (value === null || value === void 0 || typeof value !== 'object') {\n        return false;\n    }\n    return Symbol.iterator in value;\n}\n/**\n * Tests for whether object is not null, typeof object, and not an array.\n *\n * @param value - Any value.\n *\n * @returns Is it an object.\n */\nfunction isObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n}\n/**\n * Tests for whether the given value is a plain object.\n *\n * An object is plain if it is created by either: `{}`, `new Object()` or `Object.create(null)`.\n *\n * @param value - Any value\n *\n * @returns Is it a plain object.\n */\nfunction isPlainObject(value) {\n    if (Object.prototype.toString.call(value) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Safely returns keys on an object or an empty array if not an object.\n *\n * @param object - An object.\n *\n * @returns Object keys or empty array.\n */\nfunction objectKeys(object) {\n    return typeof object === 'object' && object !== null ? Object.keys(object) : [];\n}\n/**\n * Safely returns an objects size. Note for String objects Unicode is not taken into consideration.\n *\n * @param object - Any value, but size returned for object / Map / Set / arrays / strings.\n *\n * @returns Size of object.\n */\nfunction objectSize(object) {\n    if (object === void 0 || object === null || typeof object !== 'object') {\n        return 0;\n    }\n    const tag = Object.prototype.toString.call(object);\n    if (tag === '[object Map]' || tag === '[object Set]') {\n        return object.size;\n    }\n    if (tag === '[object String]') {\n        return object.length;\n    }\n    return Object.keys(object).length;\n}\n/**\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param data - An object to access entry data.\n *\n * @param accessor - A string describing the entries to access with keys separated by `.`.\n *\n * @param [defaultValue] - (Optional) A default value to return if an entry for accessor is not found.\n *\n * @returns The value referenced by the accessor.\n *\n * @typeParam T - Type of data.\n * @typeParam P - Accessor type.\n * @typeParam R - Return value / Inferred deep access type or any provided default value type.\n */\nfunction safeAccess(data, accessor, defaultValue) {\n    if (typeof data !== 'object' || data === null) {\n        return defaultValue;\n    }\n    if (typeof accessor !== 'string') {\n        return defaultValue;\n    }\n    const keys = accessor.split('.');\n    let result = data;\n    // Walk through the given object by the accessor indexes.\n    for (let cntr = 0; cntr < keys.length; cntr++) {\n        // If the next level of object access is undefined or null then return the default value.\n        if (result[keys[cntr]] === void 0 || result[keys[cntr]] === null) {\n            return defaultValue;\n        }\n        result = result[keys[cntr]];\n    }\n    return result;\n}\n/**\n * Compares a source object and values of entries against a target object. If the entries in the source object match\n * the target object then `true` is returned otherwise `false`. If either object is undefined or null then false\n * is returned.\n *\n * Note: The source and target should be JSON objects.\n *\n * @param source - Source object.\n *\n * @param target - Target object.\n *\n * @param [options] - Options.\n *\n * @param [options.arrayIndex] - Set to `false` to exclude equality testing for array contents; default: `true`.\n *\n * @param [options.hasOwnOnly] - Set to `false` to include enumerable prototype properties; default: `true`.\n *\n * @returns True if equal.\n */\nfunction safeEqual(source, target, options) {\n    if (typeof source !== 'object' || source === null || typeof target !== 'object' || target === null) {\n        return false;\n    }\n    for (const accessor of safeKeyIterator(source, options)) {\n        const sourceObjectValue = safeAccess(source, accessor);\n        const targetObjectValue = safeAccess(target, accessor);\n        if (sourceObjectValue !== targetObjectValue) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns an iterator of safe keys useful with {@link safeAccess} and {@link safeSet} by traversing the given object.\n *\n * Note: Keys are only generated for JSON objects; {@link Map} and {@link Set} are not indexed.\n *\n * @param data - An object to traverse for accessor keys.\n *\n * @param [options] - Options.\n *\n * @param [options.arrayIndex] - Set to `false` to exclude safe keys for array indexing; default: `true`.\n *\n * @param [options.hasOwnOnly] - Set to `false` to include enumerable prototype properties; default: `true`.\n *\n * @returns Safe key iterator.\n */\nfunction* safeKeyIterator(data, { arrayIndex = true, hasOwnOnly = true } = {}) {\n    if (typeof data !== 'object' || data === null) {\n        throw new TypeError(`safeKeyIterator error: 'data' is not an object.`);\n    }\n    if (typeof arrayIndex !== 'boolean') {\n        throw new TypeError(`safeKeyIterator error: 'options.arrayIndex' is not a boolean.`);\n    }\n    if (typeof hasOwnOnly !== 'boolean') {\n        throw new TypeError(`safeKeyIterator error: 'options.hasOwnOnly' is not a boolean.`);\n    }\n    const stack = [{ obj: data, prefix: '' }];\n    while (stack.length > 0) {\n        const { obj, prefix } = stack.pop();\n        for (const key in obj) {\n            if (hasOwnOnly && !Object.hasOwn(obj, key)) {\n                continue;\n            }\n            const fullKey = prefix ? `${prefix}.${key}` : key;\n            const value = obj[key];\n            if (Array.isArray(value)) {\n                if (!arrayIndex) {\n                    continue;\n                }\n                for (let cntr = 0; cntr < value.length; cntr++) {\n                    yield `${fullKey}.${cntr}`;\n                }\n            }\n            else if (typeof value === 'object' && value !== null) {\n                stack.push({ obj: value, prefix: fullKey }); // Push to stack for DFS traversal.\n            }\n            else if (typeof value !== 'function') {\n                yield fullKey;\n            }\n        }\n    }\n}\n/**\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param data - An object to access entry data.\n *\n * @param accessor - A string describing the entries to access.\n *\n * @param value - A new value to set if an entry for accessor is found.\n *\n * @param [options] - Options.\n *\n * @param [options.operation] - Operation to perform including: `add`, `div`, `mult`, `set`, `set-undefined`, `sub`;\n *        default: `set`.\n *\n * @param [options.createMissing] - If `true` missing accessor entries will be created as objects automatically;\n *        default: `false`.\n *\n * @returns True if successful.\n */\nfunction safeSet(data, accessor, value, { operation = 'set', createMissing = false } = {}) {\n    if (typeof data !== 'object' || data === null) {\n        throw new TypeError(`safeSet error: 'data' is not an object.`);\n    }\n    if (typeof accessor !== 'string') {\n        throw new TypeError(`safeSet error: 'accessor' is not a string.`);\n    }\n    if (typeof operation !== 'string') {\n        throw new TypeError(`safeSet error: 'options.operation' is not a string.`);\n    }\n    if (operation !== 'add' && operation !== 'div' && operation !== 'mult' && operation !== 'set' &&\n        operation !== 'set-undefined' && operation !== 'sub') {\n        throw new Error(`safeSet error: Unknown 'options.operation'.`);\n    }\n    if (typeof createMissing !== 'boolean') {\n        throw new TypeError(`safeSet error: 'options.createMissing' is not a boolean.`);\n    }\n    const access = accessor.split('.');\n    let result = false;\n    // Verify first level missing property.\n    if (access.length === 1 && !createMissing && !(access[0] in data)) {\n        return false;\n    }\n    // Walk through the given object by the accessor indexes.\n    for (let cntr = 0; cntr < access.length; cntr++) {\n        // If data is an array perform validation that the accessor is a positive integer otherwise quit.\n        if (Array.isArray(data)) {\n            const number = (+access[cntr]);\n            if (!Number.isInteger(number) || number < 0) {\n                return false;\n            }\n        }\n        if (cntr === access.length - 1) {\n            switch (operation) {\n                case 'add':\n                    data[access[cntr]] += value;\n                    result = true;\n                    break;\n                case 'div':\n                    data[access[cntr]] /= value;\n                    result = true;\n                    break;\n                case 'mult':\n                    data[access[cntr]] *= value;\n                    result = true;\n                    break;\n                case 'set':\n                    data[access[cntr]] = value;\n                    result = true;\n                    break;\n                case 'set-undefined':\n                    if (data[access[cntr]] === void 0) {\n                        data[access[cntr]] = value;\n                    }\n                    result = true;\n                    break;\n                case 'sub':\n                    data[access[cntr]] -= value;\n                    result = true;\n                    break;\n            }\n        }\n        else {\n            // If createMissing is true and the next level of object access is undefined then create a new object entry.\n            if (createMissing && data[access[cntr]] === void 0) {\n                data[access[cntr]] = {};\n            }\n            // Abort if the next level is null or not an object and containing a value.\n            if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') {\n                return false;\n            }\n            data = data[access[cntr]];\n        }\n    }\n    return result;\n}\n\nexport { deepFreeze, deepMerge, deepSeal, hasAccessor, hasGetter, hasPrototype, hasSetter, isAsyncIterable, isIterable, isObject, isPlainObject, klona, objectKeys, objectSize, safeAccess, safeEqual, safeKeyIterator, safeSet };\n//# sourceMappingURL=index.js.map\n","/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.$$l[type]) {\n\t\t\t\tconst idx = this.$$l[type].indexOf(listener);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis.$$l[type].splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.20';\nexport const PUBLIC_VERSION = '4';\n","import {\n\tcustom_event,\n\tappend,\n\tappend_hydration,\n\tinsert,\n\tinsert_hydration,\n\tdetach,\n\tlisten,\n\tattr\n} from './dom.js';\nimport { SvelteComponent } from './Component.js';\nimport { is_void } from '../../shared/utils/names.js';\nimport { VERSION } from '../../shared/version.js';\nimport { contenteditable_truthy_values } from './utils.js';\nimport { ensure_array_like } from './each.js';\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @returns {void}\n */\nexport function dispatch_dev(type, detail) {\n\tdocument.dispatchEvent(custom_event(type, { version: VERSION, ...detail }, { bubbles: true }));\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append_dev(target, node) {\n\tdispatch_dev('SvelteDOMInsert', { target, node });\n\tappend(target, node);\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append_hydration_dev(target, node) {\n\tdispatch_dev('SvelteDOMInsert', { target, node });\n\tappend_hydration(target, node);\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert_dev(target, node, anchor) {\n\tdispatch_dev('SvelteDOMInsert', { target, node, anchor });\n\tinsert(target, node, anchor);\n}\n\n/** @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert_hydration_dev(target, node, anchor) {\n\tdispatch_dev('SvelteDOMInsert', { target, node, anchor });\n\tinsert_hydration(target, node, anchor);\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach_dev(node) {\n\tdispatch_dev('SvelteDOMRemove', { node });\n\tdetach(node);\n}\n\n/**\n * @param {Node} before\n * @param {Node} after\n * @returns {void}\n */\nexport function detach_between_dev(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tdetach_dev(before.nextSibling);\n\t}\n}\n\n/**\n * @param {Node} after\n * @returns {void}\n */\nexport function detach_before_dev(after) {\n\twhile (after.previousSibling) {\n\t\tdetach_dev(after.previousSibling);\n\t}\n}\n\n/**\n * @param {Node} before\n * @returns {void}\n */\nexport function detach_after_dev(before) {\n\twhile (before.nextSibling) {\n\t\tdetach_dev(before.nextSibling);\n\t}\n}\n\n/**\n * @param {Node} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @param {boolean} [has_prevent_default]\n * @param {boolean} [has_stop_propagation]\n * @param {boolean} [has_stop_immediate_propagation]\n * @returns {() => void}\n */\nexport function listen_dev(\n\tnode,\n\tevent,\n\thandler,\n\toptions,\n\thas_prevent_default,\n\thas_stop_propagation,\n\thas_stop_immediate_propagation\n) {\n\tconst modifiers =\n\t\toptions === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n\tif (has_prevent_default) modifiers.push('preventDefault');\n\tif (has_stop_propagation) modifiers.push('stopPropagation');\n\tif (has_stop_immediate_propagation) modifiers.push('stopImmediatePropagation');\n\tdispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n\tconst dispose = listen(node, event, handler, options);\n\treturn () => {\n\t\tdispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n\t\tdispose();\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr_dev(node, attribute, value) {\n\tattr(node, attribute, value);\n\tif (value == null) dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n\telse dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\n\n/**\n * @param {Element} node\n * @param {string} property\n * @param {any} [value]\n * @returns {void}\n */\nexport function prop_dev(node, property, value) {\n\tnode[property] = value;\n\tdispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} property\n * @param {any} [value]\n * @returns {void}\n */\nexport function dataset_dev(node, property, value) {\n\tnode.dataset[property] = value;\n\tdispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_dev(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\tdispatch_dev('SvelteDOMSetData', { node: text, data });\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable_dev(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\tdispatch_dev('SvelteDOMSetData', { node: text, data });\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable_dev(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable_dev(text, data);\n\t} else {\n\t\tset_data_dev(text, data);\n\t}\n}\n\nexport function ensure_array_like_dev(arg) {\n\tif (\n\t\ttypeof arg !== 'string' &&\n\t\t!(arg && typeof arg === 'object' && 'length' in arg) &&\n\t\t!(typeof Symbol === 'function' && arg && Symbol.iterator in arg)\n\t) {\n\t\tthrow new Error('{#each} only works with iterable values.');\n\t}\n\treturn ensure_array_like(arg);\n}\n\n/**\n * @returns {void} */\nexport function validate_slots(name, slot, keys) {\n\tfor (const slot_key of Object.keys(slot)) {\n\t\tif (!~keys.indexOf(slot_key)) {\n\t\t\tconsole.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n\t\t}\n\t}\n}\n\n/**\n * @param {unknown} tag\n * @returns {void}\n */\nexport function validate_dynamic_element(tag) {\n\tconst is_string = typeof tag === 'string';\n\tif (tag && !is_string) {\n\t\tthrow new Error('<svelte:element> expects \"this\" attribute to be a string.');\n\t}\n}\n\n/**\n * @param {undefined | string} tag\n * @returns {void}\n */\nexport function validate_void_dynamic_element(tag) {\n\tif (tag && is_void(tag)) {\n\t\tconsole.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n\t}\n}\n\nexport function construct_svelte_component_dev(component, props) {\n\tconst error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n\ttry {\n\t\tconst instance = new component(props);\n\t\tif (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n\t\t\tthrow new Error(error_message);\n\t\t}\n\t\treturn instance;\n\t} catch (err) {\n\t\tconst { message } = err;\n\t\tif (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n\t\t\tthrow new Error(error_message);\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n *\n * Can be used to create strongly typed Svelte components.\n *\n * #### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponent } from \"svelte\";\n * export class MyComponent extends SvelteComponent<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n * @template {Record<string, any>} [Slots=any]\n * @extends {SvelteComponent<Props, Events>}\n */\nexport class SvelteComponentDev extends SvelteComponent {\n\t/**\n\t * For type checking capabilities only.\n\t * Does not exist at runtime.\n\t * ### DO NOT USE!\n\t *\n\t * @type {Props}\n\t */\n\t$$prop_def;\n\t/**\n\t * For type checking capabilities only.\n\t * Does not exist at runtime.\n\t * ### DO NOT USE!\n\t *\n\t * @type {Events}\n\t */\n\t$$events_def;\n\t/**\n\t * For type checking capabilities only.\n\t * Does not exist at runtime.\n\t * ### DO NOT USE!\n\t *\n\t * @type {Slots}\n\t */\n\t$$slot_def;\n\n\t/** @param {import('./public.js').ComponentConstructorOptions<Props>} options */\n\tconstructor(options) {\n\t\tif (!options || (!options.target && !options.$$inline)) {\n\t\t\tthrow new Error(\"'target' is a required option\");\n\t\t}\n\t\tsuper();\n\t}\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tsuper.$destroy();\n\t\tthis.$destroy = () => {\n\t\t\tconsole.warn('Component was already destroyed'); // eslint-disable-line no-console\n\t\t};\n\t}\n\n\t/** @returns {void} */\n\t$capture_state() {}\n\n\t/** @returns {void} */\n\t$inject_state() {}\n}\n/**\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n * @template {Record<string, any>} [Slots=any]\n * @deprecated Use `SvelteComponent` instead. See PR for more information: https://github.com/sveltejs/svelte/pull/8512\n * @extends {SvelteComponentDev<Props, Events, Slots>}\n */\nexport class SvelteComponentTyped extends SvelteComponentDev {}\n\n/** @returns {() => void} */\nexport function loop_guard(timeout) {\n\tconst start = Date.now();\n\treturn () => {\n\t\tif (Date.now() - start > timeout) {\n\t\t\tthrow new Error('Infinite loop detected');\n\t\t}\n\t};\n}\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","/**\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\n * function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isReadableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a minimal writable store by having a\n * `subscribe` and `set` functions.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a {@link MinimalWritable} store.\n */\nfunction isMinimalWritableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * `set`, and `update` functions.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe`, `set, and `update`\n * functions.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isWritableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.set === 'function' &&\n          typeof store.update === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Subscribes to the given store with the update function provided and ignores the first automatic\n * update. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} update - function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeIgnoreFirst(store, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) =>\n   {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n      }\n      else\n      {\n         update(value);\n      }\n   });\n}\n\n/**\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\n * subscription. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} first - Function to receive first update.\n *\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeFirstRest(store, first, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) =>\n   {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n         first(value);\n      }\n      else\n      {\n         update(value);\n      }\n   });\n}\n\nexport { isMinimalWritableStore, isReadableStore, isWritableStore, subscribeFirstRest, subscribeIgnoreFirst };\n//# sourceMappingURL=index.js.map\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides utility methods for checking browser capabilities.\n *\n * @see https://kilianvalkhof.com/2021/web/detecting-media-query-support-in-css-and-javascript/\n *\n * @privateRemarks\n * TODO: perhaps add support for various standard media query checks for level 4 & 5.\n */\nclass BrowserSupports\n{\n   /**\n    * Check for container query support.\n    *\n    * @returns {boolean} True if container queries supported.\n    */\n   static get containerQueries()\n   {\n      return 'container' in document.documentElement.style;\n   }\n}\n\n/**\n * Provides cross window checks for DOM nodes / elements, events, and essential duck typing for any class based object\n * with a constructor name. The impetus is that certain browsers such as Chrome and Firefox behave differently when\n * performing `instanceof` checks when elements are moved between browser windows. With Firefox in particular the\n * entire JS runtime can not use `instanceof` checks as the instances of fundamental DOM elements differ between\n * windows.\n *\n * TRL supports moving applications from a main central browser window and popping them out into separate standalone\n * app instances in a separate browser window. In this case for essential DOM element and event checks it is necessary\n * to employ the workarounds found in `CrossWindow`.\n */\nclass CrossWindow\n{\n   /**\n    * @private\n    */\n   constructor() {} // eslint-disable-line no-useless-constructor\n\n   /**\n    * Class names for all focusable element types.\n    *\n    * @type {string[]}\n    */\n   static #FocusableElementClassNames = ['HTMLAnchorElement', 'HTMLButtonElement', 'HTMLDetailsElement',\n    'HTMLEmbedElement', 'HTMLIFrameElement', 'HTMLInputElement', 'HTMLObjectElement', 'HTMLSelectElement',\n     'HTMLTextAreaElement'];\n\n   /**\n    * DOM nodes with defined `ownerDocument` property.\n    *\n    * @type {Set<number>}\n    */\n   static #NodesWithOwnerDocument = new Set([Node.ELEMENT_NODE, Node.TEXT_NODE, Node.COMMENT_NODE,\n    Node.DOCUMENT_FRAGMENT_NODE]);\n\n   // Various UI Event sets for duck typing by constructor name.\n   /**\n    * Duck typing class names for pointer events.\n    *\n    * @type {Set<string>}\n    */\n   static #PointerEventSet = new Set(['MouseEvent', 'PointerEvent']);\n\n   /**\n    * Duck typing class names for all UIEvents.\n    *\n    * @type {Set<string>}\n    */\n   static #UIEventSet = new Set(['UIEvent', 'FocusEvent', 'MouseEvent', 'WheelEvent', 'KeyboardEvent', 'PointerEvent',\n    'TouchEvent', 'InputEvent', 'CompositionEvent', 'DragEvent']);\n\n   /**\n    * Duck typing class names for events considered as user input.\n    *\n    * @type {Set<string>}\n    */\n   static #UserInputEventSet = new Set(['KeyboardEvent', 'MouseEvent', 'PointerEvent']);\n\n   /**\n    * Internal options used by `#checkDOMInstanceType` when retrieving the Window reference from a Node that doesn't\n    * define `ownerDocument`.\n    *\n    * @type {{throws: boolean}}\n    */\n   static #optionsInternalCheckDOM = { throws: false };\n\n   // DOM Querying ---------------------------------------------------------------------------------------------------\n\n   /**\n    * Convenience method to retrieve the `document.activeElement` value in the current Window context of a DOM Node /\n    * Element, EventTarget, Document, or Window.\n    *\n    * @param {Document | EventTarget | Node | UIEvent | Window}  target - DOM Node / Element, EventTarget, Document,\n    *        UIEvent or Window to query.\n    *\n    * @param {object} [options] - Options.\n    *\n    * @param {boolean} [options.throws=true] - When `true` and target is invalid throw an exception. If `false` and the\n    *        target is invalid `undefined` is returned; default: `true`.\n    *\n    * @returns {Element | null} Active element or `undefined` when `throws` option is `false` and the target is invalid.\n    *\n    * @throws {@link TypeError} Target must be a DOM Node / Element, Document, UIEvent, or Window.\n    */\n   static getActiveElement(target, { throws = true } = {})\n   {\n      // Duck type if target has known defined `ownerDocument` property.\n      if (this.#NodesWithOwnerDocument.has(target?.nodeType)) { return target?.ownerDocument?.activeElement ?? null; }\n\n      // Duck type if target is a UIEvent.\n      if (this.isUIEvent(target) && isObject(target?.view)) { return target?.view?.document?.activeElement ?? null; }\n\n      // Duck type if target is a Document.\n      if (isObject(target?.defaultView)) { return target?.activeElement ?? null; }\n\n      // Duck type if target is a Window.\n      if (isObject(target?.document) && isObject(target?.location)) { return target?.document?.activeElement ?? null; }\n\n      if (throws) { throw new TypeError(`'target' must be a DOM Node / Element, Document, UIEvent, or Window.`); }\n\n      return void 0;\n   }\n\n   /**\n    * Convenience method to retrieve the `Document` value in the current context of a DOM Node / Element, EventTarget,\n    * Document, UIEvent, or Window.\n    *\n    * @param {Document | EventTarget | Node | UIEvent | Window}  target - DOM Node / Element, EventTarget, Document,\n    *        UIEvent or Window to query.\n    *\n    * @param {object} [options] - Options.\n    *\n    * @param {boolean} [options.throws=true] - When `true` and target is invalid throw an exception. If `false` and the\n    *        target is invalid `undefined` is returned; default: `true`.\n    *\n    * @returns {Document} Active document or `undefined` when `throws` option is `false` and the target is invalid.\n    *\n    * @throws {@link TypeError} Target must be a DOM Node / Element, Document, UIEvent, or Window.\n    */\n   static getDocument(target, { throws = true } = {})\n   {\n      // Duck type if target has known defined `ownerDocument` property.\n      if (this.#NodesWithOwnerDocument.has(target?.nodeType)) { return target?.ownerDocument; }\n\n      // Duck type if target is a UIEvent.\n      if (this.isUIEvent(target) && isObject(target?.view)) { return target?.view?.document; }\n\n      // Duck type if target is a Document.\n      if (isObject(target?.defaultView)) { return target; }\n\n      // Duck type if target is a Window.\n      if (isObject(target?.document) && isObject(target?.location)) { return target?.document; }\n\n      if (throws) { throw new TypeError(`'target' must be a DOM Node / Element, Document, UIEvent, or Window.`); }\n\n      return void 0;\n   }\n\n   /**\n    * Convenience method to retrieve the `Window` value in the current context of a DOM Node / Element, EventTarget,\n    * Document, or Window.\n    *\n    * @param {Document | EventTarget | Node | UIEvent | Window}  target - DOM Node / Element, EventTarget, Document,\n    *        UIEvent or Window to query.\n    *\n    * @param {object} [options] - Options.\n    *\n    * @param {boolean} [options.throws=true] - When `true` and target is invalid throw an exception. If `false` and the\n    *        target is invalid `undefined` is returned; default: `true`.\n    *\n    * @returns {Window} Active window or `undefined` when `throws` option is `false` and the target is invalid.\n    *\n    * @throws {@link TypeError} Target must be a DOM Node / Element, Document, UIEvent, or Window.\n    */\n   static getWindow(target, { throws = true } = {})\n   {\n      // Duck type if target has known defined `ownerDocument` property.\n      if (this.#NodesWithOwnerDocument.has(target?.nodeType))\n      {\n         return target.ownerDocument?.defaultView ?? globalThis;\n      }\n\n      // Duck type if target is a UIEvent.\n      if (this.isUIEvent(target) && isObject(target?.view)) { return target.view ?? globalThis; }\n\n      // Duck type if target is a Document.\n      if (isObject(target?.defaultView)) { return target.defaultView ?? globalThis; }\n\n      // Duck type if target is a Window.\n      if (isObject(target?.document) && isObject(target?.location)) { return target; }\n\n      if (throws) { throw new TypeError(`'target' must be a DOM Node / Element, Document, UIEvent, or Window.`); }\n\n      return void 0;\n   }\n\n   // ES / Browser API basic prototype tests -------------------------------------------------------------------------\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Document.\n    *\n    * @param {unknown}  target - A potential Document to test.\n    *\n    * @returns {target is Document} Is `target` a Document.\n    */\n   static isDocument(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Document]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Map.\n    *\n    * @param {unknown}  target - A potential Map to test.\n    *\n    * @returns {target is Map} Is `target` a Map.\n    */\n   static isMap(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Map]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Promise.\n    *\n    * @param {unknown}  target - A potential Promise to test.\n    *\n    * @returns {target is Promise} Is `target` a Promise.\n    */\n   static isPromise(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Promise]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a RegExp.\n    *\n    * @param {unknown}  target - A potential RegExp to test.\n    *\n    * @returns {target is RegExp} Is `target` a RegExp.\n    */\n   static isRegExp(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object RegExp]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Set.\n    *\n    * @param {unknown}  target - A potential Set to test.\n    *\n    * @returns {target is Set} Is `target` a Set.\n    */\n   static isSet(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Set]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a URL.\n    *\n    * @param {unknown}  target - A potential URL to test.\n    *\n    * @returns {target is URL} Is `target` a URL.\n    */\n   static isURL(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object URL]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Window.\n    *\n    * @param {unknown}  target - A potential Window to test.\n    *\n    * @returns {target is Window} Is `target` a Window.\n    */\n   static isWindow(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Window]';\n   }\n\n   // DOM Element typing ---------------------------------------------------------------------------------------------\n\n   /**\n    * Ensures that the given target is an `instanceof` all known DOM elements that are focusable. Please note that\n    * additional checks are required regarding focusable state; use {@link A11yHelper.isFocusable} for a complete check.\n    *\n    * @param {unknown}  target - Target to test for `instanceof` focusable HTML element.\n    *\n    * @returns {boolean} Is target an `instanceof` a focusable DOM element.\n    */\n   static isFocusableHTMLElement(target)\n   {\n      for (let cntr = this.#FocusableElementClassNames.length; --cntr >= 0;)\n      {\n         if (this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, this.#FocusableElementClassNames[cntr]))\n         {\n            return true;\n         }\n      }\n\n      return false;\n   }\n\n   /**\n    * Provides precise type checking if `target` is a DocumentFragment.\n    *\n    * @param {unknown}  target - A potential DocumentFragment to test.\n    *\n    * @returns {target is DocumentFragment} Is `target` a DocumentFragment.\n    */\n   static isDocumentFragment(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.DOCUMENT_FRAGMENT_NODE, 'DocumentFragment');\n   }\n\n   /**\n    * Provides precise type checking if `target` is an Element.\n    *\n    * @param {unknown}  target - A potential Element to test.\n    *\n    * @returns {target is Element} Is `target` an Element.\n    */\n   static isElement(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, 'Element');\n   }\n\n   /**\n    * Provides precise type checking if `target` is a HTMLAnchorElement.\n    *\n    * @param {unknown}  target - A potential HTMLAnchorElement to test.\n    *\n    * @returns {target is HTMLAnchorElement} Is `target` a HTMLAnchorElement.\n    */\n   static isHTMLAnchorElement(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, 'HTMLAnchorElement');\n   }\n\n   /**\n    * Provides precise type checking if `target` is a HTMLElement.\n    *\n    * @param {unknown}  target - A potential HTMLElement to test.\n    *\n    * @returns {target is HTMLElement} Is `target` a HTMLElement.\n    */\n   static isHTMLElement(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, 'HTMLElement');\n   }\n\n   /**\n    * Provides precise type checking if `target` is a Node.\n    *\n    * @param {unknown}  target - A potential Node to test.\n    *\n    * @returns {target is Node} Is `target` a DOM Node.\n    */\n   static isNode(target)\n   {\n      if (typeof target?.nodeType !== 'number') { return false; }\n\n      if (target instanceof globalThis.Node) { return true; }\n\n      // Must retrieve window by a more thorough duck type via `getWindow` as not all Nodes have `ownerDocument`\n      // defined.\n      const activeWindow = this.getWindow(target, this.#optionsInternalCheckDOM);\n\n      const TargetNode = activeWindow?.Node;\n      return TargetNode && target instanceof TargetNode;\n   }\n\n   /**\n    * Provides precise type checking if `target` is a ShadowRoot.\n    *\n    * @param {unknown}  target - A potential ShadowRoot to test.\n    *\n    * @returns {target is ShadowRoot} Is `target` a ShadowRoot.\n    */\n   static isShadowRoot(target)\n   {\n      // ShadowRoot is a specialized type of DocumentFragment.\n      return this.#checkDOMInstanceType(target, Node.DOCUMENT_FRAGMENT_NODE, 'ShadowRoot');\n   }\n\n   /**\n    * Provides precise type checking if `target` is a SVGElement.\n    *\n    * @param {unknown}  target - A potential SVGElement to test.\n    *\n    * @returns {target is SVGElement} Is `target` a SVGElement.\n    */\n   static isSVGElement(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, 'SVGElement');\n   }\n\n   // Event typing ---------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides basic duck type checking for `Event` signature and optional constructor name(s).\n    *\n    * @param {unknown}  target - A potential DOM event to test.\n    *\n    * @param {string | Set<string>} [types] Specific constructor name or Set of constructor names to match.\n    *\n    * @returns {target is Event} Is `target` an Event with optional constructor name check.\n    */\n   static isEvent(target, types)\n   {\n      if (typeof target?.type !== 'string' || typeof target?.defaultPrevented !== 'boolean' ||\n         typeof target?.stopPropagation !== 'function')\n      {\n         return false;\n      }\n\n      return types !== void 0 ? this.isCtorName(target, types) : true;\n   }\n\n   /**\n    * Provides basic duck type checking for `Event` signature for standard mouse / pointer events including\n    * `MouseEvent` and `PointerEvent`.\n    *\n    * @param {unknown}  target - A potential DOM event to test.\n    *\n    * @returns {target is PointerEvent} Is `target` a MouseEvent or PointerEvent.\n    */\n   static isPointerEvent(target)\n   {\n      return this.isEvent(target, this.#PointerEventSet);\n   }\n\n   /**\n    * Provides basic duck type checking for `Event` signature for all UI events.\n    *\n    * @param {unknown}  target - A potential DOM event to test.\n    *\n    * @returns {target is UIEvent} Is `target` a UIEvent.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/UIEvent\n    */\n   static isUIEvent(target)\n   {\n      return this.isEvent(target, this.#UIEventSet);\n   }\n\n   /**\n    * Provides basic duck type checking for `Event` signature for standard user input events including `KeyboardEvent`,\n    * `MouseEvent`, and `PointerEvent`.\n    *\n    * @param {unknown}  target - A potential DOM event to test.\n    *\n    * @returns {target is KeyboardEvent | MouseEvent | PointerEvent} Is `target` a Keyboard, MouseEvent, or\n    *          PointerEvent.\n    */\n   static isUserInputEvent(target)\n   {\n      return this.isEvent(target, this.#UserInputEventSet);\n   }\n\n   // Generic typing -------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides basic type checking by constructor name(s) for objects. This can be useful when checking multiple\n    * constructor names against a provided Set.\n    *\n    * @param {unknown}  target - Object to test for constructor name.\n    *\n    * @param {string | Set<string>} types Specific constructor name or Set of constructor names to match.\n    *\n    * @returns {boolean} Does the provided object constructor name match the types provided.\n    */\n   static isCtorName(target, types)\n   {\n      if (!isObject(target)) { return false; }\n\n      if (typeof types === 'string' && target?.constructor?.name === types) { return true; }\n\n      return !!types?.has(target?.constructor?.name);\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Internal generic DOM `instanceof` check. First will attempt to find the class name by `globalThis` falling back\n    * to the {@link Window} associated with the DOM node.\n    *\n    * @param {unknown}  target - Target to test.\n    *\n    * @param {number}   nodeType - Node type constant.\n    *\n    * @param {string}   className - DOM class name for instanceof check.\n    *\n    * @returns {boolean} Is the target the given nodeType and instance of class name.\n    */\n   static #checkDOMInstanceType(target, nodeType, className)\n   {\n      if (!isObject(target)) { return false; }\n\n      if (target.nodeType !== nodeType) { return false; }\n\n      const GlobalClass = globalThis[className];\n\n      if (GlobalClass && target instanceof GlobalClass) { return true; }\n\n      const activeWindow = this.#NodesWithOwnerDocument.has(target.nodeType) ? target?.ownerDocument?.defaultView :\n       this.getWindow(target, this.#optionsInternalCheckDOM);\n\n      const TargetClass = activeWindow?.[className];\n\n      return TargetClass && target instanceof TargetClass;\n   }\n}\n\n/**\n * Provides access to the Clipboard API for reading / writing text strings. This requires a secure context.\n *\n * Note: `writeText` will attempt to use the older `execCommand` if available when `navigator.clipboard` is not\n * available.\n */\nclass ClipboardAccess\n{\n   /**\n    * Uses `navigator.clipboard` if available to read text from the clipboard.\n    *\n    * Note: Always returns `undefined` when `navigator.clipboard` is not available or the clipboard contains the\n    * empty string.\n    *\n    * @param {Window} [activeWindow=globalThis] Optional active current window.\n    *\n    * @returns {Promise<string|undefined>} The current clipboard text or undefined.\n    */\n   static async readText(activeWindow = globalThis)\n   {\n      let result;\n\n      if (!CrossWindow.isWindow(activeWindow))\n      {\n         throw new TypeError(`ClipboardAccess.readText error: 'activeWindow' is not a Window.`);\n      }\n\n      if (activeWindow?.navigator?.clipboard)\n      {\n         try\n         {\n            result = await activeWindow.navigator.clipboard.readText();\n         }\n         catch (err) { /**/ }\n      }\n\n      return result === '' ? void 0 : result;\n   }\n\n   /**\n    * Uses `navigator.clipboard` if available then falls back to `document.execCommand('copy')` if available to copy\n    * the given text to the clipboard.\n    *\n    * @param {string}   text - Text to copy to the browser clipboard.\n    *\n    * @param {Window} [activeWindow=globalThis] Optional active current window.\n    *\n    * @returns {Promise<boolean>} Copy successful.\n    */\n   static async writeText(text, activeWindow = globalThis)\n   {\n      if (typeof text !== 'string')\n      {\n         throw new TypeError(`ClipboardAccess.writeText error: 'text' is not a string.`);\n      }\n\n      if (!CrossWindow.isWindow(activeWindow))\n      {\n         throw new TypeError(`ClipboardAccess.writeText error: 'activeWindow' is not a Window.`);\n      }\n\n      let success = false;\n\n      if (activeWindow?.navigator?.clipboard)\n      {\n         try\n         {\n            await activeWindow.navigator.clipboard.writeText(text);\n            success = true;\n         }\n         catch (err) { /**/ }\n      }\n      else if (typeof activeWindow?.document?.execCommand === 'function')\n      {\n         const textArea = activeWindow.document.createElement('textarea');\n\n         // Place in the top-left corner of screen regardless of scroll position.\n         textArea.style.position = 'fixed';\n         textArea.style.top = '0';\n         textArea.style.left = '0';\n\n         // Ensure it has a small width and height. Setting to 1px / 1em\n         // doesn't work as this gives a negative w/h on some browsers.\n         textArea.style.width = '2em';\n         textArea.style.height = '2em';\n\n         // We don't need padding, reducing the size if it does flash render.\n         textArea.style.padding = '0';\n\n         // Clean up any borders.\n         textArea.style.border = 'none';\n         textArea.style.outline = 'none';\n         textArea.style.boxShadow = 'none';\n\n         // Avoid flash of the white box if rendered for any reason.\n         textArea.style.background = 'transparent';\n\n         textArea.value = text;\n\n         activeWindow.document.body.appendChild(textArea);\n         textArea.focus();\n         textArea.select();\n\n         try\n         {\n            success = activeWindow.document.execCommand('copy');\n         }\n         catch (err) { /**/ }\n\n         activeWindow.document.body.removeChild(textArea);\n      }\n\n      return success;\n   }\n}\n\n/**\n * Provides a utility function to parse / construct fully qualified URL instances from a URL string.\n */\nclass URLParser\n{\n   /**\n    * Parses a URL string converting it to a fully qualified URL. If URL is an existing URL instance it is returned\n    * immediately. Optionally you may construct a fully qualified URL from a relative base origin / path or with a\n    * route prefix added to the current location origin.\n    *\n    * @param {object} options - Options.\n    *\n    * @param {string | URL}   options.url - URL string to convert to a URL.\n    *\n    * @param {string}   [options.base] - Optional fully qualified base path for relative URL construction.\n    *\n    * @param {string}   [options.routePrefix] - Optional route prefix to add to location origin for absolute URL strings\n    *        when `base` is not defined.\n    *\n    * @returns {URL | null} Parsed URL or null if `url` is not parsed.\n    */\n   static parse({ url, base, routePrefix })\n   {\n      if (CrossWindow.isURL(url)) { return url; }\n\n      if (typeof url !== 'string') { return null; }\n\n      if (base !== void 0 && typeof base !== 'string') { return null; }\n\n      if (routePrefix !== void 0 && typeof routePrefix !== 'string') { return null; }\n\n      const targetURL = this.#createURL(url);\n\n      // Parse and return already fully qualified `url` string.\n      if (targetURL) { return targetURL; }\n\n      let targetBase;\n\n      // Parse relative url string.\n      if (url.startsWith('./') || url.startsWith('../'))\n      {\n         // Relative from provided `base` or current path.\n         targetBase = base ? base : `${globalThis.location.origin}${globalThis.location.pathname}`;\n      }\n      else\n      {\n         let targetRoutePrefix = '';\n\n         // Relative to current origin, but include any defined route prefix.\n         if (routePrefix)\n         {\n            // Ensure route prefix starts and ends with `/` for proper URL parsing.\n            targetRoutePrefix = routePrefix.startsWith('/') ? routePrefix : `/${routePrefix}`;\n            targetRoutePrefix = targetRoutePrefix.endsWith('/') ? targetRoutePrefix : `${targetRoutePrefix}/`;\n         }\n\n         targetBase = `${globalThis.location.origin}${targetRoutePrefix}`;\n      }\n\n      return this.#createURL(url, targetBase);\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Helper to create a URL and catch any exception. Useful until `URL.parse` and `URL.canParse` are more widespread.\n    *\n    * @param {string}   url - URL string.\n    *\n    * @param {string}   base - Base origin / path.\n    *\n    * @returns {URL | null} Valid URL or null.\n    */\n   static #createURL(url, base = '')\n   {\n      try { return new URL(url, base); }\n      catch(err) { return null; }\n   }\n}\n\nexport { BrowserSupports, ClipboardAccess, CrossWindow, URLParser };\n//# sourceMappingURL=index.js.map\n","import { writable, get } from 'svelte/store';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\n\n/**\n * Generates derived, readable, writable helper functions wrapping the given Storage API provided with any additional\n * customization for data serialization. By default, JSON serialization is used.\n *\n * @param {object}   opts - Generator options.\n *\n * @param {Storage}  opts.storage - The web storage source.\n *\n * @param {(value: any, ...rest: any[]) => string}  [opts.serialize] - Replace with custom serialization;\n *        default: `JSON.stringify`.\n *\n * @param {(value: string, ...rest: any[]) => any}  [opts.deserialize] - Replace with custom deserialization;\n *        default: `JSON.parse`.\n *\n * @returns {StorageStores} A complete set of store helper functions and associated storage API instance and\n *          serialization strategy.\n */\nfunction storeGenerator({ storage, serialize = JSON.stringify, deserialize = JSON.parse }) {\n    function isSimpleDeriver(deriver) {\n        return deriver.length < 2;\n    }\n    function storageReadable(key, value, start) {\n        return {\n            subscribe: storageWritable(key, value, start).subscribe\n        };\n    }\n    function storageWritable(key, value, start) {\n        function wrap_start(ogSet) {\n            return start(function wrap_set(new_value) {\n                if (storage) {\n                    storage.setItem(key, serialize(new_value));\n                }\n                return ogSet(new_value);\n            }, function wrap_update(fn) {\n                set(fn(get(ogStore)));\n            });\n        }\n        if (storage) {\n            const storageValue = storage.getItem(key);\n            try {\n                if (storageValue) {\n                    value = deserialize(storageValue);\n                }\n            }\n            catch (err) { /**/ }\n            storage.setItem(key, serialize(value));\n        }\n        const ogStore = writable(value, start ? wrap_start : void 0);\n        function set(new_value) {\n            if (storage) {\n                storage.setItem(key, serialize(new_value));\n            }\n            ogStore.set(new_value);\n        }\n        function update(fn) {\n            set(fn(get(ogStore)));\n        }\n        function subscribe(run, invalidate) {\n            return ogStore.subscribe(run, invalidate);\n        }\n        return { set, update, subscribe };\n    }\n    function storageDerived(key, stores, fn, initial_value) {\n        const single = !Array.isArray(stores);\n        const stores_array = single ? [stores] : stores;\n        if (storage && storage.getItem(key)) {\n            try {\n                initial_value = deserialize(storage.getItem(key));\n            }\n            catch (err) { /**/ }\n        }\n        return storageReadable(key, initial_value, (set, update) => {\n            let inited = false;\n            const values = [];\n            let pending = 0;\n            let cleanup;\n            const sync = () => {\n                if (pending) {\n                    return;\n                }\n                cleanup?.();\n                const input = single ? values[0] : values;\n                if (isSimpleDeriver(fn)) {\n                    set(fn(input));\n                }\n                else {\n                    const result = fn(input, set, update);\n                    if (typeof result === 'function') {\n                        cleanup = result;\n                    }\n                }\n            };\n            const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n                values[i] = value;\n                pending &= ~(1 << i);\n                if (inited) {\n                    sync();\n                }\n            }, () => { pending |= (1 << i); }));\n            inited = true;\n            sync();\n            return function stop() {\n                // Equivalent to run_all from Svelte internals.\n                unsubscribers.forEach((unsubscriber) => unsubscriber());\n                cleanup?.();\n            };\n        });\n    }\n    return {\n        readable: storageReadable,\n        writable: storageWritable,\n        derived: storageDerived,\n        storage,\n        serialize,\n        deserialize\n    };\n}\n\n/**\n * Provides all Storage API enabled `localStorage` store helper functions. Data is serialized as JSON.\n */\nconst localStores = storeGenerator({ storage: globalThis?.localStorage });\n/**\n * Provides the Storage API enabled derived `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.derived;\n/**\n * Provides the Storage API enabled readable `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.readable;\n/**\n * Provides the Storage API enabled writable `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.writable;\n\n/**\n * Provides all Storage API enabled `sessionStorage` store helper functions. Data is serialized as JSON.\n */\nconst sessionStores = storeGenerator({ storage: globalThis?.sessionStorage });\n/**\n * Provides the Storage API enabled derived `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.derived;\n/**\n * Provides the Storage API enabled readable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.readable;\n/**\n * Provides the Storage API enabled writable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.writable;\n\n/**\n * Provides the base Storage API store manager. It is recommended to use {@link TJSLocalStorage} &\n * {@link TJSSessionStorage} for standard browser local and session storage use cases. TJSWebStorage exists\n * to provide additional customization options for custom Storage API compatible storage instances and custom\n * serialization configuration.\n *\n * @implements {import('./types').WebStorage}\n */\nclass TJSWebStorage\n{\n   /** @type {import('./').StorageStores} */\n   #storageStores;\n\n   /**\n    * @type {(Map<string, {\n    *    store: import('svelte/store').Writable,\n    *    deserialize?: (value: string, ...rest: any[]) => any,\n    *    serialize?: (value: any, ...rest: any[]) => string\n    * }>)}\n    */\n   #stores = new Map();\n\n   /**\n    * @param {import('./').StorageStores} storageStores - Provides a complete set of\n    *        storage API store helper functions and the associated storage API instance and serializations strategy.\n    */\n   constructor(storageStores)\n   {\n      this.#storageStores = storageStores;\n   }\n\n   /**\n    * Creates a new store for the given key.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {T}        [defaultValue] - A default value to set for the store.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The new store.\n    */\n   #createStore(key, defaultValue = void 0, storageStores)\n   {\n      try\n      {\n         const value = this.#storageStores.storage.getItem(key);\n         if (value !== null)\n         {\n            const deserialize = storageStores?.deserialize ?? this.#storageStores.deserialize;\n            defaultValue = deserialize(value);\n         }\n      }\n      catch (err) { /**/ }\n\n      const writable = storageStores?.writable ?? this.#storageStores.writable;\n\n      return writable(key, defaultValue);\n   }\n\n   /**\n    * @param {string}   key - Storage key.\n    *\n    * @returns {(value: string, ...rest: any[]) => any} Deserialize function.\n    */\n   #getDeserialize(key)\n   {\n      return this.#stores.get(key)?.deserialize ?? this.#storageStores.deserialize;\n   }\n\n   /**\n    * @param {string}   key - Storage key.\n    *\n    * @returns {(value: any, ...rest: any[]) => string} Serialize function.\n    */\n   #getSerialize(key)\n   {\n      return this.#stores.get(key)?.serialize ?? this.#storageStores.serialize;\n   }\n\n   /**\n    * Gets a store from the `stores` Map or creates a new store for the key and a given default value.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {T}        [defaultValue] - A default value to set for the store.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The store for the given key.\n    */\n   #getStore(key, defaultValue = void 0, storageStores)\n   {\n      const storeEntry = this.#stores.get(key);\n      if (storeEntry) { return storeEntry.store; }\n\n      const store = this.#createStore(key, defaultValue, storageStores);\n\n      // Set any key specific storage helper details.\n      this.#stores.set(key, {\n         store,\n         deserialize: storageStores?.deserialize,\n         serialize: storageStores?.serialize\n      });\n\n      return store;\n   }\n\n   /**\n    * Get value from the storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {*} Value from session storage or if not defined any default value provided.\n    */\n   getItem(key, defaultValue)\n   {\n      let value = defaultValue;\n\n      const storageValue = this.#storageStores.storage.getItem(key);\n\n      if (storageValue !== null)\n      {\n         try\n         {\n            value = this.#getDeserialize(key)(storageValue);\n         }\n         catch (err)\n         {\n            value = defaultValue;\n         }\n      }\n      else if (defaultValue !== void 0)\n      {\n         try\n         {\n            const newValue = this.#getSerialize(key)(defaultValue);\n\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\n            this.#storageStores.storage.setItem(key, newValue);\n         }\n         catch (err) { /* */ }\n      }\n\n      return value;\n   }\n\n   /**\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\n    * is not already set.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {T}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The Svelte store for this key.\n    */\n   getStore(key, defaultValue, storageStores)\n   {\n      return this.#getStore(key, defaultValue, storageStores);\n   }\n\n   /**\n    * Returns whether a store has already been created for the given key.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    */\n   hasStore(key)\n   {\n      return this.#stores.has(key);\n   }\n\n   /**\n    * Sets the value for the given key in storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {*}        value - A value to set for this key.\n    */\n   setItem(key, value)\n   {\n      const store = this.#getStore(key);\n      store.set(value);\n   }\n\n   /**\n    * Convenience method to swap a boolean value stored in storage API updating the associated store value.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {boolean} The boolean swap for the given key.\n    */\n   swapItemBoolean(key, defaultValue)\n   {\n      const store = this.#getStore(key, defaultValue);\n\n      let currentValue = false;\n\n      try\n      {\n         currentValue = !!this.#getDeserialize(key)(this.#storageStores.storage.getItem(key));\n      }\n      catch (err) { /**/ }\n\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\n\n      store.set(newValue);\n      return newValue;\n   }\n\n   // Iterators ------------------------------------------------------------------------------------------------------\n\n   /**\n    * @template T\n    *\n    * Returns an iterable for the session storage keys and stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\n    *\n    * @returns {IterableIterator<[string, import('svelte/store').Writable<T>]>} Iterable iterator of keys and stores.\n    * @yields {import('svelte/store').Writable<[string, Writable<T>]>}\n    */\n   *entries(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield [key, this.getStore(key)]; }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield [key, this.getStore(key)]; }\n      }\n   }\n\n   /**\n    * Returns an iterable for the session storage keys from existing stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\n    *\n    * @returns {IterableIterator<string>} Iterable iterator of session storage keys.\n    * @yields {string}\n    */\n   *keys(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield key; }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield key; }\n      }\n   }\n\n   /**\n    * @template T\n    *\n    * Returns an iterable for the session storage stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\n    *\n    * @returns {IterableIterator<import('svelte/store').Writable<T>>} Iterable iterator of stores.\n    * @yields {import('svelte/store').Writable<T>}\n    */\n   *stores(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield this.getStore(key); }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield this.getStore(key); }\n      }\n   }\n}\n\n/**\n * Provides a {@link TJSWebStorage} instance for standard browser local storage use cases.\n */\nclass TJSLocalStorage extends TJSWebStorage\n{\n   constructor()\n   {\n      super(localStores);\n   }\n}\n\n/**\n * Provides a {@link TJSWebStorage} instance for standard browser session storage use cases.\n */\nclass TJSSessionStorage extends TJSWebStorage\n{\n   constructor()\n   {\n      super(sessionStores);\n   }\n}\n\nexport { TJSLocalStorage, TJSSessionStorage, TJSWebStorage, localStores, sessionStores, storeGenerator };\n//# sourceMappingURL=index.js.map\n","import { derived, get } from 'svelte/store';\n\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#run-time-svelte-store-writable),\n * but which has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 2nd parameter.\n * @param {!Function} reflect Called when the derived store gets a new value via its `set` or\n * `update` methods, and determines new values for the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nfunction writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, blockNextDerive = false;\n\tvar reflectOldValues = reflect.length >= 2;\n\tvar wrappedDerive = (got, set, update) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (!blockNextDerive) {\n\t\t\tlet returned = derive(got, set, update);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tfunction doReflect(reflecting) {\n\t\tvar setWith = reflect(reflecting, originValues);\n\t\tif (singleOrigin) {\n\t\t\tblockNextDerive = true;\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\tblockNextDerive = true;\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tblockNextDerive = false;\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nfunction propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t(reflecting, object) => {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t(reflecting, object) => {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport { propertyStore, writableDerived };\n//# sourceMappingURL=index.js.map\n","import { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { isObject } from '@typhonjs-fvtt/runtime/util/object';\nimport { group_outros, transition_out, check_outros } from 'svelte/internal';\n\n/**\n * Provides utilities to verify and parse {@link TJSSvelte.Config} configuration objects.\n */\nclass APIConfig {\n    constructor() { }\n    /**\n     * Validates `config` argument whether it is a valid {@link TJSSvelte.Config.Dynamic} or\n     * {@link TJSSvelte.Config.Standard} configuration object suitable for parsing by\n     * {@link TJSSvelte.API.Config.parseConfig}.\n     *\n     * @param config - The potential config object to validate.\n     *\n     * @param [options] - Options.\n     *\n     * @param [options.raiseException=false] - If validation fails raise an exception.\n     *\n     * @returns Is the config a valid TJSSvelte.Config.Dynamic or TJSSvelte.Config.Standard configuration object.\n     *\n     * @throws {TypeError}  Any validation error when `raiseException` is enabled.\n     */\n    static isConfig(config, { raiseException = false } = {}) {\n        if (!isObject(config)) {\n            if (raiseException) {\n                throw new TypeError(`TJSSvelte.config.isConfig error: 'config' is not an object.`);\n            }\n            return false;\n        }\n        if (!TJSSvelte.util.isComponent(config.class)) {\n            if (raiseException) {\n                throw new TypeError(`TJSSvelte.config.isConfig error: 'config.class' is not a Svelte component constructor.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Validates `config` argument whether it is a valid {@link TJSSvelte.Config.Embed} configuration object\n     * suitable for directly mounting via the `<svelte:component>` directive.\n     *\n     * @param config - The potential config object to validate.\n     *\n     * @param [options] - Options.\n     *\n     * @param [options.raiseException=false] - If validation fails raise an exception.\n     *\n     * @returns Is the config a valid TJSSvelte.Config.Embed configuration object.\n     *\n     * @throws {TypeError}  Any validation error when `raiseException` is enabled.\n     */\n    static isConfigEmbed(config, { raiseException = false } = {}) {\n        if (!isObject(config)) {\n            if (raiseException) {\n                throw new TypeError(`TJSSvelte.config.isConfigEmbed error: 'config' is not an object.`);\n            }\n            return false;\n        }\n        if (!TJSSvelte.util.isComponent(config.class)) {\n            if (raiseException) {\n                throw new TypeError(`TJSSvelte.config.isConfigEmbed error: 'config.class' is not a Svelte component constructor.`);\n            }\n            return false;\n        }\n        if (config.props !== void 0 && !isObject(config.props)) {\n            if (raiseException) {\n                throw new TypeError(`TJSSvelte.config.isConfigEmbed error: 'config.props' is not an object.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Parses a TyphonJS Svelte dynamic or standard config object ensuring that the class specified is a Svelte\n     * component, loads any dynamic defined `context` or `props` preparing the config object for loading into the\n     * Svelte component.\n     *\n     * @param config - Svelte config object.\n     *\n     * @param [options] - Options.\n     *\n     * @param [options.contextExternal] - When true any context data provided will be loaded into `#external`\n     *        context separating it from any internal context created by the component.\n     *\n     * @param [options.thisArg] - `This` reference to set for invoking any `context` or `props` defined as\n     *        functions for {@link Config.Dynamic} configuration objects.\n     *\n     * @returns The processed Svelte config object turned with parsed `props` & `context` converted into the format\n     *          supported by Svelte.\n     */\n    static parseConfig(config, { contextExternal = false, thisArg = void 0 } = {}) {\n        if (!isObject(config)) {\n            throw new TypeError(`TJSSvelte.config.parseConfig - 'config' is not an object:\\n${JSON.stringify(config)}.`);\n        }\n        if (!TJSSvelte.util.isComponent(config.class)) {\n            throw new TypeError(`TJSSvelte.config.parseConfig - 'class' is not a Svelte component constructor for config:\\n${JSON.stringify(config)}.`);\n        }\n        if (config.hydrate !== void 0 && typeof config.hydrate !== 'boolean') {\n            throw new TypeError(`TJSSvelte.config.parseConfig - 'hydrate' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n        }\n        if (config.intro !== void 0 && typeof config.intro !== 'boolean') {\n            throw new TypeError(`TJSSvelte.config.parseConfig - 'intro' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n        }\n        if (config.target !== void 0 && !CrossWindow.isElement(config.target) &&\n            !CrossWindow.isShadowRoot(config.target) && !CrossWindow.isDocumentFragment(config.target)) {\n            throw new TypeError(`TJSSvelte.config.parseConfig - 'target' is not a Element, ShadowRoot, or DocumentFragment for config:\\n${JSON.stringify(config)}.`);\n        }\n        if (config.anchor !== void 0 && !CrossWindow.isElement(config.anchor) &&\n            !CrossWindow.isShadowRoot(config.anchor) && !CrossWindow.isDocumentFragment(config.anchor)) {\n            throw new TypeError(`TJSSvelte.config.parseConfig - 'anchor' is not a string, Element for config:\\n${JSON.stringify(config)}.`);\n        }\n        if (config.context !== void 0 && typeof config.context !== 'function' && !isObject(config.context)) {\n            throw new TypeError(`TJSSvelte.config.parseConfig - 'context' is not a function or object for config:\\n${JSON.stringify(config)}.`);\n        }\n        const svelteConfig = { ...config };\n        let context = {};\n        // If a context callback function is provided then invoke it with `this` being the Foundry app.\n        // If an object is returned it adds the entries to external context.\n        if (typeof svelteConfig.context === 'function') {\n            const contextFunc = svelteConfig.context;\n            delete svelteConfig.context;\n            const result = contextFunc.call(thisArg);\n            if (isObject(result)) {\n                context = { ...result };\n            }\n            else {\n                throw new Error(`TJSSvelte.config.parseConfig - 'context' is a function that did not return an object for config:\\n${JSON.stringify(config)}`);\n            }\n        }\n        else if (isObject(svelteConfig.context)) {\n            context = svelteConfig.context;\n            delete svelteConfig.context;\n        }\n        // If a props is a function then invoke it with `this` being the Foundry app.\n        // If an object is returned set it as the props.\n        svelteConfig.props = this.#processProps(svelteConfig.props, thisArg, config);\n        if (contextExternal) {\n            svelteConfig.context = new Map();\n            svelteConfig.context.set('#external', context);\n        }\n        else {\n            svelteConfig.context = new Map(Object.entries(context));\n        }\n        return svelteConfig;\n    }\n    // Internal implementation ----------------------------------------------------------------------------------------\n    /**\n     * Processes Svelte props. Potentially props can be a function to invoke with `thisArg`.\n     *\n     * @param props - Svelte props.\n     *\n     * @param thisArg - `This` reference to set for invoking any props function.\n     *\n     * @param config - Svelte config\n     *\n     * @returns Svelte props.\n     */\n    static #processProps(props, thisArg, config) {\n        // If a props is a function then invoke it with `this` being the Foundry app.\n        // If an object is returned set it as the props.\n        if (typeof props === 'function') {\n            const result = props.call(thisArg);\n            if (isObject(result)) {\n                return result;\n            }\n            else {\n                throw new Error(`TJSSvelte.config.parseConfig - 'props' is a function that did not return an object for config:\\n${JSON.stringify(config)}`);\n            }\n        }\n        else if (isObject(props)) {\n            return props;\n        }\n        else if (props !== void 0) {\n            throw new Error(`TJSSvelte.config.parseConfig - 'props' is not a function or an object for config:\\n${JSON.stringify(config)}`);\n        }\n        return {};\n    }\n}\nObject.seal(APIConfig);\n\n// @ts-ignore\n/**\n * Various utilities to duck type / detect Svelte components and run outro transition while destroying a component\n * externally.\n */\nclass APIUtil {\n    constructor() { }\n    /**\n     * Provides basic duck typing to determine if the provided function is a constructor function for a Svelte\n     * component.\n     *\n     * @param comp - Data to check as a Svelte component.\n     *\n     * @returns Whether basic duck typing succeeds.\n     */\n    static isComponent(comp) {\n        if (comp === null || comp === void 0 || typeof comp !== 'function') {\n            return false;\n        }\n        // When using Vite in a developer build the SvelteComponent is wrapped in a ProxyComponent class.\n        // This class doesn't define methods on the prototype, so we must check if the constructor name\n        // starts with `Proxy<` as it provides the wrapped component as `Proxy<_wrapped component name_>`.\n        const prototypeName = comp?.prototype?.constructor?.name;\n        if (typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\n            prototypeName === 'ProxyComponent')) {\n            return true;\n        }\n        return typeof window !== 'undefined' ?\n            typeof comp?.prototype?.$destroy === 'function' && typeof comp?.prototype?.$on === 'function' : // client-side\n            typeof comp?.prototype?.render === 'function'; // server-side\n    }\n    /**\n     * Provides basic duck typing to determine if the provided object is a HMR ProxyComponent instance or class.\n     *\n     * @param {unknown}  comp - Data to check as a HMR proxy component.\n     *\n     * @returns {boolean} Whether basic duck typing succeeds.\n     */\n    static isHMRProxy(comp) {\n        const instanceName = comp?.constructor?.name;\n        if (typeof instanceName === 'string' && (instanceName.startsWith('Proxy<') || instanceName === 'ProxyComponent')) {\n            return true;\n        }\n        // @ts-ignore\n        const prototypeName = comp?.prototype?.constructor?.name;\n        return typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\n            prototypeName === 'ProxyComponent');\n    }\n    /**\n     * Runs outro transition then destroys Svelte component.\n     *\n     * Workaround for https://github.com/sveltejs/svelte/issues/4056\n     *\n     * @param instance - A Svelte component.\n     *\n     * @returns Promise returned after outro transition completed and component destroyed.\n     */\n    static async outroAndDestroy(instance) {\n        if (instance === void 0 || instance === null) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve) => {\n            if (instance?.$$?.fragment && instance?.$$?.fragment?.o) {\n                group_outros();\n                transition_out(instance.$$.fragment, 0, 0, () => {\n                    instance?.$destroy?.();\n                    resolve();\n                });\n                check_outros();\n            }\n            else {\n                instance?.$destroy?.();\n                resolve();\n            }\n        });\n    }\n}\nObject.seal(APIUtil);\n\n/**\n * Provides utilities to verify and parse {@link TJSSvelte.Config} configuration objects and general verification of\n * Svelte components.\n */\nclass TJSSvelte {\n    constructor() { }\n    static get config() { return APIConfig; }\n    /**\n     * @returns The utility API.\n     */\n    static get util() { return APIUtil; }\n}\nObject.seal(TJSSvelte);\n\nexport { TJSSvelte };\n//# sourceMappingURL=index.js.map\n","/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nexport { identity as linear } from '../internal/index.js';\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backInOut(t) {\n\tconst s = 1.70158 * 1.525;\n\tif ((t *= 2) < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\treturn 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backIn(t) {\n\tconst s = 1.70158;\n\treturn t * t * ((s + 1) * t - s);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backOut(t) {\n\tconst s = 1.70158;\n\treturn --t * t * ((s + 1) * t + s) + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceOut(t) {\n\tconst a = 4.0 / 11.0;\n\tconst b = 8.0 / 11.0;\n\tconst c = 9.0 / 10.0;\n\tconst ca = 4356.0 / 361.0;\n\tconst cb = 35442.0 / 1805.0;\n\tconst cc = 16061.0 / 1805.0;\n\tconst t2 = t * t;\n\treturn t < a\n\t\t? 7.5625 * t2\n\t\t: t < b\n\t\t? 9.075 * t2 - 9.9 * t + 3.4\n\t\t: t < c\n\t\t? ca * t2 - cb * t + cc\n\t\t: 10.8 * t * t - 20.52 * t + 10.72;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceInOut(t) {\n\treturn t < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0)) : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceIn(t) {\n\treturn 1.0 - bounceOut(1.0 - t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circInOut(t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circIn(t) {\n\treturn 1.0 - Math.sqrt(1.0 - t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circOut(t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicIn(t) {\n\treturn t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticInOut(t) {\n\treturn t < 0.5\n\t\t? 0.5 * Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t\t: 0.5 *\n\t\t\t\tMath.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n\t\t\t\tMath.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n\t\t\t\t1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticIn(t) {\n\treturn Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticOut(t) {\n\treturn Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoInOut(t) {\n\treturn t === 0.0 || t === 1.0\n\t\t? t\n\t\t: t < 0.5\n\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoIn(t) {\n\treturn t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoOut(t) {\n\treturn t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadInOut(t) {\n\tt /= 0.5;\n\tif (t < 1) return 0.5 * t * t;\n\tt--;\n\treturn -0.5 * (t * (t - 2) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadIn(t) {\n\treturn t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadOut(t) {\n\treturn -t * (t - 2.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartInOut(t) {\n\treturn t < 0.5 ? +8.0 * Math.pow(t, 4.0) : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartIn(t) {\n\treturn Math.pow(t, 4.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartOut(t) {\n\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintInOut(t) {\n\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintIn(t) {\n\treturn t * t * t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintOut(t) {\n\treturn --t * t * t * t * t + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineInOut(t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineIn(t) {\n\tconst v = Math.cos(t * Math.PI * 0.5);\n\tif (Math.abs(v) < 1e-14) return 1;\n\telse return 1 - v;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineOut(t) {\n\treturn Math.sin((t * Math.PI) / 2);\n}\n","import * as svelteEasingFunc from 'svelte/easing';\n\n/**\n * Defines a read-only list of Svelte easing function names.\n *\n * @type {Readonly<import('./types').EasingFunctionName[]>}\n */\nconst easingList = Object.freeze([\n   'backIn',\n   'backInOut',\n   'backOut',\n   'bounceIn',\n   'bounceInOut',\n   'bounceOut',\n   'circIn',\n   'circInOut',\n   'circOut',\n   'cubicIn',\n   'cubicInOut',\n   'cubicOut',\n   'elasticIn',\n   'elasticInOut',\n   'elasticOut',\n   'expoIn',\n   'expoInOut',\n   'expoOut',\n   'linear',\n   'quadIn',\n   'quadInOut',\n   'quadOut',\n   'quartIn',\n   'quartInOut',\n   'quartOut',\n   'quintIn',\n   'quintInOut',\n   'quintOut',\n   'sineIn',\n   'sineInOut',\n   'sineOut'\n]);\n\n/**\n * @type {Readonly<{ [key in import('./types').EasingFunctionName]: import('#runtime/svelte/easing').EasingFunction }>}\n */\nconst easingFunc = svelteEasingFunc;\n\n/**\n * Performs a lookup for standard Svelte easing functions by name. For convenience if passing in a function it is\n * returned verbatim.\n *\n * @param {import('./types').EasingReference} easingRef - The name of a standard Svelte easing function or a supplied\n *        easing function.\n *\n * @param {object}   [options] - Optional parameters.\n *\n * @param {import('./types').EasingFunctionName | false} [options.default='linear'] - A default easing function by\n *        name to return. When specified as `false` no default fallback easing function is selected. The default value\n *        is `linear`.\n *\n * @returns {import('#runtime/svelte/easing').EasingFunction} The requested easing function.\n */\nfunction getEasingFunc(easingRef, options)\n{\n   if (typeof easingRef === 'function') { return easingRef; }\n\n   const easingFn = easingFunc[easingRef];\n\n   return easingFn ? easingFn : easingFunc[options?.default ?? 'linear'];\n}\n\nexport { easingFunc, easingList, getEasingFunc };\n//# sourceMappingURL=index.js.map\n","import { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { isObject, isIterable } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides several helpful utility methods for accessibility and keyboard navigation.\n *\n * Note: Global debugging can be enabled by setting `A11yHelper.debug = true`.\n */\nclass A11yHelper\n{\n   /**\n    * You can set global focus debugging enabled by setting `A11yHelper.debug = true`.\n    *\n    * @type {boolean}\n    */\n   static #globalDebug = false;\n\n   /**\n    * @returns {boolean} Global debugging enabled.\n    */\n   static get debug() { return this.#globalDebug; }\n\n   /**\n    * @param {boolean}  debug - Global debug enabled\n    */\n   static set debug(debug)\n   {\n      if (typeof debug !== 'boolean') { throw new TypeError(`'debug' is not a boolean.`); }\n\n      this.#globalDebug = debug;\n   }\n\n   /**\n    * Runs a media query to determine if the user / OS configuration is set up for reduced motion / animation.\n    *\n    * @returns {boolean} User prefers reduced motion.\n    */\n   static get prefersReducedMotion()\n   {\n      return globalThis?.matchMedia('(prefers-reduced-motion: reduce)')?.matches ?? false;\n   }\n\n   /**\n    * Apply focus to the HTMLElement / SVGElement targets in a given A11yFocusSource data object. An iterable list\n    * `options.focusEl` can contain HTMLElement / SVGElements or selector strings. If multiple focus targets are\n    * provided in a list then the first valid target found will be focused. If focus target is a string then a lookup\n    * via `document.querySelector` is performed. In this case you should provide a unique selector for the desired\n    * focus target.\n    *\n    * Note: The body of this method is postponed to the next clock tick to allow any changes in the DOM to occur that\n    * might alter focus targets before applying.\n    *\n    * @param {A11yFocusSource | { focusSource: A11yFocusSource }}   options - The focus options instance to apply.\n    */\n   static applyFocusSource(options)\n   {\n      if (!isObject(options)) { return; }\n\n      // Handle the case of receiving an object with embedded `focusSource`.\n      const focusOpts = isObject(options?.focusSource) ? options.focusSource : options;\n\n      setTimeout(() =>\n      {\n         const debug = typeof focusOpts.debug === 'boolean' ? this.debug || focusOpts.debug : this.debug;\n\n         if (isIterable(focusOpts.focusEl))\n         {\n            if (debug)\n            {\n               console.debug(`A11yHelper.applyFocusSource debug - Attempting to apply focus target: `,\n                focusOpts.focusEl);\n            }\n\n            for (const target of focusOpts.focusEl)\n            {\n               if (target?.nodeType === Node.ELEMENT_NODE && target?.isConnected)\n               {\n                  target?.focus();\n                  if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, target);\n                  }\n                  break;\n               }\n               else if (typeof target === 'string')\n               {\n                  const element = document.querySelector(target);\n                  if (element?.nodeType === Node.ELEMENT_NODE && element?.isConnected)\n                  {\n                     element?.focus();\n                     if (debug)\n                     {\n                        console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, element);\n                     }\n                     break;\n                  }\n                  else if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Could not query selector: `, target);\n                  }\n               }\n            }\n         }\n         else if (debug)\n         {\n            console.debug(`A11yHelper.applyFocusSource debug - No focus targets defined.`);\n         }\n      }, 0);\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {Element | Document} [element=document] - Optional element to start query.\n    *\n    * @param {FocusableElementOptions} [options] - Optional parameters.\n    *\n    * @returns {FocusableElement} First focusable child element.\n    */\n   static getFirstFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[0] : void 0;\n   }\n\n   /**\n    * Returns all focusable elements within a specified element.\n    *\n    * @param {Element | Document} [element=document] Optional element to start query.\n    *\n    * @param {FocusableElementOptions} [options] - Optional parameters.\n    *\n    * @returns {Array<FocusableElement>} Child keyboard focusable elements.\n    */\n   static getFocusableElements(element = document, { anchorHref = true, ignoreClasses, ignoreElements,\n    parentHidden = false, selectors } = {})\n   {\n      if (element?.nodeType !== Node.ELEMENT_NODE && element?.nodeType !== Node.DOCUMENT_NODE)\n      {\n         throw new TypeError(`'element' is not a HTMLElement, SVGElement, or Document instance.`);\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      if (ignoreElements !== void 0 && !CrossWindow.isSet(ignoreElements))\n      {\n         throw new TypeError(`'ignoreElements' is not a Set.`);\n      }\n\n      if (selectors !== void 0 && typeof selectors !== 'string')\n      {\n         throw new TypeError(`'selectors' is not a string.`);\n      }\n\n      const selectorQuery = selectors ?? this.#getFocusableSelectors(anchorHref);\n\n      let allElements = [...element.querySelectorAll(selectorQuery)];\n\n      if (ignoreElements && ignoreClasses)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && !ignoreElements.has(el) && el.style.display !== 'none' &&\n             el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') && !el.hasAttribute('inert') &&\n              el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreClasses)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreElements)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            return !ignoreElements.has(el) && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else\n      {\n         allElements = allElements.filter((el) =>\n         {\n            return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n             !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n\n      if (parentHidden)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            return !this.isParentHidden(el, element);\n         });\n      }\n\n      return allElements;\n   }\n\n   /**\n    * Returns the default focusable selectors query.\n    *\n    * @param {boolean}  [anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @returns {string} Focusable selectors for `querySelectorAll`.\n    */\n   static #getFocusableSelectors(anchorHref = true)\n   {\n      return `button, [contenteditable=\"\"], [contenteditable=\"true\"], details summary:not([tabindex=\"-1\"]), embed, a${\n       anchorHref ? '[href]' : ''}, iframe, object, input:not([type=hidden]), select, textarea, ` +\n        `[tabindex]:not([tabindex=\"-1\"])`;\n   }\n\n   /**\n    * Gets a A11yFocusSource object from the given DOM event allowing for optional X / Y screen space overrides.\n    * Browsers (Firefox / Chrome) forwards a mouse event for the context menu keyboard button. Provides detection of\n    * when the context menu event is from the keyboard. Firefox as of (1/23) does not provide the correct screen space\n    * coordinates, so for keyboard context menu presses coordinates are generated from the centroid point of the\n    * element.\n    *\n    * A default fallback element or selector string may be provided to provide the focus target. If the event comes from\n    * the keyboard however the source focused element is inserted as the target with the fallback value appended to the\n    * list of focus targets. When A11yFocusSource is applied by {@link A11yHelper.applyFocusSource} the target focus\n    * list is iterated through until a connected target is found and focus applied.\n    *\n    * @param {object} options - Options\n    *\n    * @param {KeyboardEvent | MouseEvent}   [options.event] - The source DOM event.\n    *\n    * @param {boolean} [options.debug] - When true {@link A11yHelper.applyFocusSource} logs focus target data.\n    *\n    * @param {FocusableElement | string} [options.focusEl] - A specific HTMLElement / SVGElement or selector\n    *        string as the focus target.\n    *\n    * @param {number}   [options.x] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @param {number}   [options.y] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @returns {A11yFocusSource} A A11yFocusSource object.\n    *\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1426671\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=314314\n    *\n    * @privateRemarks\n    * TODO: Evaluate / test against touch input devices.\n    */\n   static getFocusSource({ event, x, y, focusEl, debug = false })\n   {\n      if (focusEl !== void 0 && !this.isFocusSource(focusEl))\n      {\n         throw new TypeError(\n          `A11yHelper.getFocusSource error: 'focusEl' is not a HTMLElement, SVGElement, or string.`);\n      }\n\n      if (debug !== void 0 && typeof debug !== 'boolean')\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'debug' is not a boolean.`);\n      }\n\n      const debugEnabled = typeof debug === 'boolean' ? this.debug || debug : this.debug;\n\n      // Handle the case when no event is provided and x, y, or focusEl is explicitly defined.\n      if (event === void 0)\n      {\n         if (typeof x !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'x' is not a number.`);\n         }\n\n         if (typeof y !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'y' is not a number.`);\n         }\n\n         const result = {\n            debug,\n            focusEl: focusEl !== void 0 ? [focusEl] : void 0,\n            x,\n            y,\n         };\n\n         if (debugEnabled)\n         {\n            console.debug(`A11yHelper.getFocusSource debug: generated 'focusSource' without event: `, result);\n         }\n\n         return result;\n      }\n\n      // Perform duck typing on event constructor name.\n      if (event !== void 0 && !CrossWindow.isUserInputEvent(event))\n      {\n         throw new TypeError(\n          `A11yHelper.getFocusSource error: 'event' is not a KeyboardEvent, MouseEvent, or PointerEvent.`);\n      }\n\n      if (x !== void 0 && !Number.isInteger(x))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'x' is not a number.`);\n      }\n\n      if (y !== void 0 && !Number.isInteger(y))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'y' is not a number.`);\n      }\n\n      /** @type {Element} */\n      let targetEl;\n\n      if (event)\n      {\n         if (A11yHelper.isFocusable(event.target))\n         {\n            targetEl = event.target;\n            if (debugEnabled)\n            {\n               console.debug(`A11yHelper.getFocusSource debug: 'targetEl' set to event.target: `, targetEl);\n            }\n         }\n         else if (A11yHelper.isFocusable(event.currentTarget))\n         {\n            targetEl = event.currentTarget;\n            if (debugEnabled)\n            {\n               console.debug(`A11yHelper.getFocusSource debug: 'targetEl' set to event.currentTarget: `, targetEl);\n            }\n         }\n         else\n         {\n            if (debugEnabled)\n            {\n               console.debug(\n                `A11yHelper.getFocusSource debug: 'event.target' / 'event.currentTarget' are not focusable.`);\n               console.debug(`A11yHelper.getFocusSource debug: 'event.target': `, event.target);\n               console.debug(`A11yHelper.getFocusSource debug: 'event.currentTarget': `, event.currentTarget);\n            }\n         }\n\n         if (targetEl)\n         {\n            if (targetEl?.nodeType !== Node.ELEMENT_NODE && typeof targetEl?.focus !== 'function')\n            {\n               throw new TypeError(`A11yHelper.getFocusSource error: 'targetEl' is not an HTMLElement or SVGElement.`);\n            }\n         }\n      }\n\n      const result = { debug };\n\n      // Perform duck typing on event constructor name.\n      if (CrossWindow.isPointerEvent(event))\n      {\n         // Firefox currently (11/24) does not correctly determine the location of a keyboard originated\n         // context menu location, so calculate position from middle of the event target.\n         // Firefox fires a mouse event for the context menu key.\n         if (event?.button !== 2 && event.type === 'contextmenu')\n         {\n            // Always include x / y coordinates and targetEl may not be defined.\n            const rectTarget = targetEl ?? event.target;\n\n            const rect = rectTarget.getBoundingClientRect();\n            result.source = 'keyboard';\n            result.x = x ?? rect.left + (rect.width / 2);\n            result.y = y ?? rect.top + (rect.height / 2);\n            result.focusEl = targetEl ? [targetEl] : [];\n\n            if (focusEl) { result.focusEl.push(focusEl); }\n         }\n         else\n         {\n            result.source = 'pointer';\n            result.x = x ?? event.pageX;\n            result.y = y ?? event.pageY;\n            result.focusEl = targetEl ? [targetEl] : [];\n\n            if (focusEl) { result.focusEl.push(focusEl); }\n         }\n      }\n      else\n      {\n         // Always include x / y coordinates and targetEl may not be defined.\n         const rectTarget = targetEl ?? event?.target;\n\n         if (rectTarget)\n         {\n            const rect = rectTarget.getBoundingClientRect();\n            result.source = 'keyboard';\n            result.x = x ?? rect.left + (rect.width / 2);\n            result.y = y ?? rect.top + (rect.height / 2);\n            result.focusEl = targetEl ? [targetEl] : [];\n         }\n\n         if (focusEl) { result.focusEl.push(focusEl); }\n      }\n\n      if (debugEnabled)\n      {\n         console.debug(`A11yHelper.getFocusSource debug: generated 'focusSource' with event: `, result);\n      }\n\n      return result;\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {Element | Document} [element=document] - Optional element to start query.\n    *\n    * @param {FocusableElementOptions} [options] - Optional parameters.\n    *\n    * @returns {FocusableElement} Last focusable child element.\n    */\n   static getLastFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : void 0;\n   }\n\n   /**\n    * Tests if the given element is focusable.\n    *\n    * @param {unknown} el - Element to test.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {boolean} [options.anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @returns {boolean} Element is focusable.\n    */\n   static isFocusable(el, { anchorHref = true, ignoreClasses } = {})\n   {\n      if (el === void 0 || el === null || el?.hidden || !el?.isConnected || el?.nodeType !== Node.ELEMENT_NODE ||\n       typeof el?.focus !== 'function')\n      {\n         return false;\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      const contenteditableAttr = el.getAttribute('contenteditable');\n      const contenteditableFocusable = typeof contenteditableAttr === 'string' &&\n       (contenteditableAttr === '' || contenteditableAttr === 'true');\n\n      const tabindexAttr = globalThis.parseInt(el.getAttribute('tabindex'));\n      const tabindexFocusable = Number.isInteger(tabindexAttr) && tabindexAttr >= 0;\n\n      if (contenteditableFocusable || tabindexFocusable || CrossWindow.isFocusableHTMLElement(el))\n      {\n         // Ensure that an anchor element has an `href` attribute.\n         if (anchorHref && !tabindexFocusable && CrossWindow.isHTMLAnchorElement(el) &&\n          typeof el.getAttribute('href') !== 'string')\n         {\n            return false;\n         }\n\n         return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n          !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n      }\n\n      return false;\n   }\n\n   /**\n    * Convenience method to check if the given data is a valid focus source.\n    *\n    * @param {Element | EventTarget | string}   data - Either an HTMLElement, SVGElement, or selector string.\n    *\n    * @returns {boolean} Is valid focus source.\n    */\n   static isFocusSource(data)\n   {\n      return typeof data === 'string' || (data?.nodeType === Node.ELEMENT_NODE && typeof data?.focus === 'function');\n   }\n\n   /**\n    * Tests if the given `element` is a Element node and has a `focus` method.\n    *\n    * @param {unknown}  element - Element to test for focus method.\n    *\n    * @returns {element is FocusableElement} Whether the element has a focus method.\n    */\n   static isFocusTarget(element)\n   {\n      return element !== void 0 && element !== null && element?.nodeType === Node.ELEMENT_NODE &&\n       typeof element?.focus === 'function';\n   }\n\n   /**\n    * Perform a parent traversal from the current active element attempting to match the given element to test whether\n    * current active element is within that element.\n    *\n    * @param {Element}  element - An element to match in parent traversal from the active element.\n    *\n    * @returns {boolean} Whether there is focus within the given element.\n    */\n   static isFocusWithin(element)\n   {\n      if (!isObject(element) || element?.hidden || !element?.isConnected) { return false; }\n\n      let active = CrossWindow.getActiveElement(element);\n\n      if (!active) { return false; }\n\n      while (active)\n      {\n         if (active === element) { return true; }\n\n         active = active.parentElement;\n      }\n\n      return false;\n   }\n\n   /**\n    * Traverses the given element's parent elements to check if any parent has `offsetWidth` and `offsetHeight` of 0,\n    * indicating that a parent element is hidden. If a parent element is hidden, the given element is also considered\n    * hidden. This is a reasonably efficient check and can be enabled as a filter step in conjunction with focusable\n    * element detection methods like {@link A11yHelper.getFocusableElements}.\n    *\n    * @param {Element}  element - The starting element to check.\n    *\n    * @param {Element}  [stopElement] - The stopping parent element for traversal. If not defined, `document.body` is\n    *        used as the stopping element.\n    *\n    * @returns {boolean} `true` if a parent element of the given element is hidden; otherwise, `false`.\n    */\n   static isParentHidden(element, stopElement)\n   {\n      if (!CrossWindow.isElement(element)) { throw new TypeError(`'element' is not an Element.`); }\n\n      // Set `stopElement` to `document.body` if undefined.\n      stopElement = stopElement ?? CrossWindow.getDocument(element)?.body;\n\n      if (!CrossWindow.isElement(stopElement)) { throw new TypeError(`'stopElement' must be an Element.`); }\n\n      let current = element.parentElement;\n\n      while (current)\n      {\n         // Stop traversal if `stopElement` is reached.\n         if (current === stopElement) { break; }\n\n         // Check if the current parent is hidden by its size.\n         if (current.offsetWidth === 0 && current.offsetHeight === 0) { return true; }\n\n         current = current.parentElement;\n      }\n\n      // No parent is hidden.\n      return false;\n   }\n}\n\nexport { A11yHelper };\n//# sourceMappingURL=index.js.map\n","/**\n * Clamps a value between min / max values.\n *\n * @param {number}   value - Value to clamp.\n *\n * @param {number}   min - Minimum value.\n *\n * @param {number}   max - Maximum value.\n *\n * @returns {number} Clamped value.\n */\nfunction clamp(value = 0, min = 0, max = 0)\n{\n   return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Converts the given number from degrees to radians.\n *\n * @param {number}   deg - Degree number to convert\n *\n * @returns {number} Degree as radians.\n */\nfunction degToRad(deg)\n{\n   return deg * (Math.PI / 180.0);\n}\n\n/**\n * Provides methods for retrieving pseudorandom values and other utilities using {@link Math.random}.\n */\nclass MathRandom\n{\n   /**\n    * Private constructor to prevent instantiation.\n    *\n    * @private\n    */\n   constructor()\n   {\n      throw new Error('This class should not be instantiated.');\n   }\n\n   /**\n    * Returns a random inclusive integer.\n    *\n    * @param {number}   min - Minimum value.\n    *\n    * @param {number}   max - Maximum value.\n    *\n    * @returns {number} Random inclusive integer.\n    */\n   static getInt(min, max)\n   {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n   }\n\n   /**\n    * Returns a random floating point number between min (inclusive) and max (exclusive).\n    *\n    * @param {number}   min - Minimum value\n    *\n    * @param {number}   max - Maximum value.\n    *\n    * @returns {number} Random float.\n    */\n   static getFloat(min, max)\n   {\n      return Math.random() * (max - min) + min;\n   }\n\n   /**\n    * Returns a random boolean.\n    *\n    * @returns {boolean} Random boolean.\n    */\n   static getBoolean()\n   {\n      return Math.random() > 0.5;\n   }\n\n   /**\n    * Shuffles an array using the Fisher-Yates shuffle algorithm. Modifies the input array in place and returns it.\n    *\n    * @template T\n    *\n    * @param {T[]} arr - The array to shuffle.\n    *\n    * @returns {T[]} The shuffled array.\n    */\n   static shuffleArray(arr)\n   {\n      for (let i = arr.length - 1; i > 0; i--)\n      {\n         const j = MathRandom.getInt(0, i);\n         [arr[i], arr[j]] = [arr[j], arr[i]];\n      }\n\n      return arr;\n   }\n}\n\n/**\n * Converts the given number from radians to degrees.\n *\n * @param {number}   rad - Radian number to convert.\n *\n * @returns {number} Degree as radians.\n */\nfunction radToDeg(rad)\n{\n   return rad * (180.0 / Math.PI);\n}\n\nexport { MathRandom, clamp, degToRad, radToDeg };\n//# sourceMappingURL=index.js.map\n","/**\n * Performs linear interpolation between a start & end value by given amount between 0 - 1 inclusive.\n *\n * @param {number}   start - Start value.\n *\n * @param {number}   end - End value.\n *\n * @param {number}   amount - Current amount between 0 - 1 inclusive.\n *\n * @returns {number} Linear interpolated value between start & end.\n */\nfunction lerp(start, end, amount)\n{\n   return (1 - amount) * start + amount * end;\n}\n\nexport { lerp };\n//# sourceMappingURL=index.js.map\n","// gl-matrix - v4.0.0-beta.3 - A high performance matrix and vector library.\n// @author Brandon Jones\n// @author Colin MacKenzie IV\n// @license MIT (https://github.com/toji/gl-matrix/blob/master/LICENSE.md)\n\n// src/common/index.ts\nvar GLM_EPSILON = 1e-6;\n\n// gl-matrix - v4.0.0-beta.3 - A high performance matrix and vector library.\n// @author Brandon Jones\n// @author Colin MacKenzie IV\n// @license MIT (https://github.com/toji/gl-matrix/blob/master/LICENSE.md)\n\nvar Mat2 = class _Mat2 extends Float32Array {\n  static #IDENTITY_2X2 = new Float32Array([\n    1,\n    0,\n    0,\n    1\n  ]);\n  /**\n   * Create a {@link Mat2}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 4:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 4);\n        break;\n      case 1:\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([\n            v,\n            v,\n            v,\n            v\n          ]);\n        } else {\n          super(v, 0, 4);\n        }\n        break;\n      default:\n        super(_Mat2.#IDENTITY_2X2);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Mat2.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Mat2.str(this);\n  }\n  // ===================\n  // Instance methods\n  // ===================\n  /**\n   * Copy the values from another {@link Mat2} into `this`.\n   *\n   * @param a the source vector\n   * @returns `this`\n   * @category Methods\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity matrix\n   * Equivalent to Mat2.identity(this)\n   *\n   * @returns `this`\n   * @category Methods\n   */\n  identity() {\n    this.set(_Mat2.#IDENTITY_2X2);\n    return this;\n  }\n  /**\n   * Multiplies this {@link Mat2} against another one\n   * Equivalent to `Mat2.multiply(this, this, b);`\n   *\n   * @param b - The second operand\n   * @returns `this`\n   * @category Methods\n   */\n  multiply(b) {\n    return _Mat2.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Mat2.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Transpose this {@link Mat2}\n   * Equivalent to `Mat2.transpose(this, this);`\n   *\n   * @returns `this`\n   * @category Methods\n   */\n  transpose() {\n    return _Mat2.transpose(this, this);\n  }\n  /**\n   * Inverts this {@link Mat2}\n   * Equivalent to `Mat4.invert(this, this);`\n   *\n   * @returns `this`\n   * @category Methods\n   */\n  invert() {\n    return _Mat2.invert(this, this);\n  }\n  /**\n   * Scales this {@link Mat2} by the dimensions in the given vec3 not using vectorization\n   * Equivalent to `Mat2.scale(this, this, v);`\n   *\n   * @param v - The {@link Vec2} to scale the matrix by\n   * @returns `this`\n   * @category Methods\n   */\n  scale(v) {\n    return _Mat2.scale(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat2} by the given angle around the given axis\n   * Equivalent to `Mat2.rotate(this, this, rad);`\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   * @category Methods\n   */\n  rotate(rad) {\n    return _Mat2.rotate(this, this, rad);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Mat2}.\n   */\n  static get BYTE_LENGTH() {\n    return 4 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, identity {@link Mat2}\n   * @category Static\n   *\n   * @returns A new {@link Mat2}\n   */\n  static create() {\n    return new _Mat2();\n  }\n  /**\n   * Creates a new {@link Mat2} initialized with values from an existing matrix\n   * @category Static\n   *\n   * @param a - Matrix to clone\n   * @returns A new {@link Mat2}\n   */\n  static clone(a) {\n    return new _Mat2(a);\n  }\n  /**\n   * Copy the values from one {@link Mat2} to another\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - Matrix to copy\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Create a new {@link Mat2} with the given values\n   * @category Static\n   *\n   * @param values - Matrix components\n   * @returns A new {@link Mat2}\n   */\n  static fromValues(...values) {\n    return new _Mat2(...values);\n  }\n  /**\n   * Set the components of a {@link Mat2} to the given values\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @param values - Matrix components\n   * @returns `out`\n   */\n  static set(out, ...values) {\n    out[0] = values[0];\n    out[1] = values[1];\n    out[2] = values[2];\n    out[3] = values[3];\n    return out;\n  }\n  /**\n   * Set a {@link Mat2} to the identity matrix\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n  }\n  /**\n   * Transpose the values of a {@link Mat2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static transpose(out, a) {\n    if (out === a) {\n      const a1 = a[1];\n      out[1] = a[2];\n      out[2] = a1;\n    } else {\n      out[0] = a[0];\n      out[1] = a[2];\n      out[2] = a[1];\n      out[3] = a[3];\n    }\n    return out;\n  }\n  /**\n   * Inverts a {@link Mat2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static invert(out, a) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    let det = a0 * a3 - a2 * a1;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] = a0 * det;\n    return out;\n  }\n  /**\n   * Calculates the adjugate of a {@link Mat2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static adjoint(out, a) {\n    const a0 = a[0];\n    out[0] = a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a0;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a {@link Mat2}\n   * @category Static\n   *\n   * @param a - the source matrix\n   * @returns determinant of a\n   */\n  static determinant(a) {\n    return a[0] * a[3] - a[2] * a[1];\n  }\n  /**\n   * Adds two {@link Mat2}'s\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n  }\n  /**\n   * Alias for {@link Mat2.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiplies two {@link Mat2}s\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat2.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Rotates a {@link Mat2} by the given angle\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotate(out, a, rad) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = a0 * c + a2 * s;\n    out[1] = a1 * c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n  }\n  /**\n   * Scales the {@link Mat2} by the dimensions in the given {@link Vec2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param v - the {@link Vec2} to scale the matrix by\n   * @returns `out`\n   **/\n  static scale(out, a, v) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const v0 = v[0];\n    const v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat2} from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat2.identity(dest);\n   *   mat2.rotate(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2} receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat2} from a vector scaling\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat2.identity(dest);\n   *   mat2.scale(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2} receiving operation result\n   * @param v - Scaling vector\n   * @returns `out`\n   */\n  static fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    return out;\n  }\n  /**\n   * Returns Frobenius norm of a {@link Mat2}\n   * @category Static\n   *\n   * @param a - the matrix to calculate Frobenius norm of\n   * @returns Frobenius norm\n   */\n  static frob(a) {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3]);\n  }\n  /**\n   * Multiply each element of a {@link Mat2} by a scalar.\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param b - amount to scale the matrix's elements by\n   * @returns `out`\n   */\n  static multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n  }\n  /**\n   * Adds two {@link Mat2}'s after multiplying each element of the second operand by a scalar value.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b's elements by before adding\n   * @returns `out`\n   */\n  static multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    return out;\n  }\n  /**\n   * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n   * @category Static\n   *\n   * @param L - the lower triangular matrix\n   * @param D - the diagonal matrix\n   * @param U - the upper triangular matrix\n   * @param a - the input matrix to factorize\n   */\n  static LDU(L, D, U, a) {\n    L[2] = a[2] / a[0];\n    U[0] = a[0];\n    U[1] = a[1];\n    U[3] = a[3] - L[2] * U[1];\n    return [L, D, U];\n  }\n  /**\n   * Returns whether two {@link Mat2}s have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n  }\n  /**\n   * Returns whether two {@link Mat2}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3));\n  }\n  /**\n   * Returns a string representation of a {@link Mat2}\n   * @category Static\n   *\n   * @param a - matrix to represent as a string\n   * @returns string representation of the matrix\n   */\n  static str(a) {\n    return `Mat2(${a.join(\", \")})`;\n  }\n};\nMat2.prototype.mul = Mat2.prototype.multiply;\nMat2.mul = Mat2.multiply;\nMat2.sub = Mat2.subtract;\nvar Mat2d = class _Mat2d extends Float32Array {\n  static #IDENTITY_2X3 = new Float32Array([\n    1,\n    0,\n    0,\n    1,\n    0,\n    0\n  ]);\n  /**\n   * Create a {@link Mat2}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 6:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 6);\n        break;\n      case 1:\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([\n            v,\n            v,\n            v,\n            v,\n            v,\n            v\n          ]);\n        } else {\n          super(v, 0, 6);\n        }\n        break;\n      default:\n        super(_Mat2d.#IDENTITY_2X3);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Mat2d.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Mat2d.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Mat2d} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity matrix\n   * Equivalent to Mat2d.identity(this)\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  identity() {\n    this.set(_Mat2d.#IDENTITY_2X3);\n    return this;\n  }\n  /**\n   * Multiplies this {@link Mat2d} against another one\n   * Equivalent to `Mat2d.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `this`\n   */\n  multiply(b) {\n    return _Mat2d.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Mat2d.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Translate this {@link Mat2d} by the given vector\n   * Equivalent to `Mat2d.translate(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec2} to translate by\n   * @returns `this`\n   */\n  translate(v) {\n    return _Mat2d.translate(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat2d} by the given angle around the given axis\n   * Equivalent to `Mat2d.rotate(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotate(rad) {\n    return _Mat2d.rotate(this, this, rad);\n  }\n  /**\n   * Scales this {@link Mat2d} by the dimensions in the given vec3 not using vectorization\n   * Equivalent to `Mat2d.scale(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec2} to scale the matrix by\n   * @returns `this`\n   */\n  scale(v) {\n    return _Mat2d.scale(this, this, v);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Mat2d}.\n   */\n  static get BYTE_LENGTH() {\n    return 6 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, identity {@link Mat2d}\n   * @category Static\n   *\n   * @returns A new {@link Mat2d}\n   */\n  static create() {\n    return new _Mat2d();\n  }\n  /**\n   * Creates a new {@link Mat2d} initialized with values from an existing matrix\n   * @category Static\n   *\n   * @param a - Matrix to clone\n   * @returns A new {@link Mat2d}\n   */\n  static clone(a) {\n    return new _Mat2d(a);\n  }\n  /**\n   * Copy the values from one {@link Mat2d} to another\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - Matrix to copy\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n  }\n  /**\n   * Create a new {@link Mat2d} with the given values\n   * @category Static\n   *\n   * @param values - Matrix components\n   * @returns A new {@link Mat2d}\n   */\n  static fromValues(...values) {\n    return new _Mat2d(...values);\n  }\n  /**\n   * Set the components of a {@link Mat2d} to the given values\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @param values - Matrix components\n   * @returns `out`\n   */\n  static set(out, ...values) {\n    out[0] = values[0];\n    out[1] = values[1];\n    out[2] = values[2];\n    out[3] = values[3];\n    out[4] = values[4];\n    out[5] = values[5];\n    return out;\n  }\n  /**\n   * Set a {@link Mat2d} to the identity matrix\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n  }\n  /**\n   * Inverts a {@link Mat2d}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static invert(out, a) {\n    const aa = a[0];\n    const ab = a[1];\n    const ac = a[2];\n    const ad = a[3];\n    const atx = a[4];\n    const aty = a[5];\n    let det = aa * ad - ab * ac;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a {@link Mat2d}\n   * @category Static\n   *\n   * @param a - the source matrix\n   * @returns determinant of a\n   */\n  static determinant(a) {\n    return a[0] * a[3] - a[1] * a[2];\n  }\n  /**\n   * Adds two {@link Mat2d}'s\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    return out;\n  }\n  /**\n   * Alias for {@link Mat2d.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiplies two {@link Mat2d}s\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat2d.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Translate a {@link Mat2d} by the given vector\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to translate\n   * @param v - vector to translate by\n   * @returns `out`\n   */\n  static translate(out, a, v) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const v0 = v[0];\n    const v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n  }\n  /**\n   * Rotates a {@link Mat2d} by the given angle\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotate(out, a, rad) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = a0 * c + a2 * s;\n    out[1] = a1 * c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n  }\n  /**\n   * Scales the {@link Mat2d} by the dimensions in the given {@link Vec2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param v - the {@link Vec2} to scale the matrix by\n   * @returns `out`\n   **/\n  static scale(out, a, v) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const v0 = v[0];\n    const v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n  }\n  // TODO: Got to fromRotation\n  /**\n   * Creates a {@link Mat2d} from a vector translation\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   Mat2d.identity(dest);\n   *   Mat2d.translate(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2d} receiving operation result\n   * @param v - Translation vector\n   * @returns `out`\n   */\n  static fromTranslation(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = v[0];\n    out[5] = v[1];\n    return out;\n  }\n  /**\n   * Creates a {@link Mat2d} from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   Mat2d.identity(dest);\n   *   Mat2d.rotate(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2d} receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat2d} from a vector scaling\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   Mat2d.identity(dest);\n   *   Mat2d.scale(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2d} receiving operation result\n   * @param v - Scaling vector\n   * @returns `out`\n   */\n  static fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n  }\n  /**\n   * Returns Frobenius norm of a {@link Mat2d}\n   * @category Static\n   *\n   * @param a - the matrix to calculate Frobenius norm of\n   * @returns Frobenius norm\n   */\n  static frob(a) {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + 1);\n  }\n  /**\n   * Multiply each element of a {@link Mat2d} by a scalar.\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param b - amount to scale the matrix's elements by\n   * @returns `out`\n   */\n  static multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    return out;\n  }\n  /**\n   * Adds two {@link Mat2d}'s after multiplying each element of the second operand by a scalar value.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b's elements by before adding\n   * @returns `out`\n   */\n  static multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    return out;\n  }\n  /**\n   * Returns whether two {@link Mat2d}s have exactly the same elements in the same position (when compared with ===).\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n  }\n  /**\n   * Returns whether two {@link Mat2d}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= GLM_EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= GLM_EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5));\n  }\n  /**\n   * Returns a string representation of a {@link Mat2d}\n   * @category Static\n   *\n   * @param a - matrix to represent as a string\n   * @returns string representation of the matrix\n   */\n  static str(a) {\n    return `Mat2d(${a.join(\", \")})`;\n  }\n};\nMat2d.mul = Mat2d.multiply;\nMat2d.sub = Mat2d.subtract;\nvar Mat3 = class _Mat3 extends Float32Array {\n  static #IDENTITY_3X3 = new Float32Array([\n    1,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    1\n  ]);\n  /**\n   * Create a {@link Mat3}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 9:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 9);\n        break;\n      case 1:\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v\n          ]);\n        } else {\n          super(v, 0, 9);\n        }\n        break;\n      default:\n        super(_Mat3.#IDENTITY_3X3);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Mat3.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Mat3.str(this);\n  }\n  // ===================\n  // Instance methods\n  // ===================\n  /**\n   * Copy the values from another {@link Mat3} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity matrix\n   * Equivalent to Mat3.identity(this)\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  identity() {\n    this.set(_Mat3.#IDENTITY_3X3);\n    return this;\n  }\n  /**\n   * Multiplies this {@link Mat3} against another one\n   * Equivalent to `Mat3.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `this`\n   */\n  multiply(b) {\n    return _Mat3.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Mat3.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Transpose this {@link Mat3}\n   * Equivalent to `Mat3.transpose(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  transpose() {\n    return _Mat3.transpose(this, this);\n  }\n  /**\n   * Inverts this {@link Mat3}\n   * Equivalent to `Mat4.invert(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    return _Mat3.invert(this, this);\n  }\n  /**\n   * Translate this {@link Mat3} by the given vector\n   * Equivalent to `Mat3.translate(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec2} to translate by\n   * @returns `this`\n   */\n  translate(v) {\n    return _Mat3.translate(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat3} by the given angle around the given axis\n   * Equivalent to `Mat3.rotate(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotate(rad) {\n    return _Mat3.rotate(this, this, rad);\n  }\n  /**\n   * Scales this {@link Mat3} by the dimensions in the given vec3 not using vectorization\n   * Equivalent to `Mat3.scale(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec2} to scale the matrix by\n   * @returns `this`\n   */\n  scale(v) {\n    return _Mat3.scale(this, this, v);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Mat3}.\n   */\n  static get BYTE_LENGTH() {\n    return 9 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, identity {@link Mat3}\n   * @category Static\n   *\n   * @returns A new {@link Mat3}\n   */\n  static create() {\n    return new _Mat3();\n  }\n  /**\n   * Creates a new {@link Mat3} initialized with values from an existing matrix\n   * @category Static\n   *\n   * @param a - Matrix to clone\n   * @returns A new {@link Mat3}\n   */\n  static clone(a) {\n    return new _Mat3(a);\n  }\n  /**\n   * Copy the values from one {@link Mat3} to another\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - Matrix to copy\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n  }\n  /**\n   * Create a new {@link Mat3} with the given values\n   * @category Static\n   *\n   * @param values - Matrix components\n   * @returns A new {@link Mat3}\n   */\n  static fromValues(...values) {\n    return new _Mat3(...values);\n  }\n  /**\n   * Set the components of a {@link Mat3} to the given values\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @param values - Matrix components\n   * @returns `out`\n   */\n  static set(out, ...values) {\n    out[0] = values[0];\n    out[1] = values[1];\n    out[2] = values[2];\n    out[3] = values[3];\n    out[4] = values[4];\n    out[5] = values[5];\n    out[6] = values[6];\n    out[7] = values[7];\n    out[8] = values[8];\n    return out;\n  }\n  /**\n   * Set a {@link Mat3} to the identity matrix\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Transpose the values of a {@link Mat3}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static transpose(out, a) {\n    if (out === a) {\n      const a01 = a[1], a02 = a[2], a12 = a[5];\n      out[1] = a[3];\n      out[2] = a[6];\n      out[3] = a01;\n      out[5] = a[7];\n      out[6] = a02;\n      out[7] = a12;\n    } else {\n      out[0] = a[0];\n      out[1] = a[3];\n      out[2] = a[6];\n      out[3] = a[1];\n      out[4] = a[4];\n      out[5] = a[7];\n      out[6] = a[2];\n      out[7] = a[5];\n      out[8] = a[8];\n    }\n    return out;\n  }\n  /**\n   * Inverts a {@link Mat3}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static invert(out, a) {\n    const a00 = a[0], a01 = a[1], a02 = a[2];\n    const a10 = a[3], a11 = a[4], a12 = a[5];\n    const a20 = a[6], a21 = a[7], a22 = a[8];\n    const b01 = a22 * a11 - a12 * a21;\n    const b11 = -a22 * a10 + a12 * a20;\n    const b21 = a21 * a10 - a11 * a20;\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n  }\n  /**\n   * Calculates the adjugate of a {@link Mat3}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static adjoint(out, a) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    out[0] = a11 * a22 - a12 * a21;\n    out[1] = a02 * a21 - a01 * a22;\n    out[2] = a01 * a12 - a02 * a11;\n    out[3] = a12 * a20 - a10 * a22;\n    out[4] = a00 * a22 - a02 * a20;\n    out[5] = a02 * a10 - a00 * a12;\n    out[6] = a10 * a21 - a11 * a20;\n    out[7] = a01 * a20 - a00 * a21;\n    out[8] = a00 * a11 - a01 * a10;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a {@link Mat3}\n   * @category Static\n   *\n   * @param a - the source matrix\n   * @returns determinant of a\n   */\n  static determinant(a) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n  }\n  /**\n   * Adds two {@link Mat3}'s\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n  }\n  /**\n   * Alias for {@link Mat3.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiplies two {@link Mat3}s\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    let b0 = b[0];\n    let b1 = b[1];\n    let b2 = b[2];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22;\n    b0 = b[3];\n    b1 = b[4];\n    b2 = b[5];\n    out[3] = b0 * a00 + b1 * a10 + b2 * a20;\n    out[4] = b0 * a01 + b1 * a11 + b2 * a21;\n    out[5] = b0 * a02 + b1 * a12 + b2 * a22;\n    b0 = b[6];\n    b1 = b[7];\n    b2 = b[8];\n    out[6] = b0 * a00 + b1 * a10 + b2 * a20;\n    out[7] = b0 * a01 + b1 * a11 + b2 * a21;\n    out[8] = b0 * a02 + b1 * a12 + b2 * a22;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat3.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Translate a {@link Mat3} by the given vector\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to translate\n   * @param v - vector to translate by\n   * @returns `out`\n   */\n  static translate(out, a, v) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    const x = v[0];\n    const y = v[1];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n  }\n  /**\n   * Rotates a {@link Mat3} by the given angle\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotate(out, a, rad) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n  }\n  /**\n   * Scales the {@link Mat3} by the dimensions in the given {@link Vec2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param v - the {@link Vec2} to scale the matrix by\n   * @returns `out`\n   **/\n  static scale(out, a, v) {\n    const x = v[0];\n    const y = v[1];\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n  }\n  /**\n   * Creates a {@link Mat3} from a vector translation\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat3.identity(dest);\n   *   mat3.translate(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat3} receiving operation result\n   * @param v - Translation vector\n   * @returns `out`\n   */\n  static fromTranslation(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = v[0];\n    out[7] = v[1];\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat3} from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   *\n   *     mat3.identity(dest);\n   *     mat3.rotate(dest, dest, rad);\n   * @category Static\n   *\n   * @param out - {@link Mat3} receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n    out[3] = -s;\n    out[4] = c;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat3} from a vector scaling\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat3.identity(dest);\n   *   mat3.scale(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat3} receiving operation result\n   * @param v - Scaling vector\n   * @returns `out`\n   */\n  static fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = v[1];\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Copies the upper-left 3x3 values of a {@link Mat2d} into the given\n   * {@link Mat3}.\n   * @category Static\n   *\n   * @param out - the receiving 3x3 matrix\n   * @param a - the source 2x3 matrix\n   * @returns `out`\n   */\n  static fromMat2d(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Calculates a {@link Mat3} from the given quaternion\n   * @category Static\n   *\n   * @param out - {@link Mat3} receiving operation result\n   * @param q - {@link Quat} to create matrix from\n   * @returns `out`\n   */\n  static fromQuat(out, q) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const yx = y * x2;\n    const yy = y * y2;\n    const zx = z * x2;\n    const zy = z * y2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n    return out;\n  }\n  /**\n   * Copies the upper-left 3x3 values of a {@link Mat4} into the given\n   * {@link Mat3}.\n   * @category Static\n   *\n   * @param out - the receiving 3x3 matrix\n   * @param a - the source 4x4 matrix\n   * @returns `out`\n   */\n  static fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n  }\n  /**\n   * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n   * @category Static\n   *\n   * @param {mat3} out mat3 receiving operation result\n   * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static normalFromMat4(out, a) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    return out;\n  }\n  /**\n   * Calculates a {@link Mat3} normal matrix (transpose inverse) from a {@link Mat4}\n   * This version omits the calculation of the constant factor (1/determinant), so\n   * any normals transformed with it will need to be renormalized.\n   * From https://stackoverflow.com/a/27616419/25968\n   * @category Static\n   *\n   * @param out - Matrix receiving operation result\n   * @param a - Mat4 to derive the normal matrix from\n   * @returns `out`\n   */\n  static normalFromMat4Fast(out, a) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = a[4];\n    const by = a[5];\n    const bz = a[6];\n    const cx = a[8];\n    const cy = a[9];\n    const cz = a[10];\n    out[0] = by * cz - cz * cy;\n    out[1] = bz * cx - cx * cz;\n    out[2] = bx * cy - cy * cx;\n    out[3] = cy * az - cz * ay;\n    out[4] = cz * ax - cx * az;\n    out[5] = cx * ay - cy * ax;\n    out[6] = ay * bz - az * by;\n    out[7] = az * bx - ax * bz;\n    out[8] = ax * by - ay * bx;\n    return out;\n  }\n  /**\n   * Generates a 2D projection matrix with the given bounds\n   * @category Static\n   *\n   * @param out mat3 frustum matrix will be written into\n   * @param width Width of your gl context\n   * @param height Height of gl context\n   * @returns `out`\n   */\n  static projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Returns Frobenius norm of a {@link Mat3}\n   * @category Static\n   *\n   * @param a - the matrix to calculate Frobenius norm of\n   * @returns Frobenius norm\n   */\n  static frob(a) {\n    return Math.sqrt(\n      a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8]\n    );\n  }\n  /**\n   * Multiply each element of a {@link Mat3} by a scalar.\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param b - amount to scale the matrix's elements by\n   * @returns `out`\n   */\n  static multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n  }\n  /**\n   * Adds two {@link Mat3}'s after multiplying each element of the second operand by a scalar value.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b's elements by before adding\n   * @returns `out`\n   */\n  static multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    out[6] = a[6] + b[6] * scale;\n    out[7] = a[7] + b[7] * scale;\n    out[8] = a[8] + b[8] * scale;\n    return out;\n  }\n  /**\n   * Returns whether two {@link Mat3}s have exactly the same elements in the same position (when compared with ===).\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n  }\n  /**\n   * Returns whether two {@link Mat3}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const a6 = a[6];\n    const a7 = a[7];\n    const a8 = a[8];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    const b6 = b[6];\n    const b7 = b[7];\n    const b8 = b[8];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= GLM_EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= GLM_EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= GLM_EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= GLM_EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= GLM_EPSILON * Math.max(1, Math.abs(a8), Math.abs(b8));\n  }\n  /**\n   * Returns a string representation of a {@link Mat3}\n   * @category Static\n   *\n   * @param a - matrix to represent as a string\n   * @returns string representation of the matrix\n   */\n  static str(a) {\n    return `Mat3(${a.join(\", \")})`;\n  }\n};\nMat3.prototype.mul = Mat3.prototype.multiply;\nMat3.mul = Mat3.multiply;\nMat3.sub = Mat3.subtract;\nvar Mat4 = class _Mat4 extends Float32Array {\n  static #IDENTITY_4X4 = new Float32Array([\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1\n  ]);\n  /**\n   * Temporary variable to prevent repeated allocations in the algorithms within Mat4.\n   * These are declared as TypedArrays to aid in tree-shaking.\n   */\n  static #TMP_VEC3 = new Float32Array(3);\n  /**\n   * Create a {@link Mat4}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 16:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 16);\n        break;\n      case 1:\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v\n          ]);\n        } else {\n          super(v, 0, 16);\n        }\n        break;\n      default:\n        super(_Mat4.#IDENTITY_4X4);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Mat4.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Mat4.str(this);\n  }\n  // ===================\n  // Instance methods\n  // ===================\n  /**\n   * Copy the values from another {@link Mat4} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity matrix\n   * Equivalent to Mat4.identity(this)\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  identity() {\n    this.set(_Mat4.#IDENTITY_4X4);\n    return this;\n  }\n  /**\n   * Multiplies this {@link Mat4} against another one\n   * Equivalent to `Mat4.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The second operand\n   * @returns `this`\n   */\n  multiply(b) {\n    return _Mat4.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Mat4.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Transpose this {@link Mat4}\n   * Equivalent to `Mat4.transpose(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  transpose() {\n    return _Mat4.transpose(this, this);\n  }\n  /**\n   * Inverts this {@link Mat4}\n   * Equivalent to `Mat4.invert(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    return _Mat4.invert(this, this);\n  }\n  /**\n   * Translate this {@link Mat4} by the given vector\n   * Equivalent to `Mat4.translate(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec3} to translate by\n   * @returns `this`\n   */\n  translate(v) {\n    return _Mat4.translate(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat4} by the given angle around the given axis\n   * Equivalent to `Mat4.rotate(this, this, rad, axis);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @param axis - the axis to rotate around\n   * @returns `this`\n   */\n  rotate(rad, axis) {\n    return _Mat4.rotate(this, this, rad, axis);\n  }\n  /**\n   * Scales this {@link Mat4} by the dimensions in the given vec3 not using vectorization\n   * Equivalent to `Mat4.scale(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec3} to scale the matrix by\n   * @returns `this`\n   */\n  scale(v) {\n    return _Mat4.scale(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat4} by the given angle around the X axis\n   * Equivalent to `Mat4.rotateX(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotateX(rad) {\n    return _Mat4.rotateX(this, this, rad);\n  }\n  /**\n   * Rotates this {@link Mat4} by the given angle around the Y axis\n   * Equivalent to `Mat4.rotateY(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotateY(rad) {\n    return _Mat4.rotateY(this, this, rad);\n  }\n  /**\n   * Rotates this {@link Mat4} by the given angle around the Z axis\n   * Equivalent to `Mat4.rotateZ(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotateZ(rad) {\n    return _Mat4.rotateZ(this, this, rad);\n  }\n  /**\n   * Generates a perspective projection matrix with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n   * which matches WebGL/OpenGL's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * Equivalent to `Mat4.perspectiveNO(this, fovy, aspect, near, far);`\n   * @category Methods\n   *\n   * @param fovy - Vertical field of view in radians\n   * @param aspect - Aspect ratio. typically viewport width/height\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `this`\n   */\n  perspectiveNO(fovy, aspect, near, far) {\n    return _Mat4.perspectiveNO(this, fovy, aspect, near, far);\n  }\n  /**\n   * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n   * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * Equivalent to `Mat4.perspectiveZO(this, fovy, aspect, near, far);`\n   * @category Methods\n   *\n   * @param fovy - Vertical field of view in radians\n   * @param aspect - Aspect ratio. typically viewport width/height\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `this`\n   */\n  perspectiveZO(fovy, aspect, near, far) {\n    return _Mat4.perspectiveZO(this, fovy, aspect, near, far);\n  }\n  /**\n   * Generates a orthogonal projection matrix with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n   * which matches WebGL/OpenGL's clip volume.\n   * Equivalent to `Mat4.orthoNO(this, left, right, bottom, top, near, far);`\n   * @category Methods\n   *\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `this`\n   */\n  orthoNO(left, right, bottom, top, near, far) {\n    return _Mat4.orthoNO(this, left, right, bottom, top, near, far);\n  }\n  /**\n   * Generates a orthogonal projection matrix with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n   * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n   * Equivalent to `Mat4.orthoZO(this, left, right, bottom, top, near, far);`\n   * @category Methods\n   *\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `this`\n   */\n  orthoZO(left, right, bottom, top, near, far) {\n    return _Mat4.orthoZO(this, left, right, bottom, top, near, far);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Mat4}.\n   */\n  static get BYTE_LENGTH() {\n    return 16 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, identity {@link Mat4}\n   * @category Static\n   *\n   * @returns A new {@link Mat4}\n   */\n  static create() {\n    return new _Mat4();\n  }\n  /**\n   * Creates a new {@link Mat4} initialized with values from an existing matrix\n   * @category Static\n   *\n   * @param a - Matrix to clone\n   * @returns A new {@link Mat4}\n   */\n  static clone(a) {\n    return new _Mat4(a);\n  }\n  /**\n   * Copy the values from one {@link Mat4} to another\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - Matrix to copy\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n  }\n  /**\n   * Create a new mat4 with the given values\n   * @category Static\n   *\n   * @param values - Matrix components\n   * @returns A new {@link Mat4}\n   */\n  static fromValues(...values) {\n    return new _Mat4(...values);\n  }\n  /**\n   * Set the components of a mat4 to the given values\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @param values - Matrix components\n   * @returns `out`\n   */\n  static set(out, ...values) {\n    out[0] = values[0];\n    out[1] = values[1];\n    out[2] = values[2];\n    out[3] = values[3];\n    out[4] = values[4];\n    out[5] = values[5];\n    out[6] = values[6];\n    out[7] = values[7];\n    out[8] = values[8];\n    out[9] = values[9];\n    out[10] = values[10];\n    out[11] = values[11];\n    out[12] = values[12];\n    out[13] = values[13];\n    out[14] = values[14];\n    out[15] = values[15];\n    return out;\n  }\n  /**\n   * Set a {@link Mat4} to the identity matrix\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Transpose the values of a {@link Mat4}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static transpose(out, a) {\n    if (out === a) {\n      const a01 = a[1], a02 = a[2], a03 = a[3];\n      const a12 = a[6], a13 = a[7];\n      const a23 = a[11];\n      out[1] = a[4];\n      out[2] = a[8];\n      out[3] = a[12];\n      out[4] = a01;\n      out[6] = a[9];\n      out[7] = a[13];\n      out[8] = a02;\n      out[9] = a12;\n      out[11] = a[14];\n      out[12] = a03;\n      out[13] = a13;\n      out[14] = a23;\n    } else {\n      out[0] = a[0];\n      out[1] = a[4];\n      out[2] = a[8];\n      out[3] = a[12];\n      out[4] = a[1];\n      out[5] = a[5];\n      out[6] = a[9];\n      out[7] = a[13];\n      out[8] = a[2];\n      out[9] = a[6];\n      out[10] = a[10];\n      out[11] = a[14];\n      out[12] = a[3];\n      out[13] = a[7];\n      out[14] = a[11];\n      out[15] = a[15];\n    }\n    return out;\n  }\n  /**\n   * Inverts a {@link Mat4}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static invert(out, a) {\n    const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n    return out;\n  }\n  /**\n   * Calculates the adjugate of a {@link Mat4}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static adjoint(out, a) {\n    const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    out[0] = a11 * b11 - a12 * b10 + a13 * b09;\n    out[1] = a02 * b10 - a01 * b11 - a03 * b09;\n    out[2] = a31 * b05 - a32 * b04 + a33 * b03;\n    out[3] = a22 * b04 - a21 * b05 - a23 * b03;\n    out[4] = a12 * b08 - a10 * b11 - a13 * b07;\n    out[5] = a00 * b11 - a02 * b08 + a03 * b07;\n    out[6] = a32 * b02 - a30 * b05 - a33 * b01;\n    out[7] = a20 * b05 - a22 * b02 + a23 * b01;\n    out[8] = a10 * b10 - a11 * b08 + a13 * b06;\n    out[9] = a01 * b08 - a00 * b10 - a03 * b06;\n    out[10] = a30 * b04 - a31 * b02 + a33 * b00;\n    out[11] = a21 * b02 - a20 * b04 - a23 * b00;\n    out[12] = a11 * b07 - a10 * b09 - a12 * b06;\n    out[13] = a00 * b09 - a01 * b07 + a02 * b06;\n    out[14] = a31 * b01 - a30 * b03 - a32 * b00;\n    out[15] = a20 * b03 - a21 * b01 + a22 * b00;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a {@link Mat4}\n   * @category Static\n   *\n   * @param a - the source matrix\n   * @returns determinant of a\n   */\n  static determinant(a) {\n    const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n    const b0 = a00 * a11 - a01 * a10;\n    const b1 = a00 * a12 - a02 * a10;\n    const b2 = a01 * a12 - a02 * a11;\n    const b3 = a20 * a31 - a21 * a30;\n    const b4 = a20 * a32 - a22 * a30;\n    const b5 = a21 * a32 - a22 * a31;\n    const b6 = a00 * b5 - a01 * b4 + a02 * b3;\n    const b7 = a10 * b5 - a11 * b4 + a12 * b3;\n    const b8 = a20 * b2 - a21 * b1 + a22 * b0;\n    const b9 = a30 * b2 - a31 * b1 + a32 * b0;\n    return a13 * b6 - a03 * b7 + a33 * b8 - a23 * b9;\n  }\n  /**\n   * Multiplies two {@link Mat4}s\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    let b0 = b[0];\n    let b1 = b[1];\n    let b2 = b[2];\n    let b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Translate a {@link Mat4} by the given vector\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to translate\n   * @param v - vector to translate by\n   * @returns `out`\n   */\n  static translate(out, a, v) {\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    if (a === out) {\n      out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n      out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n      out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n      out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n      const a00 = a[0];\n      const a01 = a[1];\n      const a02 = a[2];\n      const a03 = a[3];\n      const a10 = a[4];\n      const a11 = a[5];\n      const a12 = a[6];\n      const a13 = a[7];\n      const a20 = a[8];\n      const a21 = a[9];\n      const a22 = a[10];\n      const a23 = a[11];\n      out[0] = a00;\n      out[1] = a01;\n      out[2] = a02;\n      out[3] = a03;\n      out[4] = a10;\n      out[5] = a11;\n      out[6] = a12;\n      out[7] = a13;\n      out[8] = a20;\n      out[9] = a21;\n      out[10] = a22;\n      out[11] = a23;\n      out[12] = a00 * x + a10 * y + a20 * z + a[12];\n      out[13] = a01 * x + a11 * y + a21 * z + a[13];\n      out[14] = a02 * x + a12 * y + a22 * z + a[14];\n      out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n    return out;\n  }\n  /**\n   * Scales the {@link Mat4} by the dimensions in the given {@link Vec3} not using vectorization\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param v - the {@link Vec3} to scale the matrix by\n   * @returns `out`\n   **/\n  static scale(out, a, v) {\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n  }\n  /**\n   * Rotates a {@link Mat4} by the given angle around the given axis\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @param axis - the axis to rotate around\n   * @returns `out` or `null` if axis has a length of 0\n   */\n  static rotate(out, a, rad, axis) {\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    let len = Math.sqrt(x * x + y * y + z * z);\n    if (len < GLM_EPSILON) {\n      return null;\n    }\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const t = 1 - c;\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const b00 = x * x * t + c;\n    const b01 = y * x * t + z * s;\n    const b02 = z * x * t - y * s;\n    const b10 = x * y * t - z * s;\n    const b11 = y * y * t + c;\n    const b12 = z * y * t + x * s;\n    const b20 = x * z * t + y * s;\n    const b21 = y * z * t - x * s;\n    const b22 = z * z * t + c;\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n    if (a !== out) {\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n    return out;\n  }\n  /**\n   * Rotates a matrix by the given angle around the X axis\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotateX(out, a, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    if (a !== out) {\n      out[0] = a[0];\n      out[1] = a[1];\n      out[2] = a[2];\n      out[3] = a[3];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n  }\n  /**\n   * Rotates a matrix by the given angle around the Y axis\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotateY(out, a, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    if (a !== out) {\n      out[4] = a[4];\n      out[5] = a[5];\n      out[6] = a[6];\n      out[7] = a[7];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n  }\n  /**\n   * Rotates a matrix by the given angle around the Z axis\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotateZ(out, a, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    if (a !== out) {\n      out[8] = a[8];\n      out[9] = a[9];\n      out[10] = a[10];\n      out[11] = a[11];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat4} from a vector translation\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.translate(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat4} receiving operation result\n   * @param v - Translation vector\n   * @returns `out`\n   */\n  static fromTranslation(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat4} from a vector scaling\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.scale(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat4} receiving operation result\n   * @param v - Scaling vector\n   * @returns `out`\n   */\n  static fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat4} from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.rotate(dest, dest, rad, axis);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat4} receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @param axis - the axis to rotate around\n   * @returns `out` or `null` if `axis` has a length of 0\n   */\n  static fromRotation(out, rad, axis) {\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    let len = Math.sqrt(x * x + y * y + z * z);\n    if (len < GLM_EPSILON) {\n      return null;\n    }\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const t = 1 - c;\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from the given angle around the X axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.rotateX(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromXRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from the given angle around the Y axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.rotateY(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromYRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = 0;\n    out[2] = -s;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from the given angle around the Z axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.rotateZ(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromZRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a quaternion rotation and vector translation\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.translate(dest, vec);\n   *   let quatMat = mat4.create();\n   *   quat4.toMat4(quat, quatMat);\n   *   mat4.multiply(dest, quatMat);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param q - Rotation quaternion\n   * @param v - Translation vector\n   * @returns `out`\n   */\n  static fromRotationTranslation(out, q, v) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Sets a {@link Mat4} from a {@link Quat2}.\n   * @category Static\n   *\n   * @param out - Matrix\n   * @param a - Dual Quaternion\n   * @returns `out`\n   */\n  static fromQuat2(out, a) {\n    const bx = -a[0];\n    const by = -a[1];\n    const bz = -a[2];\n    const bw = a[3];\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const magnitude = bx * bx + by * by + bz * bz + bw * bw;\n    if (magnitude > 0) {\n      _Mat4.#TMP_VEC3[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n      _Mat4.#TMP_VEC3[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n      _Mat4.#TMP_VEC3[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n    } else {\n      _Mat4.#TMP_VEC3[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n      _Mat4.#TMP_VEC3[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n      _Mat4.#TMP_VEC3[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n    }\n    _Mat4.fromRotationTranslation(out, a, _Mat4.#TMP_VEC3);\n    return out;\n  }\n  /**\n   * Calculates a {@link Mat4} normal matrix (transpose inverse) from a {@link Mat4}\n   * @category Static\n   *\n   * @param out - Matrix receiving operation result\n   * @param a - Mat4 to derive the normal matrix from\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static normalFromMat4(out, a) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[3] = 0;\n    out[4] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[7] = 0;\n    out[8] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[9] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Calculates a {@link Mat4} normal matrix (transpose inverse) from a {@link Mat4}\n   * This version omits the calculation of the constant factor (1/determinant), so\n   * any normals transformed with it will need to be renormalized.\n   * From https://stackoverflow.com/a/27616419/25968\n   * @category Static\n   *\n   * @param out - Matrix receiving operation result\n   * @param a - Mat4 to derive the normal matrix from\n   * @returns `out`\n   */\n  static normalFromMat4Fast(out, a) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = a[4];\n    const by = a[5];\n    const bz = a[6];\n    const cx = a[8];\n    const cy = a[9];\n    const cz = a[10];\n    out[0] = by * cz - cz * cy;\n    out[1] = bz * cx - cx * cz;\n    out[2] = bx * cy - cy * cx;\n    out[3] = 0;\n    out[4] = cy * az - cz * ay;\n    out[5] = cz * ax - cx * az;\n    out[6] = cx * ay - cy * ax;\n    out[7] = 0;\n    out[8] = ay * bz - az * by;\n    out[9] = az * bx - ax * bz;\n    out[10] = ax * by - ay * bx;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Returns the translation vector component of a transformation\n   * matrix. If a matrix is built with fromRotationTranslation,\n   * the returned vector will be the same as the translation vector\n   * originally supplied.\n   * @category Static\n   *\n   * @param  {vec3} out Vector to receive translation component\n   * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n   * @return {vec3} out\n   */\n  static getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n    return out;\n  }\n  /**\n   * Returns the scaling factor component of a transformation\n   * matrix. If a matrix is built with fromRotationTranslationScale\n   * with a normalized Quaternion parameter, the returned vector will be\n   * the same as the scaling vector\n   * originally supplied.\n   * @category Static\n   *\n   * @param  {vec3} out Vector to receive scaling factor component\n   * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n   * @return {vec3} out\n   */\n  static getScaling(out, mat) {\n    const m11 = mat[0];\n    const m12 = mat[1];\n    const m13 = mat[2];\n    const m21 = mat[4];\n    const m22 = mat[5];\n    const m23 = mat[6];\n    const m31 = mat[8];\n    const m32 = mat[9];\n    const m33 = mat[10];\n    out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n    out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n    out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n    return out;\n  }\n  /**\n   * Returns a quaternion representing the rotational component\n   * of a transformation matrix. If a matrix is built with\n   * fromRotationTranslation, the returned quaternion will be the\n   * same as the quaternion originally supplied.\n   * @category Static\n   *\n   * @param out - Quaternion to receive the rotation component\n   * @param mat - Matrix to be decomposed (input)\n   * @return `out`\n   */\n  static getRotation(out, mat) {\n    _Mat4.getScaling(_Mat4.#TMP_VEC3, mat);\n    const is1 = 1 / _Mat4.#TMP_VEC3[0];\n    const is2 = 1 / _Mat4.#TMP_VEC3[1];\n    const is3 = 1 / _Mat4.#TMP_VEC3[2];\n    const sm11 = mat[0] * is1;\n    const sm12 = mat[1] * is2;\n    const sm13 = mat[2] * is3;\n    const sm21 = mat[4] * is1;\n    const sm22 = mat[5] * is2;\n    const sm23 = mat[6] * is3;\n    const sm31 = mat[8] * is1;\n    const sm32 = mat[9] * is2;\n    const sm33 = mat[10] * is3;\n    const trace = sm11 + sm22 + sm33;\n    let S = 0;\n    if (trace > 0) {\n      S = Math.sqrt(trace + 1) * 2;\n      out[3] = 0.25 * S;\n      out[0] = (sm23 - sm32) / S;\n      out[1] = (sm31 - sm13) / S;\n      out[2] = (sm12 - sm21) / S;\n    } else if (sm11 > sm22 && sm11 > sm33) {\n      S = Math.sqrt(1 + sm11 - sm22 - sm33) * 2;\n      out[3] = (sm23 - sm32) / S;\n      out[0] = 0.25 * S;\n      out[1] = (sm12 + sm21) / S;\n      out[2] = (sm31 + sm13) / S;\n    } else if (sm22 > sm33) {\n      S = Math.sqrt(1 + sm22 - sm11 - sm33) * 2;\n      out[3] = (sm31 - sm13) / S;\n      out[0] = (sm12 + sm21) / S;\n      out[1] = 0.25 * S;\n      out[2] = (sm23 + sm32) / S;\n    } else {\n      S = Math.sqrt(1 + sm33 - sm11 - sm22) * 2;\n      out[3] = (sm12 - sm21) / S;\n      out[0] = (sm31 + sm13) / S;\n      out[1] = (sm23 + sm32) / S;\n      out[2] = 0.25 * S;\n    }\n    return out;\n  }\n  /**\n   * Decomposes a transformation matrix into its rotation, translation\n   * and scale components. Returns only the rotation component\n   * @category Static\n   *\n   * @param out_r - Quaternion to receive the rotation component\n   * @param out_t - Vector to receive the translation vector\n   * @param out_s - Vector to receive the scaling factor\n   * @param mat - Matrix to be decomposed (input)\n   * @returns `out_r`\n   */\n  static decompose(out_r, out_t, out_s, mat) {\n    out_t[0] = mat[12];\n    out_t[1] = mat[13];\n    out_t[2] = mat[14];\n    const m11 = mat[0];\n    const m12 = mat[1];\n    const m13 = mat[2];\n    const m21 = mat[4];\n    const m22 = mat[5];\n    const m23 = mat[6];\n    const m31 = mat[8];\n    const m32 = mat[9];\n    const m33 = mat[10];\n    out_s[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n    out_s[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n    out_s[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n    const is1 = 1 / out_s[0];\n    const is2 = 1 / out_s[1];\n    const is3 = 1 / out_s[2];\n    const sm11 = m11 * is1;\n    const sm12 = m12 * is2;\n    const sm13 = m13 * is3;\n    const sm21 = m21 * is1;\n    const sm22 = m22 * is2;\n    const sm23 = m23 * is3;\n    const sm31 = m31 * is1;\n    const sm32 = m32 * is2;\n    const sm33 = m33 * is3;\n    const trace = sm11 + sm22 + sm33;\n    let S = 0;\n    if (trace > 0) {\n      S = Math.sqrt(trace + 1) * 2;\n      out_r[3] = 0.25 * S;\n      out_r[0] = (sm23 - sm32) / S;\n      out_r[1] = (sm31 - sm13) / S;\n      out_r[2] = (sm12 - sm21) / S;\n    } else if (sm11 > sm22 && sm11 > sm33) {\n      S = Math.sqrt(1 + sm11 - sm22 - sm33) * 2;\n      out_r[3] = (sm23 - sm32) / S;\n      out_r[0] = 0.25 * S;\n      out_r[1] = (sm12 + sm21) / S;\n      out_r[2] = (sm31 + sm13) / S;\n    } else if (sm22 > sm33) {\n      S = Math.sqrt(1 + sm22 - sm11 - sm33) * 2;\n      out_r[3] = (sm31 - sm13) / S;\n      out_r[0] = (sm12 + sm21) / S;\n      out_r[1] = 0.25 * S;\n      out_r[2] = (sm23 + sm32) / S;\n    } else {\n      S = Math.sqrt(1 + sm33 - sm11 - sm22) * 2;\n      out_r[3] = (sm12 - sm21) / S;\n      out_r[0] = (sm31 + sm13) / S;\n      out_r[1] = (sm23 + sm32) / S;\n      out_r[2] = 0.25 * S;\n    }\n    return out_r;\n  }\n  /**\n   * Creates a matrix from a quaternion rotation, vector translation and vector scale\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.translate(dest, vec);\n   *   let quatMat = mat4.create();\n   *   quat4.toMat4(quat, quatMat);\n   *   mat4.multiply(dest, quatMat);\n   *   mat4.scale(dest, scale);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param q - Rotation quaternion\n   * @param v - Translation vector\n   * @param s - Scaling vector\n   * @returns `out`\n   */\n  static fromRotationTranslationScale(out, q, v, s) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    const sx = s[0];\n    const sy = s[1];\n    const sz = s[2];\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the\n   * given origin. This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.translate(dest, vec);\n   *   mat4.translate(dest, origin);\n   *   let quatMat = mat4.create();\n   *   quat4.toMat4(quat, quatMat);\n   *   mat4.multiply(dest, quatMat);\n   *   mat4.scale(dest, scale)\n   *   mat4.translate(dest, negativeOrigin);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param q - Rotation quaternion\n   * @param v - Translation vector\n   * @param s - Scaling vector\n   * @param o - The origin vector around which to scale and rotate\n   * @returns `out`\n   */\n  static fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    const sx = s[0];\n    const sy = s[1];\n    const sz = s[2];\n    const ox = o[0];\n    const oy = o[1];\n    const oz = o[2];\n    const out0 = (1 - (yy + zz)) * sx;\n    const out1 = (xy + wz) * sx;\n    const out2 = (xz - wy) * sx;\n    const out4 = (xy - wz) * sy;\n    const out5 = (1 - (xx + zz)) * sy;\n    const out6 = (yz + wx) * sy;\n    const out8 = (xz + wy) * sz;\n    const out9 = (yz - wx) * sz;\n    const out10 = (1 - (xx + yy)) * sz;\n    out[0] = out0;\n    out[1] = out1;\n    out[2] = out2;\n    out[3] = 0;\n    out[4] = out4;\n    out[5] = out5;\n    out[6] = out6;\n    out[7] = 0;\n    out[8] = out8;\n    out[9] = out9;\n    out[10] = out10;\n    out[11] = 0;\n    out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n    out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n    out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Calculates a 4x4 matrix from the given quaternion\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param q - Quaternion to create matrix from\n   * @returns `out`\n   */\n  static fromQuat(out, q) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const yx = y * x2;\n    const yy = y * y2;\n    const zx = z * x2;\n    const zy = z * y2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Generates a frustum matrix with the given bounds\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n   * which matches WebGL/OpenGL's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far -  Far bound of the frustum, can be null or Infinity\n   * @returns `out`\n   */\n  static frustumNO(out, left, right, bottom, top, near, far = Infinity) {\n    const rl = 1 / (right - left);\n    const tb = 1 / (top - bottom);\n    out[0] = near * 2 * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = near * 2 * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n    if (far != null && far !== Infinity) {\n      const nf = 1 / (near - far);\n      out[10] = (far + near) * nf;\n      out[14] = 2 * far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -2 * near;\n    }\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.frustumNO}\n   * @category Static\n   * @deprecated Use {@link Mat4.frustumNO} or {@link Mat4.frustumZO} explicitly\n   */\n  static frustum(out, left, right, bottom, top, near, far = Infinity) {\n    return out;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Generates a frustum matrix with the given bounds\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n   * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `out`\n   */\n  static frustumZO(out, left, right, bottom, top, near, far = Infinity) {\n    const rl = 1 / (right - left);\n    const tb = 1 / (top - bottom);\n    out[0] = near * 2 * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = near * 2 * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n    if (far != null && far !== Infinity) {\n      const nf = 1 / (near - far);\n      out[10] = far * nf;\n      out[14] = far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -near;\n    }\n    return out;\n  }\n  /**\n   * Generates a perspective projection matrix with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n   * which matches WebGL/OpenGL's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param fovy - Vertical field of view in radians\n   * @param aspect - Aspect ratio. typically viewport width/height\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `out`\n   */\n  static perspectiveNO(out, fovy, aspect, near, far = Infinity) {\n    const f = 1 / Math.tan(fovy / 2);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n    if (far != null && far !== Infinity) {\n      const nf = 1 / (near - far);\n      out[10] = (far + near) * nf;\n      out[14] = 2 * far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -2 * near;\n    }\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.perspectiveNO}\n   * @category Static\n   * @deprecated Use {@link Mat4.perspectiveNO} or {@link Mat4.perspectiveZO} explicitly\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static perspective(out, fovy, aspect, near, far = Infinity) {\n    return out;\n  }\n  /**\n   * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n   * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param fovy - Vertical field of view in radians\n   * @param aspect - Aspect ratio. typically viewport width/height\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `out`\n   */\n  static perspectiveZO(out, fovy, aspect, near, far = Infinity) {\n    const f = 1 / Math.tan(fovy / 2);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n    if (far != null && far !== Infinity) {\n      const nf = 1 / (near - far);\n      out[10] = far * nf;\n      out[14] = far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -near;\n    }\n    return out;\n  }\n  /**\n   * Generates a perspective projection matrix with the given field of view. This is primarily useful for generating\n   * projection matrices to be used with the still experimental WebVR API.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param fov - Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `out`\n   * @deprecated\n   */\n  static perspectiveFromFieldOfView(out, fov, near, far) {\n    const upTan = Math.tan(fov.upDegrees * Math.PI / 180);\n    const downTan = Math.tan(fov.downDegrees * Math.PI / 180);\n    const leftTan = Math.tan(fov.leftDegrees * Math.PI / 180);\n    const rightTan = Math.tan(fov.rightDegrees * Math.PI / 180);\n    const xScale = 2 / (leftTan + rightTan);\n    const yScale = 2 / (upTan + downTan);\n    out[0] = xScale;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = yScale;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = (upTan - downTan) * yScale * 0.5;\n    out[10] = far / (near - far);\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = far * near / (near - far);\n    out[15] = 0;\n    return out;\n  }\n  /**\n   * Generates an orthogonal projection matrix with the given bounds. The near / far clip planes correspond to a\n   * normalized device coordinate Z range of [-1, 1], which matches WebGL / OpenGLs clip volume.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `out`\n   */\n  static orthoNO(out, left, right, bottom, top, near, far) {\n    const lr = 1 / (left - right);\n    const bt = 1 / (bottom - top);\n    const nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.orthoNO}\n   * @category Static\n   * @deprecated Use {@link Mat4.orthoNO} or {@link Mat4.orthoZO} explicitly\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static ortho(out, left, right, bottom, top, near, far) {\n    return out;\n  }\n  /**\n   * Generates a orthogonal projection matrix with the given bounds. The near / far clip planes correspond to a\n   * normalized device coordinate Z range of [0, 1], which matches WebGPU / Vulkan / DirectX / Metal's clip volume.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `out`\n   */\n  static orthoZO(out, left, right, bottom, top, near, far) {\n    const lr = 1 / (left - right);\n    const bt = 1 / (bottom - top);\n    const nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = near * nf;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Generates a look-at matrix with the given eye position, focal point, and up axis. If you want a matrix that\n   * actually makes an object look at another object, you should use targetTo instead.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param eye - Position of the viewer\n   * @param center - Point the viewer is looking at\n   * @param up - vec3 pointing up\n   * @returns `out`\n   */\n  static lookAt(out, eye, center, up) {\n    const eyex = eye[0];\n    const eyey = eye[1];\n    const eyez = eye[2];\n    const upx = up[0];\n    const upy = up[1];\n    const upz = up[2];\n    const centerx = center[0];\n    const centery = center[1];\n    const centerz = center[2];\n    if (Math.abs(eyex - centerx) < GLM_EPSILON && Math.abs(eyey - centery) < GLM_EPSILON && Math.abs(eyez - centerz) < GLM_EPSILON) {\n      return _Mat4.identity(out);\n    }\n    let z0 = eyex - centerx;\n    let z1 = eyey - centery;\n    let z2 = eyez - centerz;\n    let len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n    let x0 = upy * z2 - upz * z1;\n    let x1 = upz * z0 - upx * z2;\n    let x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n      x0 = 0;\n      x1 = 0;\n      x2 = 0;\n    } else {\n      len = 1 / len;\n      x0 *= len;\n      x1 *= len;\n      x2 *= len;\n    }\n    let y0 = z1 * x2 - z2 * x1;\n    let y1 = z2 * x0 - z0 * x2;\n    let y2 = z0 * x1 - z1 * x0;\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n      y0 = 0;\n      y1 = 0;\n      y2 = 0;\n    } else {\n      len = 1 / len;\n      y0 *= len;\n      y1 *= len;\n      y2 *= len;\n    }\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Generates a matrix that makes something look at something else.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param eye - Position of the viewer\n   * @param target - Point the viewer is looking at\n   * @param up - vec3 pointing up\n   * @returns `out`\n   */\n  static targetTo(out, eye, target, up) {\n    const eyex = eye[0];\n    const eyey = eye[1];\n    const eyez = eye[2];\n    const upx = up[0];\n    const upy = up[1];\n    const upz = up[2];\n    let z0 = eyex - target[0];\n    let z1 = eyey - target[1];\n    let z2 = eyez - target[2];\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n      z0 *= len;\n      z1 *= len;\n      z2 *= len;\n    }\n    let x0 = upy * z2 - upz * z1;\n    let x1 = upz * z0 - upx * z2;\n    let x2 = upx * z1 - upy * z0;\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n      x0 *= len;\n      x1 *= len;\n      x2 *= len;\n    }\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Returns Frobenius norm of a {@link Mat4}\n   * @category Static\n   *\n   * @param a - the matrix to calculate Frobenius norm of\n   * @returns Frobenius norm\n   */\n  static frob(a) {\n    return Math.sqrt(\n      a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8] + a[9] * a[9] + a[10] * a[10] + a[11] * a[11] + a[12] * a[12] + a[13] * a[13] + a[14] * a[14] + a[15] * a[15]\n    );\n  }\n  /**\n   * Adds two {@link Mat4}'s\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiply each element of the matrix by a scalar.\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param b - amount to scale the matrix's elements by\n   * @returns `out`\n   */\n  static multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n  }\n  /**\n   * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b's elements by before adding\n   * @returns `out`\n   */\n  static multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    out[6] = a[6] + b[6] * scale;\n    out[7] = a[7] + b[7] * scale;\n    out[8] = a[8] + b[8] * scale;\n    out[9] = a[9] + b[9] * scale;\n    out[10] = a[10] + b[10] * scale;\n    out[11] = a[11] + b[11] * scale;\n    out[12] = a[12] + b[12] * scale;\n    out[13] = a[13] + b[13] * scale;\n    out[14] = a[14] + b[14] * scale;\n    out[15] = a[15] + b[15] * scale;\n    return out;\n  }\n  /**\n   * Returns whether two {@link Mat4}s have exactly the same elements in the same position (when compared with ===).\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n  }\n  /**\n   * Returns whether two {@link Mat4}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const a6 = a[6];\n    const a7 = a[7];\n    const a8 = a[8];\n    const a9 = a[9];\n    const a10 = a[10];\n    const a11 = a[11];\n    const a12 = a[12];\n    const a13 = a[13];\n    const a14 = a[14];\n    const a15 = a[15];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    const b6 = b[6];\n    const b7 = b[7];\n    const b8 = b[8];\n    const b9 = b[9];\n    const b10 = b[10];\n    const b11 = b[11];\n    const b12 = b[12];\n    const b13 = b[13];\n    const b14 = b[14];\n    const b15 = b[15];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= GLM_EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= GLM_EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= GLM_EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= GLM_EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= GLM_EPSILON * Math.max(1, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= GLM_EPSILON * Math.max(1, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= GLM_EPSILON * Math.max(1, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= GLM_EPSILON * Math.max(1, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= GLM_EPSILON * Math.max(1, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= GLM_EPSILON * Math.max(1, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= GLM_EPSILON * Math.max(1, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= GLM_EPSILON * Math.max(1, Math.abs(a15), Math.abs(b15));\n  }\n  /**\n   * Returns a string representation of a {@link Mat4}\n   * @category Static\n   *\n   * @param a - matrix to represent as a string\n   * @returns string representation of the matrix\n   */\n  static str(a) {\n    return `Mat4(${a.join(\", \")})`;\n  }\n};\nMat4.prototype.mul = Mat4.prototype.multiply;\nMat4.sub = Mat4.subtract;\nMat4.mul = Mat4.multiply;\nMat4.frustum = Mat4.frustumNO;\nMat4.perspective = Mat4.perspectiveNO;\nMat4.ortho = Mat4.orthoNO;\nvar Vec3 = class _Vec3 extends Float32Array {\n  /**\n   * Create a {@link Vec3}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 3:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 3);\n        break;\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v, v]);\n        } else {\n          super(v, 0, 3);\n        }\n        break;\n      }\n      default:\n        super(3);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  // Getters and setters to make component access read better.\n  // These are likely to be a little bit slower than direct array access.\n  /**\n   * The x component of the vector. Equivalent to `this[0];`\n   * @category Vector Components\n   */\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = value;\n  }\n  /**\n   * The y component of the vector. Equivalent to `this[1];`\n   * @category Vector Components\n   */\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = value;\n  }\n  /**\n   * The z component of the vector. Equivalent to `this[2];`\n   * @category Vector Components\n   */\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = value;\n  }\n  // Alternate set of getters and setters in case this is being used to define\n  // a color.\n  /**\n   * The r component of the vector. Equivalent to `this[0];`\n   * @category Color Components\n   */\n  get r() {\n    return this[0];\n  }\n  set r(value) {\n    this[0] = value;\n  }\n  /**\n   * The g component of the vector. Equivalent to `this[1];`\n   * @category Color Components\n   */\n  get g() {\n    return this[1];\n  }\n  set g(value) {\n    this[1] = value;\n  }\n  /**\n   * The b component of the vector. Equivalent to `this[2];`\n   * @category Color Components\n   */\n  get b() {\n    return this[2];\n  }\n  set b(value) {\n    this[2] = value;\n  }\n  /**\n   * The magnitude (length) of this.\n   * Equivalent to `Vec3.magnitude(this);`\n   *\n   * Magnitude is used because the `length` attribute is already defined by\n   * TypedArrays to mean the number of elements in the array.\n   *\n   * @category Accessors\n   */\n  get magnitude() {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Alias for {@link Vec3.magnitude}\n   *\n   * @category Accessors\n   */\n  get mag() {\n    return this.magnitude;\n  }\n  /**\n   * The squared magnitude (length) of `this`.\n   * Equivalent to `Vec3.squaredMagnitude(this);`\n   *\n   * @category Accessors\n   */\n  get squaredMagnitude() {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    return x * x + y * y + z * z;\n  }\n  /**\n   * Alias for {@link Vec3.squaredMagnitude}\n   *\n   * @category Accessors\n   */\n  get sqrMag() {\n    return this.squaredMagnitude;\n  }\n  /**\n   * A string representation of `this`\n   * Equivalent to `Vec3.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Vec3.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Vec3} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Adds a {@link Vec3} to `this`.\n   * Equivalent to `Vec3.add(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @returns `this`\n   */\n  add(b) {\n    this[0] += b[0];\n    this[1] += b[1];\n    this[2] += b[2];\n    return this;\n  }\n  /**\n   * Subtracts a {@link Vec3} from `this`.\n   * Equivalent to `Vec3.subtract(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to subtract from `this`\n   * @returns `this`\n   */\n  subtract(b) {\n    this[0] -= b[0];\n    this[1] -= b[1];\n    this[2] -= b[2];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec3.subtract}\n   * @category Methods\n   */\n  sub(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Multiplies `this` by a {@link Vec3}.\n   * Equivalent to `Vec3.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to multiply `this` by\n   * @returns `this`\n   */\n  multiply(b) {\n    this[0] *= b[0];\n    this[1] *= b[1];\n    this[2] *= b[2];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec3.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Divides `this` by a {@link Vec3}.\n   * Equivalent to `Vec3.divide(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to divide `this` by\n   * @returns `this`\n   */\n  divide(b) {\n    this[0] /= b[0];\n    this[1] /= b[1];\n    this[2] /= b[2];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec3.divide}\n   * @category Methods\n   */\n  div(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Scales `this` by a scalar number.\n   * Equivalent to `Vec3.scale(this, this, b);`\n   * @category Methods\n   *\n   * @param b - Amount to scale `this` by\n   * @returns `this`\n   */\n  scale(b) {\n    this[0] *= b;\n    this[1] *= b;\n    this[2] *= b;\n    return this;\n  }\n  /**\n   * Calculates `this` scaled by a scalar value then adds the result to `this`.\n   * Equivalent to `Vec3.scaleAndAdd(this, this, b, scale);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @param scale - The amount to scale `b` by before adding\n   * @returns `this`\n   */\n  scaleAndAdd(b, scale) {\n    this[0] += b[0] * scale;\n    this[1] += b[1] * scale;\n    this[2] += b[2] * scale;\n    return this;\n  }\n  /**\n   * Calculates the Euclidean distance between another {@link Vec3} and `this`.\n   * Equivalent to `Vec3.distance(this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to calculate the distance to\n   * @returns Distance between `this` and `b`\n   */\n  distance(b) {\n    return _Vec3.distance(this, b);\n  }\n  /**\n   * Alias for {@link Vec3.distance}\n   * @category Methods\n   */\n  dist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared Euclidean distance between another {@link Vec3} and `this`.\n   * Equivalent to `Vec3.squaredDistance(this, b);`\n   * @category Methods\n   *\n   * @param b The vector to calculate the squared distance to\n   * @returns Squared distance between `this` and `b`\n   */\n  squaredDistance(b) {\n    return _Vec3.squaredDistance(this, b);\n  }\n  /**\n   * Alias for {@link Vec3.squaredDistance}\n   * @category Methods\n   */\n  sqrDist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Negates the components of `this`.\n   * Equivalent to `Vec3.negate(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  negate() {\n    this[0] *= -1;\n    this[1] *= -1;\n    this[2] *= -1;\n    return this;\n  }\n  /**\n   * Inverts the components of `this`.\n   * Equivalent to `Vec3.inverse(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    this[0] = 1 / this[0];\n    this[1] = 1 / this[1];\n    this[2] = 1 / this[2];\n    return this;\n  }\n  /**\n   * Sets each component of `this` to its absolute value.\n   * Equivalent to `Vec3.abs(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  abs() {\n    this[0] = Math.abs(this[0]);\n    this[1] = Math.abs(this[1]);\n    this[2] = Math.abs(this[2]);\n    return this;\n  }\n  /**\n   * Calculates the dot product of this and another {@link Vec3}.\n   * Equivalent to `Vec3.dot(this, b);`\n   * @category Methods\n   *\n   * @param b - The second operand\n   * @returns Dot product of `this` and `b`\n   */\n  dot(b) {\n    return this[0] * b[0] + this[1] * b[1] + this[2] * b[2];\n  }\n  /**\n   * Normalize `this`.\n   * Equivalent to `Vec3.normalize(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  normalize() {\n    return _Vec3.normalize(this, this);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Vec3}.\n   */\n  static get BYTE_LENGTH() {\n    return 3 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, empty vec3\n   * @category Static\n   *\n   * @returns a new 3D vector\n   */\n  static create() {\n    return new _Vec3();\n  }\n  /**\n   * Creates a new vec3 initialized with values from an existing vector\n   * @category Static\n   *\n   * @param a - vector to clone\n   * @returns a new 3D vector\n   */\n  static clone(a) {\n    return new _Vec3(a);\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Vec3}\n   * @category Static\n   *\n   * @param a - Vector to calculate magnitude of\n   * @returns Magnitude of a\n   */\n  static magnitude(a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Alias for {@link Vec3.magnitude}\n   * @category Static\n   */\n  static mag(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec3.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec3.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   *\n   * @param a - vector to calculate length of\n   * @returns length of a\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec3.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec3.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Creates a new vec3 initialized with the given values\n   * @category Static\n   *\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @returns a new 3D vector\n   */\n  static fromValues(x, y, z) {\n    return new _Vec3(x, y, z);\n  }\n  /**\n   * Copy the values from one vec3 to another\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the source vector\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n  }\n  /**\n   * Set the components of a vec3 to the given values\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @returns `out`\n   */\n  static set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n  }\n  /**\n   * Adds two {@link Vec3}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n  }\n  /**\n   * Subtracts vector b from vector a\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec3.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return [0, 0, 0];\n  }\n  /**\n   * Multiplies two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec3.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return [0, 0, 0];\n  }\n  /**\n   * Divides two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec3.divide}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static div(out, a, b) {\n    return [0, 0, 0];\n  }\n  /**\n   * Math.ceil the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to ceil\n   * @returns `out`\n   */\n  static ceil(out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    return out;\n  }\n  /**\n   * Math.floor the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to floor\n   * @returns `out`\n   */\n  static floor(out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    return out;\n  }\n  /**\n   * Returns the minimum of two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static min(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n  }\n  /**\n   * Returns the maximum of two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static max(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n  }\n  /**\n   * symmetric round the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to round\n   * @returns `out`\n   */\n  /*\n    static round(out: Vec3Like, a: Readonly<Vec3Like>): Vec3Like {\n    out[0] = glMatrix.round(a[0]);\n    out[1] = glMatrix.round(a[1]);\n    out[2] = glMatrix.round(a[2]);\n    return out;\n  }*/\n  /**\n   * Scales a vec3 by a scalar number\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to scale\n   * @param scale - amount to scale the vector by\n   * @returns `out`\n   */\n  static scale(out, a, scale) {\n    out[0] = a[0] * scale;\n    out[1] = a[1] * scale;\n    out[2] = a[2] * scale;\n    return out;\n  }\n  /**\n   * Adds two vec3's after scaling the second operand by a scalar value\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b by before adding\n   * @returns `out`\n   */\n  static scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    return out;\n  }\n  /**\n   * Calculates the Euclidean distance between two vec3's\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns distance between a and b\n   */\n  static distance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    const z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Alias for {@link Vec3.distance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static dist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the squared Euclidean distance between two vec3's\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns squared distance between a and b\n   */\n  static squaredDistance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    const z = b[2] - a[2];\n    return x * x + y * y + z * z;\n  }\n  /**\n   * Alias for {@link Vec3.squaredDistance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrDist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the squared length of a vec3\n   * @category Static\n   *\n   * @param a - vector to calculate squared length of\n   * @returns squared length of a\n   */\n  static squaredLength(a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    return x * x + y * y + z * z;\n  }\n  /**\n   * Alias for {@link Vec3.squaredLength}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrLen(a, b) {\n    return 0;\n  }\n  /**\n   * Negates the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to negate\n   * @returns `out`\n   */\n  static negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n  }\n  /**\n   * Returns the inverse of the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to invert\n   * @returns `out`\n   */\n  static inverse(out, a) {\n    out[0] = 1 / a[0];\n    out[1] = 1 / a[1];\n    out[2] = 1 / a[2];\n    return out;\n  }\n  /**\n   * Returns the absolute value of the components of a {@link Vec3}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to compute the absolute values of\n   * @returns `out`\n   */\n  static abs(out, a) {\n    out[0] = Math.abs(a[0]);\n    out[1] = Math.abs(a[1]);\n    out[2] = Math.abs(a[2]);\n    return out;\n  }\n  /**\n   * Normalize a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to normalize\n   * @returns `out`\n   */\n  static normalize(out, a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two vec3's\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns dot product of a and b\n   */\n  static dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  /**\n   * Computes the cross product of two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static cross(out, a, b) {\n    const ax = a[0], ay = a[1], az = a[2];\n    const bx = b[0], by = b[1], bz = b[2];\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n  }\n  /**\n   * Performs a linear interpolation between two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static lerp(out, a, b, t) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n  }\n  /**\n   * Performs a spherical linear interpolation between two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static slerp(out, a, b, t) {\n    const angle = Math.acos(Math.min(Math.max(_Vec3.dot(a, b), -1), 1));\n    const sinTotal = Math.sin(angle);\n    const ratioA = Math.sin((1 - t) * angle) / sinTotal;\n    const ratioB = Math.sin(t * angle) / sinTotal;\n    out[0] = ratioA * a[0] + ratioB * b[0];\n    out[1] = ratioA * a[1] + ratioB * b[1];\n    out[2] = ratioA * a[2] + ratioB * b[2];\n    return out;\n  }\n  /**\n   * Performs a hermite interpolation with two control points\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param c - the third operand\n   * @param d - the fourth operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static hermite(out, a, b, c, d, t) {\n    const factorTimes2 = t * t;\n    const factor1 = factorTimes2 * (2 * t - 3) + 1;\n    const factor2 = factorTimes2 * (t - 2) + t;\n    const factor3 = factorTimes2 * (t - 1);\n    const factor4 = factorTimes2 * (3 - 2 * t);\n    out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n    out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n    out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n    return out;\n  }\n  /**\n   * Performs a bezier interpolation with two control points\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param c - the third operand\n   * @param d - the fourth operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static bezier(out, a, b, c, d, t) {\n    const inverseFactor = 1 - t;\n    const inverseFactorTimesTwo = inverseFactor * inverseFactor;\n    const factorTimes2 = t * t;\n    const factor1 = inverseFactorTimesTwo * inverseFactor;\n    const factor2 = 3 * t * inverseFactorTimesTwo;\n    const factor3 = 3 * factorTimes2 * inverseFactor;\n    const factor4 = factorTimes2 * t;\n    out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n    out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n    out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n    return out;\n  }\n  /**\n   * Generates a random vector with the given scale\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n   * @returns `out`\n   */\n  /*\n      static random(out: Vec3Like, scale) {\n      scale = scale === undefined ? 1.0 : scale;\n  \n      let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n      let z = glMatrix.RANDOM() * 2.0 - 1.0;\n      let zScale = Math.sqrt(1.0 - z * z) * scale;\n  \n      out[0] = Math.cos(r) * zScale;\n      out[1] = Math.sin(r) * zScale;\n      out[2] = z * scale;\n      return out;\n    }*/\n  /**\n   * Transforms the vec3 with a mat4.\n   * 4th vector component is implicitly '1'\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param m - matrix to transform with\n   * @returns `out`\n   */\n  static transformMat4(out, a, m) {\n    const x = a[0], y = a[1], z = a[2];\n    const w = m[3] * x + m[7] * y + m[11] * z + m[15] || 1;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n  }\n  /**\n   * Transforms the vec3 with a mat3.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param m - the 3x3 matrix to transform with\n   * @returns `out`\n   */\n  static transformMat3(out, a, m) {\n    const x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n  }\n  /**\n   * Transforms the vec3 with a quat\n   * Can also be used for dual quaternions. (Multiply it with the real part)\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param q - quaternion to transform with\n   * @returns `out`\n   */\n  static transformQuat(out, a, q) {\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const w2 = q[3] * 2;\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const uvx = qy * z - qz * y;\n    const uvy = qz * x - qx * z;\n    const uvz = qx * y - qy * x;\n    const uuvx = (qy * uvz - qz * uvy) * 2;\n    const uuvy = (qz * uvx - qx * uvz) * 2;\n    const uuvz = (qx * uvy - qy * uvx) * 2;\n    out[0] = x + uvx * w2 + uuvx;\n    out[1] = y + uvy * w2 + uuvy;\n    out[2] = z + uvz * w2 + uuvz;\n    return out;\n  }\n  /**\n   * Rotate a 3D vector around the x-axis\n   * @category Static\n   *\n   * @param out - The receiving vec3\n   * @param a - The vec3 point to rotate\n   * @param b - The origin of the rotation\n   * @param rad - The angle of rotation in radians\n   * @returns `out`\n   */\n  static rotateX(out, a, b, rad) {\n    const by = b[1];\n    const bz = b[2];\n    const py = a[1] - by;\n    const pz = a[2] - bz;\n    out[0] = a[0];\n    out[1] = py * Math.cos(rad) - pz * Math.sin(rad) + by;\n    out[2] = py * Math.sin(rad) + pz * Math.cos(rad) + bz;\n    return out;\n  }\n  /**\n   * Rotate a 3D vector around the y-axis\n   * @category Static\n   *\n   * @param out - The receiving vec3\n   * @param a - The vec3 point to rotate\n   * @param b - The origin of the rotation\n   * @param rad - The angle of rotation in radians\n   * @returns `out`\n   */\n  static rotateY(out, a, b, rad) {\n    const bx = b[0];\n    const bz = b[2];\n    const px = a[0] - bx;\n    const pz = a[2] - bz;\n    out[0] = pz * Math.sin(rad) + px * Math.cos(rad) + bx;\n    out[1] = a[1];\n    out[2] = pz * Math.cos(rad) - px * Math.sin(rad) + bz;\n    return out;\n  }\n  /**\n   * Rotate a 3D vector around the z-axis\n   * @category Static\n   *\n   * @param out - The receiving vec3\n   * @param a - The vec3 point to rotate\n   * @param b - The origin of the rotation\n   * @param rad - The angle of rotation in radians\n   * @returns `out`\n   */\n  static rotateZ(out, a, b, rad) {\n    const bx = b[0];\n    const by = b[1];\n    const px = a[0] - bx;\n    const py = a[1] - by;\n    out[0] = px * Math.cos(rad) - py * Math.sin(rad) + bx;\n    out[1] = px * Math.sin(rad) + py * Math.cos(rad) + by;\n    out[2] = b[2];\n    return out;\n  }\n  /**\n   * Get the angle between two 3D vectors\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns The angle in radians\n   */\n  static angle(a, b) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = b[0];\n    const by = b[1];\n    const bz = b[2];\n    const mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz));\n    const cosine = mag && _Vec3.dot(a, b) / mag;\n    return Math.acos(Math.min(Math.max(cosine, -1), 1));\n  }\n  /**\n   * Set the components of a vec3 to zero\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @returns `out`\n   */\n  static zero(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n  }\n  /**\n   * Returns a string representation of a vector\n   * @category Static\n   *\n   * @param a - vector to represent as a string\n   * @returns string representation of the vector\n   */\n  static str(a) {\n    return `Vec3(${a.join(\", \")})`;\n  }\n  /**\n   * Returns whether the vectors have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n  }\n  /**\n   * Returns whether the vectors have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2));\n  }\n};\nVec3.prototype.sub = Vec3.prototype.subtract;\nVec3.prototype.mul = Vec3.prototype.multiply;\nVec3.prototype.div = Vec3.prototype.divide;\nVec3.prototype.dist = Vec3.prototype.distance;\nVec3.prototype.sqrDist = Vec3.prototype.squaredDistance;\nVec3.sub = Vec3.subtract;\nVec3.mul = Vec3.multiply;\nVec3.div = Vec3.divide;\nVec3.dist = Vec3.distance;\nVec3.sqrDist = Vec3.squaredDistance;\nVec3.sqrLen = Vec3.squaredLength;\nVec3.mag = Vec3.magnitude;\nVec3.length = Vec3.magnitude;\nVec3.len = Vec3.magnitude;\nvar Vec4 = class _Vec4 extends Float32Array {\n  /**\n   * Create a {@link Vec4}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 4:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 4);\n        break;\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v, v, v]);\n        } else {\n          super(v, 0, 4);\n        }\n        break;\n      }\n      default:\n        super(4);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  // Getters and setters to make component access read better.\n  // These are likely to be a little bit slower than direct array access.\n  /**\n   * The x component of the vector. Equivalent to `this[0];`\n   * @category Vector Components\n   */\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = value;\n  }\n  /**\n   * The y component of the vector. Equivalent to `this[1];`\n   * @category Vector Components\n   */\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = value;\n  }\n  /**\n   * The z component of the vector. Equivalent to `this[2];`\n   * @category Vector Components\n   */\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = value;\n  }\n  /**\n   * The w component of the vector. Equivalent to `this[3];`\n   * @category Vector Components\n   */\n  get w() {\n    return this[3];\n  }\n  set w(value) {\n    this[3] = value;\n  }\n  // Alternate set of getters and setters in case this is being used to define\n  // a color.\n  /**\n   * The r component of the vector. Equivalent to `this[0];`\n   * @category Color Components\n   */\n  get r() {\n    return this[0];\n  }\n  set r(value) {\n    this[0] = value;\n  }\n  /**\n   * The g component of the vector. Equivalent to `this[1];`\n   * @category Color Components\n   */\n  get g() {\n    return this[1];\n  }\n  set g(value) {\n    this[1] = value;\n  }\n  /**\n   * The b component of the vector. Equivalent to `this[2];`\n   * @category Color Components\n   */\n  get b() {\n    return this[2];\n  }\n  set b(value) {\n    this[2] = value;\n  }\n  /**\n   * The a component of the vector. Equivalent to `this[3];`\n   * @category Color Components\n   */\n  get a() {\n    return this[3];\n  }\n  set a(value) {\n    this[3] = value;\n  }\n  /**\n   * The magnitude (length) of this.\n   * Equivalent to `Vec4.magnitude(this);`\n   *\n   * Magnitude is used because the `length` attribute is already defined by\n   * TypedArrays to mean the number of elements in the array.\n   *\n   * @category Accessors\n   */\n  get magnitude() {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    const w = this[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n  }\n  /**\n   * Alias for {@link Vec4.magnitude}\n   *\n   * @category Accessors\n   */\n  get mag() {\n    return this.magnitude;\n  }\n  /**\n   * A string representation of `this`\n   * Equivalent to `Vec4.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Vec4.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Vec4} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    super.set(a);\n    return this;\n  }\n  /**\n   * Adds a {@link Vec4} to `this`.\n   * Equivalent to `Vec4.add(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @returns `this`\n   */\n  add(b) {\n    this[0] += b[0];\n    this[1] += b[1];\n    this[2] += b[2];\n    this[3] += b[3];\n    return this;\n  }\n  /**\n   * Subtracts a {@link Vec4} from `this`.\n   * Equivalent to `Vec4.subtract(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to subtract from `this`\n   * @returns `this`\n   */\n  subtract(b) {\n    this[0] -= b[0];\n    this[1] -= b[1];\n    this[2] -= b[2];\n    this[3] -= b[3];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec4.subtract}\n   * @category Methods\n   */\n  sub(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Multiplies `this` by a {@link Vec4}.\n   * Equivalent to `Vec4.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to multiply `this` by\n   * @returns `this`\n   */\n  multiply(b) {\n    this[0] *= b[0];\n    this[1] *= b[1];\n    this[2] *= b[2];\n    this[3] *= b[3];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec4.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Divides `this` by a {@link Vec4}.\n   * Equivalent to `Vec4.divide(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to divide `this` by\n   * @returns `this`\n   */\n  divide(b) {\n    this[0] /= b[0];\n    this[1] /= b[1];\n    this[2] /= b[2];\n    this[3] /= b[3];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec4.divide}\n   * @category Methods\n   */\n  div(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Scales `this` by a scalar number.\n   * Equivalent to `Vec4.scale(this, this, b);`\n   * @category Methods\n   *\n   * @param b - Amount to scale `this` by\n   * @returns `this`\n   */\n  scale(b) {\n    this[0] *= b;\n    this[1] *= b;\n    this[2] *= b;\n    this[3] *= b;\n    return this;\n  }\n  /**\n   * Calculates `this` scaled by a scalar value then adds the result to `this`.\n   * Equivalent to `Vec4.scaleAndAdd(this, this, b, scale);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @param scale - The amount to scale `b` by before adding\n   * @returns `this`\n   */\n  scaleAndAdd(b, scale) {\n    this[0] += b[0] * scale;\n    this[1] += b[1] * scale;\n    this[2] += b[2] * scale;\n    this[3] += b[3] * scale;\n    return this;\n  }\n  /**\n   * Calculates the Euclidean distance between another {@link Vec4} and `this`.\n   * Equivalent to `Vec4.distance(this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to calculate the distance to\n   * @returns Distance between `this` and `b`\n   */\n  distance(b) {\n    return _Vec4.distance(this, b);\n  }\n  /**\n   * Alias for {@link Vec4.distance}\n   * @category Methods\n   */\n  dist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared Euclidean distance between another {@link Vec4} and `this`.\n   * Equivalent to `Vec4.squaredDistance(this, b);`\n   * @category Methods\n   *\n   * @param b The vector to calculate the squared distance to\n   * @returns Squared distance between `this` and `b`\n   */\n  squaredDistance(b) {\n    return _Vec4.squaredDistance(this, b);\n  }\n  /**\n   * Alias for {@link Vec4.squaredDistance}\n   * @category Methods\n   */\n  sqrDist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Negates the components of `this`.\n   * Equivalent to `Vec4.negate(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  negate() {\n    this[0] *= -1;\n    this[1] *= -1;\n    this[2] *= -1;\n    this[3] *= -1;\n    return this;\n  }\n  /**\n   * Inverts the components of `this`.\n   * Equivalent to `Vec4.inverse(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    this[0] = 1 / this[0];\n    this[1] = 1 / this[1];\n    this[2] = 1 / this[2];\n    this[3] = 1 / this[3];\n    return this;\n  }\n  /**\n   * Sets each component of `this` to it's absolute value.\n   * Equivalent to `Vec4.abs(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  abs() {\n    this[0] = Math.abs(this[0]);\n    this[1] = Math.abs(this[1]);\n    this[2] = Math.abs(this[2]);\n    this[3] = Math.abs(this[3]);\n    return this;\n  }\n  /**\n   * Calculates the dot product of this and another {@link Vec4}.\n   * Equivalent to `Vec4.dot(this, b);`\n   * @category Methods\n   *\n   * @param b - The second operand\n   * @returns Dot product of `this` and `b`\n   */\n  dot(b) {\n    return this[0] * b[0] + this[1] * b[1] + this[2] * b[2] + this[3] * b[3];\n  }\n  /**\n   * Normalize `this`.\n   * Equivalent to `Vec4.normalize(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  normalize() {\n    return _Vec4.normalize(this, this);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Vec4}.\n   */\n  static get BYTE_LENGTH() {\n    return 4 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, empty {@link Vec4}\n   * @category Static\n   *\n   * @returns a new 4D vector\n   */\n  static create() {\n    return new _Vec4();\n  }\n  /**\n   * Creates a new {@link Vec4} initialized with values from an existing vector\n   * @category Static\n   *\n   * @param a - vector to clone\n   * @returns a new 4D vector\n   */\n  static clone(a) {\n    return new _Vec4(a);\n  }\n  /**\n   * Creates a new {@link Vec4} initialized with the given values\n   * @category Static\n   *\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @param w - W component\n   * @returns a new 4D vector\n   */\n  static fromValues(x, y, z, w) {\n    return new _Vec4(x, y, z, w);\n  }\n  /**\n   * Copy the values from one {@link Vec4} to another\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the source vector\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the components of a {@link Vec4} to the given values\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @param w - W component\n   * @returns `out`\n   */\n  static set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n  }\n  /**\n   * Adds two {@link Vec4}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n  }\n  /**\n   * Subtracts vector b from vector a\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec4.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiplies two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec4.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Divides two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec4.divide}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static div(out, a, b) {\n    return out;\n  }\n  /**\n   * Math.ceil the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to ceil\n   * @returns `out`\n   */\n  static ceil(out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    out[3] = Math.ceil(a[3]);\n    return out;\n  }\n  /**\n   * Math.floor the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to floor\n   * @returns `out`\n   */\n  static floor(out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    out[3] = Math.floor(a[3]);\n    return out;\n  }\n  /**\n   * Returns the minimum of two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static min(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n  }\n  /**\n   * Returns the maximum of two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static max(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n  }\n  /**\n   * Math.round the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to round\n   * @returns `out`\n   */\n  static round(out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    out[3] = Math.round(a[3]);\n    return out;\n  }\n  /**\n   * Scales a {@link Vec4} by a scalar number\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to scale\n   * @param scale - amount to scale the vector by\n   * @returns `out`\n   */\n  static scale(out, a, scale) {\n    out[0] = a[0] * scale;\n    out[1] = a[1] * scale;\n    out[2] = a[2] * scale;\n    out[3] = a[3] * scale;\n    return out;\n  }\n  /**\n   * Adds two {@link Vec4}'s after scaling the second operand by a scalar value\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b by before adding\n   * @returns `out`\n   */\n  static scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    return out;\n  }\n  /**\n   * Calculates the Euclidean distance between two {@link Vec4}'s\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns distance between a and b\n   */\n  static distance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    const z = b[2] - a[2];\n    const w = b[3] - a[3];\n    return Math.hypot(x, y, z, w);\n  }\n  /**\n   * Alias for {@link Vec4.distance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static dist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the squared Euclidean distance between two {@link Vec4}'s\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns squared distance between a and b\n   */\n  static squaredDistance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    const z = b[2] - a[2];\n    const w = b[3] - a[3];\n    return x * x + y * y + z * z + w * w;\n  }\n  /**\n   * Alias for {@link Vec4.squaredDistance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrDist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Vec4}\n   * @category Static\n   *\n   * @param a - vector to calculate length of\n   * @returns length of `a`\n   */\n  static magnitude(a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n  }\n  /**\n   * Alias for {@link Vec4.magnitude}\n   * @category Static\n   */\n  static mag(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec4.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec4.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec4.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec4.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared length of a {@link Vec4}\n   * @category Static\n   *\n   * @param a - vector to calculate squared length of\n   * @returns squared length of a\n   */\n  static squaredLength(a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = a[3];\n    return x * x + y * y + z * z + w * w;\n  }\n  /**\n   * Alias for {@link Vec4.squaredLength}\n   * @category Static\n   */\n  static sqrLen(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Negates the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to negate\n   * @returns `out`\n   */\n  static negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n  }\n  /**\n   * Returns the inverse of the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to invert\n   * @returns `out`\n   */\n  static inverse(out, a) {\n    out[0] = 1 / a[0];\n    out[1] = 1 / a[1];\n    out[2] = 1 / a[2];\n    out[3] = 1 / a[3];\n    return out;\n  }\n  /**\n   * Returns the absolute value of the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to compute the absolute values of\n   * @returns `out`\n   */\n  static abs(out, a) {\n    out[0] = Math.abs(a[0]);\n    out[1] = Math.abs(a[1]);\n    out[2] = Math.abs(a[2]);\n    out[3] = Math.abs(a[3]);\n    return out;\n  }\n  /**\n   * Normalize a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to normalize\n   * @returns `out`\n   */\n  static normalize(out, a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two {@link Vec4}'s\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns dot product of a and b\n   */\n  static dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  /**\n   * Returns the cross-product of three vectors in a 4-dimensional space\n   * @category Static\n   *\n   * @param out the receiving vector\n   * @param u - the first vector\n   * @param v - the second vector\n   * @param w - the third vector\n   * @returns result\n   */\n  static cross(out, u, v, w) {\n    const a = v[0] * w[1] - v[1] * w[0];\n    const b = v[0] * w[2] - v[2] * w[0];\n    const c = v[0] * w[3] - v[3] * w[0];\n    const d = v[1] * w[2] - v[2] * w[1];\n    const e = v[1] * w[3] - v[3] * w[1];\n    const f = v[2] * w[3] - v[3] * w[2];\n    const g = u[0];\n    const h = u[1];\n    const i = u[2];\n    const j = u[3];\n    out[0] = h * f - i * e + j * d;\n    out[1] = -(g * f) + i * c - j * b;\n    out[2] = g * e - h * c + j * a;\n    out[3] = -(g * d) + h * b - i * a;\n    return out;\n  }\n  /**\n   * Performs a linear interpolation between two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static lerp(out, a, b, t) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n  }\n  /**\n   * Generates a random vector with the given scale\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param [scale] - Length of the resulting vector. If ommitted, a unit vector will be returned\n   * @returns `out`\n   */\n  /*\n      static random(out: Vec4Like, scale): Vec4Like {\n      scale = scale || 1.0;\n  \n      // Marsaglia, George. Choosing a Point from the Surface of a\n      // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n      // http://projecteuclid.org/euclid.aoms/1177692644;\n      var v1, v2, v3, v4;\n      var s1, s2;\n      do {\n        v1 = glMatrix.RANDOM() * 2 - 1;\n        v2 = glMatrix.RANDOM() * 2 - 1;\n        s1 = v1 * v1 + v2 * v2;\n      } while (s1 >= 1);\n      do {\n        v3 = glMatrix.RANDOM() * 2 - 1;\n        v4 = glMatrix.RANDOM() * 2 - 1;\n        s2 = v3 * v3 + v4 * v4;\n      } while (s2 >= 1);\n  \n      var d = Math.sqrt((1 - s1) / s2);\n      out[0] = scale * v1;\n      out[1] = scale * v2;\n      out[2] = scale * v3 * d;\n      out[3] = scale * v4 * d;\n      return out;\n    }*/\n  /**\n   * Transforms the {@link Vec4} with a {@link Mat4}.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param m - matrix to transform with\n   * @returns `out`\n   */\n  static transformMat4(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec4} with a {@link Quat}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param q - quaternion to transform with\n   * @returns `out`\n   */\n  static transformQuat(out, a, q) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the components of a {@link Vec4} to zero\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @returns `out`\n   */\n  static zero(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n  }\n  /**\n   * Returns a string representation of a {@link Vec4}\n   * @category Static\n   *\n   * @param a - vector to represent as a string\n   * @returns string representation of the vector\n   */\n  static str(a) {\n    return `Vec4(${a.join(\", \")})`;\n  }\n  /**\n   * Returns whether the vectors have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n  }\n  /**\n   * Returns whether the vectors have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3));\n  }\n};\nVec4.prototype.sub = Vec4.prototype.subtract;\nVec4.prototype.mul = Vec4.prototype.multiply;\nVec4.prototype.div = Vec4.prototype.divide;\nVec4.prototype.dist = Vec4.prototype.distance;\nVec4.prototype.sqrDist = Vec4.prototype.squaredDistance;\nVec4.sub = Vec4.subtract;\nVec4.mul = Vec4.multiply;\nVec4.div = Vec4.divide;\nVec4.dist = Vec4.distance;\nVec4.sqrDist = Vec4.squaredDistance;\nVec4.sqrLen = Vec4.squaredLength;\nVec4.mag = Vec4.magnitude;\nVec4.length = Vec4.magnitude;\nVec4.len = Vec4.magnitude;\nvar Quat = class _Quat extends Float32Array {\n  static #DEFAULT_ANGLE_ORDER = \"zyx\";\n  // Temporary variables to prevent repeated allocations in the algorithms within Quat.\n  // These are declared as TypedArrays to aid in tree-shaking.\n  static #TMP_QUAT1 = new Float32Array(4);\n  static #TMP_QUAT2 = new Float32Array(4);\n  static #TMP_MAT3 = new Float32Array(9);\n  static #TMP_VEC3 = new Float32Array(3);\n  static #X_UNIT_VEC3 = new Float32Array([1, 0, 0]);\n  static #Y_UNIT_VEC3 = new Float32Array([0, 1, 0]);\n  /**\n   * Create a {@link Quat}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 4:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 4);\n        break;\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v, v, v]);\n        } else {\n          super(v, 0, 4);\n        }\n        break;\n      }\n      default:\n        super(4);\n        this[3] = 1;\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  // Getters and setters to make component access read better.\n  // These are likely to be a little bit slower than direct array access.\n  /**\n   * The x component of the quaternion. Equivalent to `this[0];`\n   * @category Quaternion Components\n   */\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = value;\n  }\n  /**\n   * The y component of the quaternion. Equivalent to `this[1];`\n   * @category Quaternion Components\n   */\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = value;\n  }\n  /**\n   * The z component of the quaternion. Equivalent to `this[2];`\n   * @category Quaternion Components\n   */\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = value;\n  }\n  /**\n   * The w component of the quaternion. Equivalent to `this[3];`\n   * @category Quaternion Components\n   */\n  get w() {\n    return this[3];\n  }\n  set w(value) {\n    this[3] = value;\n  }\n  /**\n   * The magnitude (length) of this.\n   * Equivalent to `Quat.magnitude(this);`\n   *\n   * Magnitude is used because the `length` attribute is already defined by\n   * TypedArrays to mean the number of elements in the array.\n   *\n   * @category Accessors\n   */\n  get magnitude() {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    const w = this[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n  }\n  /**\n   * Alias for {@link Quat.magnitude}\n   *\n   * @category Accessors\n   */\n  get mag() {\n    return this.magnitude;\n  }\n  /**\n   * A string representation of `this`\n   * Equivalent to `Quat.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Quat.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Quat} into `this`.\n   * @category Methods\n   *\n   * @param a the source quaternion\n   * @returns `this`\n   */\n  copy(a) {\n    super.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity quaternion\n   * Equivalent to Quat.identity(this)\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  identity() {\n    this[0] = 0;\n    this[1] = 0;\n    this[2] = 0;\n    this[3] = 1;\n    return this;\n  }\n  /**\n   * Multiplies `this` by a {@link Quat}.\n   * Equivalent to `Quat.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to multiply `this` by\n   * @returns `this`\n   */\n  multiply(b) {\n    return _Quat.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Quat.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Rotates `this` by the given angle about the X axis\n   * Equivalent to `Quat.rotateX(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - angle (in radians) to rotate\n   * @returns `this`\n   */\n  rotateX(rad) {\n    return _Quat.rotateX(this, this, rad);\n  }\n  /**\n   * Rotates `this` by the given angle about the Y axis\n   * Equivalent to `Quat.rotateY(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - angle (in radians) to rotate\n   * @returns `this`\n   */\n  rotateY(rad) {\n    return _Quat.rotateY(this, this, rad);\n  }\n  /**\n   * Rotates `this` by the given angle about the Z axis\n   * Equivalent to `Quat.rotateZ(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - angle (in radians) to rotate\n   * @returns `this`\n   */\n  rotateZ(rad) {\n    return _Quat.rotateZ(this, this, rad);\n  }\n  /**\n   * Inverts `this`\n   * Equivalent to `Quat.invert(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    return _Quat.invert(this, this);\n  }\n  /**\n   * Scales `this` by a scalar number\n   * Equivalent to `Quat.scale(this, this, scale);`\n   * @category Methods\n   *\n   * @param scale - amount to scale the vector by\n   * @returns `this`\n   */\n  scale(scale) {\n    this[0] *= scale;\n    this[1] *= scale;\n    this[2] *= scale;\n    this[3] *= scale;\n    return this;\n  }\n  /**\n   * Calculates the dot product of `this` and another {@link Quat}\n   * Equivalent to `Quat.dot(this, b);`\n   * @category Methods\n   *\n   * @param b - the second operand\n   * @returns dot product of `this` and b\n   */\n  dot(b) {\n    return _Quat.dot(this, b);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Quat}.\n   */\n  static get BYTE_LENGTH() {\n    return 4 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new identity quat\n   * @category Static\n   *\n   * @returns a new quaternion\n   */\n  static create() {\n    return new _Quat();\n  }\n  /**\n   * Set a quat to the identity quaternion\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n  }\n  /**\n   * Sets a quat from the given angle and rotation axis,\n   * then returns it.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param axis - the axis around which to rotate\n   * @param rad - the angle in radians\n   * @returns `out`\n   **/\n  static setAxisAngle(out, axis, rad) {\n    rad *= 0.5;\n    const s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n  }\n  /**\n   * Gets the rotation axis and angle for a given\n   *  quaternion. If a quaternion is created with\n   *  setAxisAngle, this method will return the same\n   *  values as provided in the original parameter list\n   *  OR functionally equivalent values.\n   * Example: The quaternion formed by axis [0, 0, 1] and\n   *  angle -90 is the same as the quaternion formed by\n   *  [0, 0, 1] and 270. This method favors the latter.\n   * @category Static\n   *\n   * @param out_axis - Vector receiving the axis of rotation\n   * @param q - Quaternion to be decomposed\n   * @return Angle, in radians, of the rotation\n   */\n  static getAxisAngle(out_axis, q) {\n    const rad = Math.acos(q[3]) * 2;\n    const s = Math.sin(rad / 2);\n    if (s > GLM_EPSILON) {\n      out_axis[0] = q[0] / s;\n      out_axis[1] = q[1] / s;\n      out_axis[2] = q[2] / s;\n    } else {\n      out_axis[0] = 1;\n      out_axis[1] = 0;\n      out_axis[2] = 0;\n    }\n    return rad;\n  }\n  /**\n   * Gets the angular distance between two unit quaternions\n   * @category Static\n   *\n   * @param  {ReadonlyQuat} a     Origin unit quaternion\n   * @param  {ReadonlyQuat} b     Destination unit quaternion\n   * @return {Number}     Angle, in radians, between the two quaternions\n   */\n  static getAngle(a, b) {\n    const dotproduct = _Quat.dot(a, b);\n    return Math.acos(2 * dotproduct * dotproduct - 1);\n  }\n  /**\n   * Multiplies two quaternions.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const bx = b[0];\n    const by = b[1];\n    const bz = b[2];\n    const bw = b[3];\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n  }\n  /**\n   * Rotates a quaternion by the given angle about the X axis\n   * @category Static\n   *\n   * @param out - quat receiving operation result\n   * @param a - quat to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateX(out, a, rad) {\n    rad *= 0.5;\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const bx = Math.sin(rad);\n    const bw = Math.cos(rad);\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n  }\n  /**\n   * Rotates a quaternion by the given angle about the Y axis\n   * @category Static\n   *\n   * @param out - quat receiving operation result\n   * @param a - quat to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateY(out, a, rad) {\n    rad *= 0.5;\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const by = Math.sin(rad);\n    const bw = Math.cos(rad);\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n  }\n  /**\n   * Rotates a quaternion by the given angle about the Z axis\n   * @category Static\n   *\n   * @param out - quat receiving operation result\n   * @param a - quat to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateZ(out, a, rad) {\n    rad *= 0.5;\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const bz = Math.sin(rad);\n    const bw = Math.cos(rad);\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n  }\n  /**\n   * Calculates the W component of a quat from the X, Y, and Z components.\n   * Assumes that quaternion is 1 unit in length.\n   * Any existing W component will be ignored.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate W component of\n   * @returns `out`\n   */\n  static calculateW(out, a) {\n    const x = a[0], y = a[1], z = a[2];\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1 - x * x - y * y - z * z));\n    return out;\n  }\n  /**\n   * Calculate the exponential of a unit quaternion.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate the exponential of\n   * @returns `out`\n   */\n  static exp(out, a) {\n    const x = a[0], y = a[1], z = a[2], w = a[3];\n    const r = Math.sqrt(x * x + y * y + z * z);\n    const et = Math.exp(w);\n    const s = r > 0 ? et * Math.sin(r) / r : 0;\n    out[0] = x * s;\n    out[1] = y * s;\n    out[2] = z * s;\n    out[3] = et * Math.cos(r);\n    return out;\n  }\n  /**\n   * Calculate the natural logarithm of a unit quaternion.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate the exponential of\n   * @returns `out`\n   */\n  static ln(out, a) {\n    const x = a[0], y = a[1], z = a[2], w = a[3];\n    const r = Math.sqrt(x * x + y * y + z * z);\n    const t = r > 0 ? Math.atan2(r, w) / r : 0;\n    out[0] = x * t;\n    out[1] = y * t;\n    out[2] = z * t;\n    out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n    return out;\n  }\n  /**\n   * Calculate the scalar power of a unit quaternion.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate the exponential of\n   * @param b - amount to scale the quaternion by\n   * @returns `out`\n   */\n  static pow(out, a, b) {\n    _Quat.ln(out, a);\n    _Quat.scale(out, out, b);\n    _Quat.exp(out, out);\n    return out;\n  }\n  /**\n   * Performs a spherical linear interpolation between two quat\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static slerp(out, a, b, t) {\n    const ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n    let scale0;\n    let scale1;\n    let cosom = ax * bx + ay * by + az * bz + aw * bw;\n    if (cosom < 0) {\n      cosom = -cosom;\n      bx = -bx;\n      by = -by;\n      bz = -bz;\n      bw = -bw;\n    }\n    if (1 - cosom > GLM_EPSILON) {\n      const omega = Math.acos(cosom);\n      const sinom = Math.sin(omega);\n      scale0 = Math.sin((1 - t) * omega) / sinom;\n      scale1 = Math.sin(t * omega) / sinom;\n    } else {\n      scale0 = 1 - t;\n      scale1 = t;\n    }\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    return out;\n  }\n  /**\n   * Generates a random unit quaternion\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @returns `out`\n   */\n  /* static random(out: QuatLike): QuatLike {\n      // Implementation of http://planning.cs.uiuc.edu/node198.html\n      // TODO: Calling random 3 times is probably not the fastest solution\n      let u1 = glMatrix.RANDOM();\n      let u2 = glMatrix.RANDOM();\n      let u3 = glMatrix.RANDOM();\n  \n      let sqrt1MinusU1 = Math.sqrt(1 - u1);\n      let sqrtU1 = Math.sqrt(u1);\n  \n      out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n      out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n      out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n      out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n      return out;\n    }*/\n  /**\n   * Calculates the inverse of a quat\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate inverse of\n   * @returns `out`\n   */\n  static invert(out, a) {\n    const a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    const invDot = dot ? 1 / dot : 0;\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n  }\n  /**\n   * Calculates the conjugate of a quat\n   * If the quaternion is normalized, this function is faster than `quat.inverse` and produces the same result.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate conjugate of\n   * @returns `out`\n   */\n  static conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Creates a quaternion from the given 3x3 rotation matrix.\n   *\n   * NOTE: The resultant quaternion is not normalized, so you should be sure\n   * to re-normalize the quaternion yourself where necessary.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param m - rotation matrix\n   * @returns `out`\n   */\n  static fromMat3(out, m) {\n    const fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n    if (fTrace > 0) {\n      fRoot = Math.sqrt(fTrace + 1);\n      out[3] = 0.5 * fRoot;\n      fRoot = 0.5 / fRoot;\n      out[0] = (m[5] - m[7]) * fRoot;\n      out[1] = (m[6] - m[2]) * fRoot;\n      out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n      let i = 0;\n      if (m[4] > m[0]) {\n        i = 1;\n      }\n      if (m[8] > m[i * 3 + i]) {\n        i = 2;\n      }\n      const j = (i + 1) % 3;\n      const k = (i + 2) % 3;\n      fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1);\n      out[i] = 0.5 * fRoot;\n      fRoot = 0.5 / fRoot;\n      out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n      out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n      out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n    return out;\n  }\n  /**\n   * Creates a quaternion from the given euler angle x, y, z.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param x - Angle to rotate around X axis in degrees.\n   * @param y - Angle to rotate around Y axis in degrees.\n   * @param z - Angle to rotate around Z axis in degrees.\n   * @param {'xyz'|'xzy'|'yxz'|'yzx'|'zxy'|'zyx'} order - Intrinsic order for conversion, default is zyx.\n   * @returns `out`\n   */\n  static fromEuler(out, x, y, z, order = _Quat.#DEFAULT_ANGLE_ORDER) {\n    const halfToRad = 0.5 * Math.PI / 180;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n    const sx = Math.sin(x);\n    const cx = Math.cos(x);\n    const sy = Math.sin(y);\n    const cy = Math.cos(y);\n    const sz = Math.sin(z);\n    const cz = Math.cos(z);\n    switch (order) {\n      case \"xyz\":\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n        break;\n      case \"xzy\":\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n        break;\n      case \"yxz\":\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n        break;\n      case \"yzx\":\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n        break;\n      case \"zxy\":\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n        break;\n      case \"zyx\":\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n        break;\n      default:\n        throw new Error(`Unknown angle order ${order}`);\n    }\n    return out;\n  }\n  /**\n   * Returns a string representation of a quatenion\n   * @category Static\n   *\n   * @param a - vector to represent as a string\n   * @returns string representation of the vector\n   */\n  static str(a) {\n    return `Quat(${a.join(\", \")})`;\n  }\n  /**\n   * Creates a new quat initialized with values from an existing quaternion\n   * @category Static\n   *\n   * @param a - quaternion to clone\n   * @returns a new quaternion\n   */\n  static clone(a) {\n    return new _Quat(a);\n  }\n  /**\n   * Creates a new quat initialized with the given values\n   * @category Static\n   *\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @param w - W component\n   * @returns a new quaternion\n   */\n  static fromValues(x, y, z, w) {\n    return new _Quat(x, y, z, w);\n  }\n  /**\n   * Copy the values from one quat to another\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the source quaternion\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the components of a {@link Quat} to the given values\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @param w - W component\n   * @returns `out`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static set(out, x, y, z, w) {\n    return out;\n  }\n  /**\n   * Adds two {@link Quat}'s\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static add(out, a, b) {\n    return out;\n  }\n  /**\n   * Alias for {@link Quat.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Scales a quat by a scalar number\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to scale\n   * @param b - amount to scale the vector by\n   * @returns `out`\n   */\n  static scale(out, a, scale) {\n    out[0] = a[0] * scale;\n    out[1] = a[1] * scale;\n    out[2] = a[2] * scale;\n    out[3] = a[3] * scale;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two quat's\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns dot product of a and b\n   */\n  static dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  /**\n   * Performs a linear interpolation between two quat's\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static lerp(out, a, b, t) {\n    return out;\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Quat}\n   * @category Static\n   *\n   * @param a - quaternion to calculate length of\n   * @returns length of `a`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static magnitude(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat.magnitude}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mag(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat.magnitude}\n   * @category Static\n   * @deprecated Use {@link Quat.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Quat.magnitude}\n   * @category Static\n   * @deprecated Use {@link Quat.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared length of a {@link Quat}\n   * @category Static\n   *\n   * @param a - quaternion to calculate squared length of\n   * @returns squared length of a\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static squaredLength(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat.squaredLength}\n   * @category Static\n   */\n  static sqrLen(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Normalize a {@link Quat}\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quaternion to normalize\n   * @returns `out`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static normalize(out, a) {\n    return out;\n  }\n  /**\n   * Returns whether the quaternions have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first quaternion.\n   * @param b - The second quaternion.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static exactEquals(a, b) {\n    return false;\n  }\n  /**\n   * Returns whether the quaternions have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static equals(a, b) {\n    return false;\n  }\n  /**\n   * Sets a quaternion to represent the shortest rotation from one\n   * vector to another.\n   *\n   * Both vectors are assumed to be unit length.\n   * @category Static\n   *\n   * @param out - the receiving quaternion.\n   * @param a - the initial vector\n   * @param b - the destination vector\n   * @returns `out`\n   */\n  static rotationTo(out, a, b) {\n    const dot = Vec3.dot(a, b);\n    if (dot < -0.999999) {\n      Vec3.cross(_Quat.#TMP_VEC3, _Quat.#X_UNIT_VEC3, a);\n      if (Vec3.mag(_Quat.#TMP_VEC3) < 1e-6) {\n        Vec3.cross(_Quat.#TMP_VEC3, _Quat.#Y_UNIT_VEC3, a);\n      }\n      Vec3.normalize(_Quat.#TMP_VEC3, _Quat.#TMP_VEC3);\n      _Quat.setAxisAngle(out, _Quat.#TMP_VEC3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      Vec3.cross(_Quat.#TMP_VEC3, a, b);\n      out[0] = _Quat.#TMP_VEC3[0];\n      out[1] = _Quat.#TMP_VEC3[1];\n      out[2] = _Quat.#TMP_VEC3[2];\n      out[3] = 1 + dot;\n      return _Quat.normalize(out, out);\n    }\n  }\n  /**\n   * Performs a spherical linear interpolation with two control points\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param c - the third operand\n   * @param d - the fourth operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static sqlerp(out, a, b, c, d, t) {\n    _Quat.slerp(_Quat.#TMP_QUAT1, a, d, t);\n    _Quat.slerp(_Quat.#TMP_QUAT2, b, c, t);\n    _Quat.slerp(out, _Quat.#TMP_QUAT1, _Quat.#TMP_QUAT2, 2 * t * (1 - t));\n    return out;\n  }\n  /**\n   * Sets the specified quaternion with values corresponding to the given\n   * axes. Each axis is a vec3 and is expected to be unit length and\n   * perpendicular to all other specified axes.\n   * @category Static\n   *\n   * @param out - The receiving quaternion\n   * @param view - the vector representing the viewing direction\n   * @param right - the vector representing the local `right` direction\n   * @param up - the vector representing the local `up` direction\n   * @returns `out`\n   */\n  static setAxes(out, view, right, up) {\n    _Quat.#TMP_MAT3[0] = right[0];\n    _Quat.#TMP_MAT3[3] = right[1];\n    _Quat.#TMP_MAT3[6] = right[2];\n    _Quat.#TMP_MAT3[1] = up[0];\n    _Quat.#TMP_MAT3[4] = up[1];\n    _Quat.#TMP_MAT3[7] = up[2];\n    _Quat.#TMP_MAT3[2] = -view[0];\n    _Quat.#TMP_MAT3[5] = -view[1];\n    _Quat.#TMP_MAT3[8] = -view[2];\n    return _Quat.normalize(out, _Quat.fromMat3(out, _Quat.#TMP_MAT3));\n  }\n};\nQuat.set = Vec4.set;\nQuat.add = Vec4.add;\nQuat.lerp = Vec4.lerp;\nQuat.normalize = Vec4.normalize;\nQuat.squaredLength = Vec4.squaredLength;\nQuat.sqrLen = Vec4.squaredLength;\nQuat.exactEquals = Vec4.exactEquals;\nQuat.equals = Vec4.equals;\nQuat.magnitude = Vec4.magnitude;\nQuat.prototype.mul = Quat.prototype.multiply;\nQuat.mul = Quat.multiply;\nQuat.mag = Quat.magnitude;\nQuat.length = Quat.magnitude;\nQuat.len = Quat.magnitude;\nvar Quat2 = class _Quat2 extends Float32Array {\n  // Temporary variables to prevent repeated allocations in the algorithms within Quat2.\n  // These are declared as TypedArrays to aid in tree-shaking.\n  static #TMP_QUAT = new Float32Array(4);\n  static #TMP_VEC3 = new Float32Array(3);\n  /**\n   * Create a {@link Quat2}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 8:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 8);\n        break;\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v, v, v, v, v, v, v]);\n        } else {\n          super(v, 0, 8);\n        }\n        break;\n      }\n      default:\n        super(8);\n        this[3] = 1;\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Quat2.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Quat2.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Quat2} into `this`.\n   * @category Methods\n   *\n   * @param a the source dual quaternion\n   * @returns `this`\n   */\n  copy(a) {\n    super.set(a);\n    return this;\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Quat2}.\n   */\n  static get BYTE_LENGTH() {\n    return 8 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new identity {@link Quat2}\n   * @category Static\n   *\n   * @returns a new dual quaternion [real -> rotation, dual -> translation]\n   */\n  static create() {\n    return new _Quat2();\n  }\n  /**\n   * Creates a {@link Quat2} quat initialized with values from an existing quaternion\n   * @category Static\n   *\n   * @param a - dual quaternion to clone\n   * @returns a new dual quaternion\n   */\n  static clone(a) {\n    return new _Quat2(a);\n  }\n  /**\n   * Creates a new {@link Quat2}  initialized with the given values\n   * @category Static\n   *\n   * @param x1 - 1st X component\n   * @param y1 - 1st Y component\n   * @param z1 - 1st Z component\n   * @param w1 - 1st W component\n   * @param x2 - 2nd X component\n   * @param y2 - 2nd Y component\n   * @param z2 - 2nd Z component\n   * @param w2 - 2nd W component\n   * @returns a new dual quaternion\n   */\n  static fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n    return new _Quat2(x1, y1, z1, w1, x2, y2, z2, w2);\n  }\n  /**\n   * Creates a new {@link Quat2} from the given values (quat and translation)\n   * @category Static\n   *\n   * @param x1 - X component (rotation)\n   * @param y1 - Y component (rotation)\n   * @param z1 - Z component (rotation)\n   * @param w1 - W component (rotation)\n   * @param x2 - X component (translation)\n   * @param y2 - Y component (translation)\n   * @param z2 - Z component (translation)\n   * @returns a new dual quaternion\n   */\n  static fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n    const ax = x2 * 0.5;\n    const ay = y2 * 0.5;\n    const az = z2 * 0.5;\n    return new _Quat2(\n      x1,\n      y1,\n      z1,\n      w1,\n      ax * w1 + ay * z1 - az * y1,\n      ay * w1 + az * x1 - ax * z1,\n      az * w1 + ax * y1 - ay * x1,\n      -ax * x1 - ay * y1 - az * z1\n    );\n  }\n  /**\n   * Sets a {@link Quat2} from a quaternion and a translation\n   * @category Static\n   *\n   * @param out - dual quaternion receiving operation result\n   * @param q - a normalized quaternion\n   * @param t - translation vector\n   * @returns `out`\n   */\n  static fromRotationTranslation(out, q, t) {\n    const ax = t[0] * 0.5;\n    const ay = t[1] * 0.5;\n    const az = t[2] * 0.5;\n    const bx = q[0];\n    const by = q[1];\n    const bz = q[2];\n    const bw = q[3];\n    out[0] = bx;\n    out[1] = by;\n    out[2] = bz;\n    out[3] = bw;\n    out[4] = ax * bw + ay * bz - az * by;\n    out[5] = ay * bw + az * bx - ax * bz;\n    out[6] = az * bw + ax * by - ay * bx;\n    out[7] = -ax * bx - ay * by - az * bz;\n    return out;\n  }\n  /**\n   * Sets a {@link Quat2} from a translation\n   * @category Static\n   *\n   * @param out - dual quaternion receiving operation result\n   * @param t - translation vector\n   * @returns `out`\n   */\n  static fromTranslation(out, t) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = t[0] * 0.5;\n    out[5] = t[1] * 0.5;\n    out[6] = t[2] * 0.5;\n    out[7] = 0;\n    return out;\n  }\n  /**\n   * Sets a {@link Quat2} from a quaternion\n   * @category Static\n   *\n   * @param out - dual quaternion receiving operation result\n   * @param q - a normalized quaternion\n   * @returns `out`\n   */\n  static fromRotation(out, q) {\n    out[0] = q[0];\n    out[1] = q[1];\n    out[2] = q[2];\n    out[3] = q[3];\n    out[4] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    return out;\n  }\n  /**\n   * Sets a {@link Quat2} from a quaternion\n   * @category Static\n   *\n   * @param out - dual quaternion receiving operation result\n   * @param a - the matrix\n   * @returns `out`\n   */\n  static fromMat4(out, a) {\n    Mat4.getRotation(_Quat2.#TMP_QUAT, a);\n    Mat4.getTranslation(_Quat2.#TMP_VEC3, a);\n    return _Quat2.fromRotationTranslation(out, _Quat2.#TMP_QUAT, _Quat2.#TMP_VEC3);\n  }\n  /**\n   * Copy the values from one {@link Quat2} to another\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the source dual quaternion\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    return out;\n  }\n  /**\n   * Set a {@link Quat2} to the identity dual quaternion\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    return out;\n  }\n  /**\n   * Set the components of a {@link Quat2} to the given values\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param x1 - 1st X component\n   * @param y1 - 1st Y component\n   * @param z1 - 1st Z component\n   * @param w1 - 1st W component\n   * @param x2 - 2nd X component\n   * @param y2 - 2nd Y component\n   * @param z2 - 2nd Z component\n   * @param w2 - 2nd W component\n   * @returns `out`\n   */\n  static set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n    out[0] = x1;\n    out[1] = y1;\n    out[2] = z1;\n    out[3] = w1;\n    out[4] = x2;\n    out[5] = y2;\n    out[6] = z2;\n    out[7] = w2;\n    return out;\n  }\n  /**\n   * Gets the real part of a dual quat\n   * @category Static\n   *\n   * @param out - real part\n   * @param a - Dual Quaternion\n   * @return `out`\n   */\n  static getReal(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Gets the dual part of a dual quat\n   * @category Static\n   *\n   * @param out - dual part\n   * @param a - Dual Quaternion\n   * @return `out`\n   */\n  static getDual(out, a) {\n    out[0] = a[4];\n    out[1] = a[5];\n    out[2] = a[6];\n    out[3] = a[7];\n    return out;\n  }\n  /**\n   * Set the real component of a {@link Quat2} to the given quaternion\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - a quaternion representing the real part\n   * @return `out`\n   */\n  static setReal(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the dual component of a {@link Quat2} to the given quaternion\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - a quaternion representing the dual part\n   * @return `out`\n   */\n  static setDual(out, a) {\n    out[4] = a[0];\n    out[5] = a[1];\n    out[6] = a[2];\n    out[7] = a[3];\n    return out;\n  }\n  /**\n   * Gets the translation of a normalized {@link Quat2}\n   * @category Static\n   *\n   * @param out - the receiving translation vector\n   * @param a - Dual Quaternion to be decomposed\n   * @return `out`\n   */\n  static getTranslation(out, a) {\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const bx = -a[0];\n    const by = -a[1];\n    const bz = -a[2];\n    const bw = a[3];\n    out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n    return out;\n  }\n  /**\n   * Translates a {@link Quat2} by the given vector\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to translate\n   * @param v - vector to translate by\n   * @returns `out`\n   */\n  static translate(out, a, v) {\n    const ax1 = a[0];\n    const ay1 = a[1];\n    const az1 = a[2];\n    const aw1 = a[3];\n    const bx1 = v[0] * 0.5;\n    const by1 = v[1] * 0.5;\n    const bz1 = v[2] * 0.5;\n    const ax2 = a[4];\n    const ay2 = a[5];\n    const az2 = a[6];\n    const aw2 = a[7];\n    out[0] = ax1;\n    out[1] = ay1;\n    out[2] = az1;\n    out[3] = aw1;\n    out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n    out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n    out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n    out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} around the X axis\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateX(out, a, rad) {\n    let bx = -a[0];\n    let by = -a[1];\n    let bz = -a[2];\n    let bw = a[3];\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n    const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n    const az1 = az * bw + aw * bz + ax * by - ay * bx;\n    const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n    Quat.rotateX(out, a, rad);\n    bx = out[0];\n    by = out[1];\n    bz = out[2];\n    bw = out[3];\n    out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} around the Y axis\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateY(out, a, rad) {\n    let bx = -a[0];\n    let by = -a[1];\n    let bz = -a[2];\n    let bw = a[3];\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n    const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n    const az1 = az * bw + aw * bz + ax * by - ay * bx;\n    const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n    Quat.rotateY(out, a, rad);\n    bx = out[0];\n    by = out[1];\n    bz = out[2];\n    bw = out[3];\n    out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} around the Z axis\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateZ(out, a, rad) {\n    let bx = -a[0];\n    let by = -a[1];\n    let bz = -a[2];\n    let bw = a[3];\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n    const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n    const az1 = az * bw + aw * bz + ax * by - ay * bx;\n    const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n    Quat.rotateZ(out, a, rad);\n    bx = out[0];\n    by = out[1];\n    bz = out[2];\n    bw = out[3];\n    out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} by a given quaternion (a * q)\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param q - quaternion to rotate by\n   * @returns `out`\n   */\n  static rotateByQuatAppend(out, a, q) {\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n    out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n    out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n    out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n    ax = a[4];\n    ay = a[5];\n    az = a[6];\n    aw = a[7];\n    out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n    out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n    out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n    out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} by a given quaternion (q * a)\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param q - quaternion to rotate by\n   * @param a - the dual quaternion to rotate\n   * @returns `out`\n   */\n  static rotateByQuatPrepend(out, q, a) {\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    let bx = a[0];\n    let by = a[1];\n    let bz = a[2];\n    let bw = a[3];\n    out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n    out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n    out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n    out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n    bx = a[4];\n    by = a[5];\n    bz = a[6];\n    bw = a[7];\n    out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n    out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n    out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n    out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} around a given axis. Does the normalization automatically\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param axis - the axis to rotate around\n   * @param rad - how far the rotation should be\n   * @returns `out`\n   */\n  static rotateAroundAxis(out, a, axis, rad) {\n    if (Math.abs(rad) < GLM_EPSILON) {\n      return _Quat2.copy(out, a);\n    }\n    const axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n    rad *= 0.5;\n    const s = Math.sin(rad);\n    const bx = s * axis[0] / axisLength;\n    const by = s * axis[1] / axisLength;\n    const bz = s * axis[2] / axisLength;\n    const bw = Math.cos(rad);\n    const ax1 = a[0];\n    const ay1 = a[1];\n    const az1 = a[2];\n    const aw1 = a[3];\n    out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    out[4] = ax * bw + aw * bx + ay * bz - az * by;\n    out[5] = ay * bw + aw * by + az * bx - ax * bz;\n    out[6] = az * bw + aw * bz + ax * by - ay * bx;\n    out[7] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n  }\n  /**\n   * Adds two {@link Quat2}s\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    return out;\n  }\n  /**\n   * Multiplies two {@link Quat2}s\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns {quat2} out\n   */\n  static multiply(out, a, b) {\n    const ax0 = a[0];\n    const ay0 = a[1];\n    const az0 = a[2];\n    const aw0 = a[3];\n    const bx1 = b[4];\n    const by1 = b[5];\n    const bz1 = b[6];\n    const bw1 = b[7];\n    const ax1 = a[4];\n    const ay1 = a[5];\n    const az1 = a[6];\n    const aw1 = a[7];\n    const bx0 = b[0];\n    const by0 = b[1];\n    const bz0 = b[2];\n    const bw0 = b[3];\n    out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n    out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n    out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n    out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n    out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n    out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n    out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n    out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n    return out;\n  }\n  /**\n   * Alias for {@link Quat2.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Scales a {@link Quat2} by a scalar value\n   * @category Static\n   *\n   * @param out - the receiving dual quaterion\n   * @param a - the dual quaternion to scale\n   * @param b - scalar value to scale the dual quaterion by\n   * @returns `out`\n   */\n  static scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two {@link Quat2}s (The dot product of the real parts)\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns dot product of a and b\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static dot(a, b) {\n    return 0;\n  }\n  /**\n   * Performs a linear interpolation between two {@link Quat2}s\n   * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when `t = 0.5`)\n   * @category Static\n   *\n   * @param out - the receiving dual quat\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static lerp(out, a, b, t) {\n    const mt = 1 - t;\n    if (_Quat2.dot(a, b) < 0) {\n      t = -t;\n    }\n    out[0] = a[0] * mt + b[0] * t;\n    out[1] = a[1] * mt + b[1] * t;\n    out[2] = a[2] * mt + b[2] * t;\n    out[3] = a[3] * mt + b[3] * t;\n    out[4] = a[4] * mt + b[4] * t;\n    out[5] = a[5] * mt + b[5] * t;\n    out[6] = a[6] * mt + b[6] * t;\n    out[7] = a[7] * mt + b[7] * t;\n    return out;\n  }\n  /**\n   * Calculates the inverse of a {@link Quat2}. If they are normalized, conjugate is cheaper\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - dual quat to calculate inverse of\n   * @returns `out`\n   */\n  static invert(out, a) {\n    const sqlen = _Quat2.squaredLength(a);\n    out[0] = -a[0] / sqlen;\n    out[1] = -a[1] / sqlen;\n    out[2] = -a[2] / sqlen;\n    out[3] = a[3] / sqlen;\n    out[4] = -a[4] / sqlen;\n    out[5] = -a[5] / sqlen;\n    out[6] = -a[6] / sqlen;\n    out[7] = a[7] / sqlen;\n    return out;\n  }\n  /**\n   * Calculates the conjugate of a {@link Quat2}. If the dual quaternion is normalized, this function is faster than\n   * {@link Quat2.invert} and produces the same result.\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - dual quaternion to calculate conjugate of\n   * @returns `out`\n   */\n  static conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    out[4] = -a[4];\n    out[5] = -a[5];\n    out[6] = -a[6];\n    out[7] = a[7];\n    return out;\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Quat2}\n   * @category Static\n   *\n   * @param a - dual quaternion to calculate length of\n   * @returns length of `a`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static magnitude(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat2.magnitude}\n   * @category Static\n   */\n  static mag(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Quat2.magnitude}\n   * @category Static\n   * @deprecated Use {@link Quat2.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Quat2.magnitude}\n   * @category Static\n   * @deprecated Use {@link Quat2.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared length of a {@link Quat2}\n   * @category Static\n   *\n   * @param a - dual quaternion to calculate squared length of\n   * @returns squared length of a\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static squaredLength(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat2.squaredLength}\n   * @category Static\n   */\n  static sqrLen(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Normalize a {@link Quat2}\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - dual quaternion to normalize\n   * @returns `out`\n   */\n  static normalize(out, a) {\n    let magnitude = _Quat2.squaredLength(a);\n    if (magnitude > 0) {\n      magnitude = Math.sqrt(magnitude);\n      const a0 = a[0] / magnitude;\n      const a1 = a[1] / magnitude;\n      const a2 = a[2] / magnitude;\n      const a3 = a[3] / magnitude;\n      const b0 = a[4];\n      const b1 = a[5];\n      const b2 = a[6];\n      const b3 = a[7];\n      const a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n      out[0] = a0;\n      out[1] = a1;\n      out[2] = a2;\n      out[3] = a3;\n      out[4] = (b0 - a0 * a_dot_b) / magnitude;\n      out[5] = (b1 - a1 * a_dot_b) / magnitude;\n      out[6] = (b2 - a2 * a_dot_b) / magnitude;\n      out[7] = (b3 - a3 * a_dot_b) / magnitude;\n    }\n    return out;\n  }\n  /**\n   * Returns a string representation of a {@link Quat2}\n   * @category Static\n   *\n   * @param a - dual quaternion to represent as a string\n   * @returns string representation of the vector\n   */\n  static str(a) {\n    return `Quat2(${a.join(\", \")})`;\n  }\n  /**\n   * Returns whether the {@link Quat2}s have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first dual quaternion.\n   * @param b - The second dual quaternion.\n   * @returns True if the dual quaternions are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n  }\n  /**\n   * Returns whether the {@link Quat2}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first dual quaternion.\n   * @param b - The second dual quaternion.\n   * @returns True if the dual quaternions are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const a6 = a[6];\n    const a7 = a[7];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    const b6 = b[6];\n    const b7 = b[7];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= GLM_EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= GLM_EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= GLM_EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= GLM_EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7));\n  }\n};\nQuat2.dot = Quat.dot;\nQuat2.squaredLength = Quat.squaredLength;\nQuat2.sqrLen = Quat.squaredLength;\nQuat2.mag = Quat.magnitude;\nQuat2.length = Quat.magnitude;\nQuat2.len = Quat.magnitude;\nQuat2.mul = Quat2.multiply;\nvar Vec2 = class _Vec2 extends Float32Array {\n  /**\n   * Create a {@link Vec2}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 2: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, values[1]]);\n        } else {\n          super(v, values[1], 2);\n        }\n        break;\n      }\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v]);\n        } else {\n          super(v, 0, 2);\n        }\n        break;\n      }\n      default:\n        super(2);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  // Getters and setters to make component access read better.\n  // These are likely to be a little bit slower than direct array access.\n  /**\n   * The x component of the vector. Equivalent to `this[0];`\n   * @category Vector Components\n   */\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = value;\n  }\n  /**\n   * The y component of the vector. Equivalent to `this[1];`\n   * @category Vector Components\n   */\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = value;\n  }\n  // Alternate set of getters and setters in case this is being used to define\n  // a color.\n  /**\n   * The r component of the vector. Equivalent to `this[0];`\n   * @category Color Components\n   */\n  get r() {\n    return this[0];\n  }\n  set r(value) {\n    this[0] = value;\n  }\n  /**\n   * The g component of the vector. Equivalent to `this[1];`\n   * @category Color Components\n   */\n  get g() {\n    return this[1];\n  }\n  set g(value) {\n    this[1] = value;\n  }\n  /**\n   * The magnitude (length) of this.\n   * Equivalent to `Vec2.magnitude(this);`\n   *\n   * Magnitude is used because the `length` attribute is already defined by\n   * TypedArrays to mean the number of elements in the array.\n   *\n   * @category Accessors\n   */\n  get magnitude() {\n    return Math.hypot(this[0], this[1]);\n  }\n  /**\n   * Alias for {@link Vec2.magnitude}\n   *\n   * @category Accessors\n   */\n  get mag() {\n    return this.magnitude;\n  }\n  /**\n   * The squared magnitude (length) of `this`.\n   * Equivalent to `Vec2.squaredMagnitude(this);`\n   *\n   * @category Accessors\n   */\n  get squaredMagnitude() {\n    const x = this[0];\n    const y = this[1];\n    return x * x + y * y;\n  }\n  /**\n   * Alias for {@link Vec2.squaredMagnitude}\n   *\n   * @category Accessors\n   */\n  get sqrMag() {\n    return this.squaredMagnitude;\n  }\n  /**\n   * A string representation of `this`\n   * Equivalent to `Vec2.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Vec2.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Vec2} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  // Instead of zero(), use a.fill(0) for instances;\n  /**\n   * Adds a {@link Vec2} to `this`.\n   * Equivalent to `Vec2.add(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @returns `this`\n   */\n  add(b) {\n    this[0] += b[0];\n    this[1] += b[1];\n    return this;\n  }\n  /**\n   * Subtracts a {@link Vec2} from `this`.\n   * Equivalent to `Vec2.subtract(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to subtract from `this`\n   * @returns `this`\n   */\n  subtract(b) {\n    this[0] -= b[0];\n    this[1] -= b[1];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec2.subtract}\n   * @category Methods\n   */\n  sub(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Multiplies `this` by a {@link Vec2}.\n   * Equivalent to `Vec2.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to multiply `this` by\n   * @returns `this`\n   */\n  multiply(b) {\n    this[0] *= b[0];\n    this[1] *= b[1];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec2.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Divides `this` by a {@link Vec2}.\n   * Equivalent to `Vec2.divide(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to divide `this` by\n   * @returns `this`\n   */\n  divide(b) {\n    this[0] /= b[0];\n    this[1] /= b[1];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec2.divide}\n   * @category Methods\n   */\n  div(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Scales `this` by a scalar number.\n   * Equivalent to `Vec2.scale(this, this, b);`\n   * @category Methods\n   *\n   * @param b - Amount to scale `this` by\n   * @returns `this`\n   */\n  scale(b) {\n    this[0] *= b;\n    this[1] *= b;\n    return this;\n  }\n  /**\n   * Calculates `this` scaled by a scalar value then adds the result to `this`.\n   * Equivalent to `Vec2.scaleAndAdd(this, this, b, scale);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @param scale - The amount to scale `b` by before adding\n   * @returns `this`\n   */\n  scaleAndAdd(b, scale) {\n    this[0] += b[0] * scale;\n    this[1] += b[1] * scale;\n    return this;\n  }\n  /**\n   * Calculates the Euclidean distance between another {@link Vec2} and `this`.\n   * Equivalent to `Vec2.distance(this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to calculate the distance to\n   * @returns Distance between `this` and `b`\n   */\n  distance(b) {\n    return _Vec2.distance(this, b);\n  }\n  /**\n   * Alias for {@link Vec2.distance}\n   * @category Methods\n   */\n  dist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared Euclidean distance between another {@link Vec2} and `this`.\n   * Equivalent to `Vec2.squaredDistance(this, b);`\n   * @category Methods\n   *\n   * @param b The vector to calculate the squared distance to\n   * @returns Squared distance between `this` and `b`\n   */\n  squaredDistance(b) {\n    return _Vec2.squaredDistance(this, b);\n  }\n  /**\n   * Alias for {@link Vec2.squaredDistance}\n   * @category Methods\n   */\n  sqrDist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Negates the components of `this`.\n   * Equivalent to `Vec2.negate(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  negate() {\n    this[0] *= -1;\n    this[1] *= -1;\n    return this;\n  }\n  /**\n   * Inverts the components of `this`.\n   * Equivalent to `Vec2.inverse(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    this[0] = 1 / this[0];\n    this[1] = 1 / this[1];\n    return this;\n  }\n  /**\n   * Sets each component of `this` to it's absolute value.\n   * Equivalent to `Vec2.abs(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  abs() {\n    this[0] = Math.abs(this[0]);\n    this[1] = Math.abs(this[1]);\n    return this;\n  }\n  /**\n   * Calculates the dot product of this and another {@link Vec2}.\n   * Equivalent to `Vec2.dot(this, b);`\n   * @category Methods\n   *\n   * @param b - The second operand\n   * @returns Dot product of `this` and `b`\n   */\n  dot(b) {\n    return this[0] * b[0] + this[1] * b[1];\n  }\n  /**\n   * Normalize `this`.\n   * Equivalent to `Vec2.normalize(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  normalize() {\n    return _Vec2.normalize(this, this);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Vec2}.\n   */\n  static get BYTE_LENGTH() {\n    return 2 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, empty {@link Vec2}\n   * @category Static\n   *\n   * @returns A new 2D vector\n   */\n  static create() {\n    return new _Vec2();\n  }\n  /**\n   * Creates a new {@link Vec2} initialized with values from an existing vector\n   * @category Static\n   *\n   * @param a - Vector to clone\n   * @returns A new 2D vector\n   */\n  static clone(a) {\n    return new _Vec2(a);\n  }\n  /**\n   * Creates a new {@link Vec2} initialized with the given values\n   * @category Static\n   *\n   * @param x - X component\n   * @param y - Y component\n   * @returns A new 2D vector\n   */\n  static fromValues(x, y) {\n    return new _Vec2(x, y);\n  }\n  /**\n   * Copy the values from one {@link Vec2} to another\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - The source vector\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n  }\n  /**\n   * Set the components of a {@link Vec2} to the given values\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param x - X component\n   * @param y - Y component\n   * @returns `out`\n   */\n  static set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n  }\n  /**\n   * Adds two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n  }\n  /**\n   * Subtracts vector b from vector a\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec2.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return [0, 0];\n  }\n  /**\n   * Multiplies two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec2.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return [0, 0];\n  }\n  /**\n   * Divides two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec2.divide}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static div(out, a, b) {\n    return [0, 0];\n  }\n  /**\n   * Math.ceil the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to ceil\n   * @returns `out`\n   */\n  static ceil(out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    return out;\n  }\n  /**\n   * Math.floor the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to floor\n   * @returns `out`\n   */\n  static floor(out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    return out;\n  }\n  /**\n   * Returns the minimum of two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static min(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n  }\n  /**\n   * Returns the maximum of two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static max(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n  }\n  /**\n   * Math.round the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to round\n   * @returns `out`\n   */\n  static round(out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    return out;\n  }\n  /**\n   * Scales a {@link Vec2} by a scalar number\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to scale\n   * @param b - Amount to scale the vector by\n   * @returns `out`\n   */\n  static scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n  }\n  /**\n   * Adds two Vec2's after scaling the second operand by a scalar value\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @param scale - The amount to scale b by before adding\n   * @returns `out`\n   */\n  static scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    return out;\n  }\n  /**\n   * Calculates the Euclidean distance between two {@link Vec2}s\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns distance between `a` and `b`\n   */\n  static distance(a, b) {\n    return Math.hypot(b[0] - a[0], b[1] - a[1]);\n  }\n  /**\n   * Alias for {@link Vec2.distance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static dist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the squared Euclidean distance between two {@link Vec2}s\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns Squared distance between `a` and `b`\n   */\n  static squaredDistance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    return x * x + y * y;\n  }\n  /**\n   * Alias for {@link Vec2.distance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrDist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Vec2}\n   * @category Static\n   *\n   * @param a - Vector to calculate magnitude of\n   * @returns Magnitude of a\n   */\n  static magnitude(a) {\n    const x = a[0];\n    const y = a[1];\n    return Math.sqrt(x * x + y * y);\n  }\n  /**\n   * Alias for {@link Vec2.magnitude}\n   * @category Static\n   */\n  static mag(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec2.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec2.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   *\n   * @param a - vector to calculate length of\n   * @returns length of a\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec2.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec2.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared length of a {@link Vec2}\n   * @category Static\n   *\n   * @param a - Vector to calculate squared length of\n   * @returns Squared length of a\n   */\n  static squaredLength(a) {\n    const x = a[0];\n    const y = a[1];\n    return x * x + y * y;\n  }\n  /**\n   * Alias for {@link Vec2.squaredLength}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrLen(a, b) {\n    return 0;\n  }\n  /**\n   * Negates the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to negate\n   * @returns `out`\n   */\n  static negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n  }\n  /**\n   * Returns the inverse of the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to invert\n   * @returns `out`\n   */\n  static inverse(out, a) {\n    out[0] = 1 / a[0];\n    out[1] = 1 / a[1];\n    return out;\n  }\n  /**\n   * Returns the absolute value of the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to compute the absolute values of\n   * @returns `out`\n   */\n  static abs(out, a) {\n    out[0] = Math.abs(a[0]);\n    out[1] = Math.abs(a[1]);\n    return out;\n  }\n  /**\n   * Normalize a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to normalize\n   * @returns `out`\n   */\n  static normalize(out, a) {\n    const x = a[0];\n    const y = a[1];\n    let len = x * x + y * y;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two {@link Vec2}s\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns Dot product of `a` and `b`\n   */\n  static dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  /**\n   * Computes the cross product of two {@link Vec2}s\n   * Note that the cross product must by definition produce a 3D vector.\n   * For this reason there is also not instance equivalent for this function.\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static cross(out, a, b) {\n    const z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n  }\n  /**\n   * Performs a linear interpolation between two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @param t - Interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static lerp(out, a, b, t) {\n    const ax = a[0];\n    const ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec2} with a {@link Mat2}\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to transform\n   * @param m - Matrix to transform with\n   * @returns `out`\n   * @category Static\n   */\n  static transformMat2(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec2} with a {@link Mat2d}\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to transform\n   * @param m - Matrix to transform with\n   * @returns `out`\n   * @category Static\n   */\n  static transformMat2d(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec2} with a {@link Mat3}\n   * 3rd vector component is implicitly '1'\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to transform\n   * @param m - Matrix to transform with\n   * @returns `out`\n   * @category Static\n   */\n  static transformMat3(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec2} with a {@link Mat4}\n   * 3rd vector component is implicitly '0'\n   * 4th vector component is implicitly '1'\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to transform\n   * @param m - Matrix to transform with\n   * @returns `out`\n   * @category Static\n   */\n  static transformMat4(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n  }\n  /**\n   * Rotate a 2D vector\n   * @category Static\n   *\n   * @param out - The receiving {@link Vec2}\n   * @param a - The {@link Vec2} point to rotate\n   * @param b - The origin of the rotation\n   * @param rad - The angle of rotation in radians\n   * @returns `out`\n   */\n  static rotate(out, a, b, rad) {\n    const p0 = a[0] - b[0];\n    const p1 = a[1] - b[1];\n    const sinC = Math.sin(rad);\n    const cosC = Math.cos(rad);\n    out[0] = p0 * cosC - p1 * sinC + b[0];\n    out[1] = p0 * sinC + p1 * cosC + b[1];\n    return out;\n  }\n  /**\n   * Get the angle between two 2D vectors\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns The angle in radians\n   */\n  static angle(a, b) {\n    const x1 = a[0];\n    const y1 = a[1];\n    const x2 = b[0];\n    const y2 = b[1];\n    const mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2);\n    const cosine = mag && (x1 * x2 + y1 * y2) / mag;\n    return Math.acos(Math.min(Math.max(cosine, -1), 1));\n  }\n  /**\n   * Set the components of a {@link Vec2} to zero\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @returns `out`\n   */\n  static zero(out) {\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n  }\n  /**\n   * Returns whether the vectors have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns `true` if the vectors components are ===, `false` otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n  }\n  /**\n   * Returns whether the vectors have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns `true` if the vectors are approximately equal, `false` otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const b0 = b[0];\n    const b1 = b[1];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1));\n  }\n  /**\n   * Returns a string representation of a vector\n   * @category Static\n   *\n   * @param a - Vector to represent as a string\n   * @returns String representation of the vector\n   */\n  static str(a) {\n    return `Vec2(${a.join(\", \")})`;\n  }\n};\nVec2.prototype.sub = Vec2.prototype.subtract;\nVec2.prototype.mul = Vec2.prototype.multiply;\nVec2.prototype.div = Vec2.prototype.divide;\nVec2.prototype.dist = Vec2.prototype.distance;\nVec2.prototype.sqrDist = Vec2.prototype.squaredDistance;\nVec2.sub = Vec2.subtract;\nVec2.mul = Vec2.multiply;\nVec2.div = Vec2.divide;\nVec2.dist = Vec2.distance;\nVec2.sqrDist = Vec2.squaredDistance;\nVec2.sqrLen = Vec2.squaredLength;\nVec2.mag = Vec2.magnitude;\nVec2.length = Vec2.magnitude;\nVec2.len = Vec2.magnitude;\n\nexport { Mat2, Mat2d, Mat3, Mat4, Quat, Quat2, Vec2, Vec3, Vec4 };\n//# sourceMappingURL=index.js.map\n","import { isObject, isIterable } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides resources for parsing style strings.\n */\nclass StyleParse\n{\n   static #regexPixels = /(\\d+)\\s*px/;\n\n   /**\n    * Parses a pixel string / computed styles. Ex. `100px` returns `100`.\n    *\n    * @param {string}   value - Value to parse.\n    *\n    * @returns {number|undefined} The integer component of a pixel string.\n    */\n   static pixels(value)\n   {\n      if (typeof value !== 'string') { return void 0; }\n\n      const isPixels = this.#regexPixels.test(value);\n      const number = parseInt(value);\n\n      return isPixels && Number.isFinite(number) ? number : void 0;\n   }\n\n   /**\n    * Returns the pixel value for `1rem` based on the root document element. You may apply an optional multiplier.\n    *\n    * @param {number} [multiplier=1] - Optional multiplier to apply to `rem` pixel value; default: 1.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {Document} [options.targetDocument=document] The target DOM {@link Document} if different from the main\n    *        browser global `document`.\n    *\n    * @returns {number} The pixel value for `1rem` with or without a multiplier based on the root document element.\n    */\n   static remPixels(multiplier = 1, { targetDocument = document } = {})\n   {\n      return targetDocument?.documentElement ?\n       multiplier * parseFloat(globalThis.getComputedStyle(targetDocument.documentElement).fontSize) : void 0;\n   }\n}\n\n/**\n * Provides a managed dynamic style sheet / element useful in configuring global CSS variables. When creating an\n * instance of TJSStyleManager you must provide a \"document key\" / string for the style element added. The style element\n * can be accessed via `document[docKey]`.\n *\n * Instances of TJSStyleManager can also be versioned by supplying a positive integer greater than or equal to `1` via\n * the 'version' option. This version number is assigned to the associated style element. When a TJSStyleManager\n * instance is created and there is an existing instance with a version that is lower than the current instance all CSS\n * rules are removed letting the higher version to take precedence. This isn't a perfect system and requires thoughtful\n * construction of CSS variables exposed, but allows multiple independently compiled TRL packages to load the latest\n * CSS variables. It is recommended to always set `overwrite` option of {@link TJSStyleManager.setProperty} and\n * {@link TJSStyleManager.setProperties} to `false` when loading initial values.\n */\nclass TJSStyleManager\n{\n   /** @type {CSSStyleRule} */\n   #cssRule;\n\n   /** @type {string} */\n   #docKey;\n\n   /** @type {string} */\n   #selector;\n\n   /** @type {HTMLStyleElement} */\n   #styleElement;\n\n   /** @type {number} */\n   #version;\n\n   /**\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.docKey - Required key providing a link to a specific style sheet element.\n    *\n    * @param {string}   [opts.selector=:root] - Selector element.\n    *\n    * @param {Document} [opts.document] - Target document to load styles into.\n    *\n    * @param {number}   [opts.version] - An integer representing the version / level of styles being managed.\n    */\n   constructor({ docKey, selector = ':root', document = globalThis.document, version } = {})\n   {\n      if (typeof docKey !== 'string') { throw new TypeError(`StyleManager error: 'docKey' is not a string.`); }\n\n      if (Object.prototype.toString.call(document) !== '[object HTMLDocument]')\n      {\n         throw new TypeError(`TJSStyleManager error: 'document' is not an instance of HTMLDocument.`);\n      }\n\n      if (typeof selector !== 'string') { throw new TypeError(`StyleManager error: 'selector' is not a string.`); }\n\n      if (version !== void 0 && !Number.isSafeInteger(version) && version < 1)\n      {\n         throw new TypeError(`StyleManager error: 'version' is defined and is not a positive integer >= 1.`);\n      }\n\n      this.#selector = selector;\n      this.#docKey = docKey;\n      this.#version = version;\n\n      if (document[this.#docKey] === void 0)\n      {\n         this.#styleElement = document.createElement('style');\n\n         document.head.append(this.#styleElement);\n\n         // Set initial style manager version if any supplied.\n         this.#styleElement._STYLE_MANAGER_VERSION = version;\n\n         this.#styleElement.sheet.insertRule(`${selector} {}`, 0);\n\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         document[docKey] = this.#styleElement;\n      }\n      else\n      {\n         this.#styleElement = document[docKey];\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         if (version)\n         {\n            const existingVersion = this.#styleElement._STYLE_MANAGER_VERSION ?? 0;\n\n            // Remove all existing CSS rules / text if version is greater than existing version.\n            if (version > existingVersion)\n            {\n               this.#cssRule.style.cssText = '';\n            }\n         }\n      }\n   }\n\n   /**\n    * @returns {string} Provides an accessor to get the `cssText` for the style sheet.\n    */\n   get cssText()\n   {\n      return this.#cssRule.style.cssText;\n   }\n\n   /**\n    * @returns {number} Returns the version of this instance.\n    */\n   get version()\n   {\n      return this.#version;\n   }\n\n   /**\n    * Provides a copy constructor to duplicate an existing TJSStyleManager instance into a new document.\n    *\n    * Note: This is used to support the `PopOut` module.\n    *\n    * @param {Document} [document] Target browser document to clone into.\n    *\n    * @returns {TJSStyleManager} New style manager instance.\n    */\n   clone(document = globalThis.document)\n   {\n      const newStyleManager = new TJSStyleManager({\n         selector: this.#selector,\n         docKey: this.#docKey,\n         document,\n         version: this.#version\n      });\n\n      newStyleManager.#cssRule.style.cssText = this.#cssRule.style.cssText;\n\n      return newStyleManager;\n   }\n\n   get()\n   {\n      const cssText = this.#cssRule.style.cssText;\n\n      const result = {};\n\n      if (cssText !== '')\n      {\n         for (const entry of cssText.split(';'))\n         {\n            if (entry !== '')\n            {\n               const values = entry.split(':');\n               result[values[0].trim()] = values[1];\n            }\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * Gets a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} Returns CSS variable value.\n    */\n   getProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.getPropertyValue(key);\n   }\n\n   /**\n    * Set rules by property / value; useful for CSS variables.\n    *\n    * @param {{ [key: string]: string }}  rules - An object with property / value string pairs to load.\n    *\n    * @param {boolean}                 [overwrite=true] - When true overwrites any existing values.\n    */\n   setProperties(rules, overwrite = true)\n   {\n      if (!isObject(rules)) { throw new TypeError(`StyleManager error: 'rules' is not an object.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         for (const [key, value] of Object.entries(rules))\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n      else\n      {\n         // Only set property keys for entries that don't have an existing rule set.\n         for (const [key, value] of Object.entries(rules))\n         {\n            if (this.#cssRule.style.getPropertyValue(key) === '')\n            {\n               this.#cssRule.style.setProperty(key, value);\n            }\n         }\n      }\n   }\n\n   /**\n    * Sets a particular property.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @param {string}   value - CSS variable value.\n    *\n    * @param {boolean}  [overwrite=true] - Overwrite any existing value.\n    */\n   setProperty(key, value, overwrite = true)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      if (typeof value !== 'string') { throw new TypeError(`StyleManager error: 'value' is not a string.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         this.#cssRule.style.setProperty(key, value);\n      }\n      else\n      {\n         if (this.#cssRule.style.getPropertyValue(key) === '')\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n   }\n\n   /**\n    * Removes the property keys specified. If `keys` is an iterable list then all property keys in the list are removed.\n    *\n    * @param {Iterable<string>} keys - The property keys to remove.\n    */\n   removeProperties(keys)\n   {\n      if (!isIterable(keys)) { throw new TypeError(`StyleManager error: 'keys' is not an iterable list.`); }\n\n      for (const key of keys)\n      {\n         if (typeof key === 'string') { this.#cssRule.style.removeProperty(key); }\n      }\n   }\n\n   /**\n    * Removes a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} CSS variable value when removed.\n    */\n   removeProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.removeProperty(key);\n   }\n}\n\nexport { StyleParse, TJSStyleManager };\n//# sourceMappingURL=index.js.map\n","/**\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\n * inline style modification amongst other direct animation techniques.\n *\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\n *\n * @returns {Promise<number>} Returns time of last `requestAnimationFrame` callback.\n */\nasync function nextAnimationFrame(cntr = 1)\n{\n   if (!Number.isInteger(cntr) || cntr < 1)\n   {\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\n   }\n\n   let currentTime;\n\n   // Await count of `rAF` callbacks.\n   for (;--cntr >= 0;) { currentTime = await new Promise((resolve) => requestAnimationFrame(resolve)); }\n\n   return currentTime;\n}\n\nexport { nextAnimationFrame };\n//# sourceMappingURL=index.js.map\n","import { hasSetter, isIterable, isObject, isPlainObject } from '@typhonjs-fvtt/runtime/util/object';\nimport { getEasingFunc } from '@typhonjs-fvtt/runtime/svelte/easing';\nimport { A11yHelper } from '@typhonjs-fvtt/runtime/util/a11y';\nimport { radToDeg, degToRad, clamp } from '@typhonjs-fvtt/runtime/math/util';\nimport { subscribeIgnoreFirst } from '@typhonjs-fvtt/runtime/svelte/store/util';\nimport { propertyStore } from '@typhonjs-fvtt/runtime/svelte/store/writable-derived';\nimport { lerp } from '@typhonjs-fvtt/runtime/math/interpolate';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { Mat4, Vec3 } from '@typhonjs-fvtt/runtime/math/gl-matrix';\nimport { writable } from 'svelte/store';\nimport { StyleParse } from '@typhonjs-fvtt/runtime/util/dom/style';\nimport { nextAnimationFrame } from '@typhonjs-fvtt/runtime/util/animate';\n\n/**\n * Provides an action to apply a TJSPosition instance to a HTMLElement and invoke `position.parent`\n *\n * @param node - The node associated with the action.\n *\n * @param position - A position or positionable instance.\n *\n * @returns The action lifecycle methods.\n */\nfunction applyPosition(node, position) {\n    /**\n     * Find actual position instance checking for a Positionable instance.\n     */\n    let actualPosition = (position?.position ?? position);\n    if (hasSetter(actualPosition, 'parent')) {\n        actualPosition.parent = node;\n    }\n    return {\n        update: (newPosition) => {\n            const newActualPosition = (newPosition?.position ?? position);\n            // Sanity case to short circuit update if positions are the same instance.\n            if (newActualPosition === actualPosition && newActualPosition.parent === actualPosition.parent) {\n                return;\n            }\n            if (hasSetter(actualPosition, 'parent')) {\n                actualPosition.parent = void 0;\n            }\n            actualPosition = newActualPosition;\n            if (hasSetter(actualPosition, 'parent')) {\n                actualPosition.parent = node;\n            }\n        },\n        destroy: () => { if (hasSetter(actualPosition, 'parent')) {\n            actualPosition.parent = void 0;\n        } }\n    };\n}\n\n/**\n * Provides an action to enable pointer dragging of an HTMLElement and invoke `position.set` on a given\n * {@link TJSPosition} instance provided. When the attached boolean store state changes the draggable action is enabled\n * or disabled.\n *\n * @param node - The node associated with the action.\n *\n * @param options - Draggable action options.\n *\n * @returns Action lifecycle functions.\n */\nfunction draggable(node, { position, enabled = true, button = 0, storeDragging = void 0, tween = false, tweenOptions = { duration: 1, ease: 'cubicOut' }, hasTargetClassList, ignoreTargetClassList }) {\n    if (hasTargetClassList !== void 0 && !isIterable(hasTargetClassList)) {\n        throw new TypeError(`'hasTargetClassList' is not iterable.`);\n    }\n    if (ignoreTargetClassList !== void 0 && !isIterable(ignoreTargetClassList)) {\n        throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\n    }\n    /**\n     * Used for direct call to `position.set`.\n     */\n    const positionData = { left: 0, top: 0 };\n    /**\n     * Find actual position instance checking for a Positionable instance.\n     */\n    let actualPosition = (position?.position ?? position);\n    /**\n     * Duplicate the app / Positionable starting position to track differences.\n     */\n    let initialPosition = null;\n    /**\n     * Stores the initial X / Y on drag down.\n     */\n    let initialDragPoint = { x: 0, y: 0 };\n    /**\n     * Stores the current dragging state and gates the move pointer as the dragging store is not set until the first\n     * pointer move.\n     */\n    let dragging = false;\n    /**\n     * Stores the quickTo callback to use for optimized tweening when easing is enabled.\n     */\n    let quickTo = actualPosition.animate.quickTo(['top', 'left'], tweenOptions);\n    /**\n     * Event handlers associated with this action, so they may be later unregistered.\n     */\n    const handlers = {\n        dragDown: ['pointerdown', onDragPointerDown, false],\n        dragMove: ['pointermove', onDragPointerChange, false],\n        dragUp: ['pointerup', onDragPointerUp, false]\n    };\n    /**\n     * Activates listeners.\n     */\n    function activateListeners() {\n        // Drag handlers\n        node.addEventListener(...handlers.dragDown);\n        node.classList.add('draggable');\n    }\n    /**\n     * Removes listeners.\n     */\n    function removeListeners() {\n        if (typeof storeDragging?.set === 'function') {\n            storeDragging.set(false);\n        }\n        // Drag handlers\n        node.removeEventListener(...handlers.dragDown);\n        node.removeEventListener(...handlers.dragMove);\n        node.removeEventListener(...handlers.dragUp);\n        node.classList.remove('draggable');\n    }\n    if (enabled) {\n        activateListeners();\n    }\n    /**\n     * Handle the initial pointer down that activates dragging behavior for the positionable.\n     *\n     * @param event - The pointer down event.\n     */\n    function onDragPointerDown(event) {\n        if (event.button !== button || !event.isPrimary) {\n            return;\n        }\n        // Do not process if the position system is not enabled.\n        if (!actualPosition.enabled) {\n            return;\n        }\n        // Potentially ignore this event if `ignoreTargetClassList` is defined and the `event.target` has a matching\n        // class.\n        if (ignoreTargetClassList !== void 0 && A11yHelper.isFocusTarget(event.target)) {\n            for (const targetClass of ignoreTargetClassList) {\n                if (event.target.classList.contains(targetClass)) {\n                    return;\n                }\n            }\n        }\n        // Potentially ignore this event if `hasTargetClassList` is defined and the `event.target` does not have any\n        // matching class from the list.\n        if (hasTargetClassList !== void 0 && A11yHelper.isFocusTarget(event.target)) {\n            let foundTarget = false;\n            for (const targetClass of hasTargetClassList) {\n                if (event.target.classList.contains(targetClass)) {\n                    foundTarget = true;\n                    break;\n                }\n            }\n            if (!foundTarget) {\n                return;\n            }\n        }\n        event.preventDefault();\n        dragging = false;\n        // Record initial position.\n        initialPosition = actualPosition.get();\n        initialDragPoint = { x: event.clientX, y: event.clientY };\n        // Add move and pointer up handlers.\n        node.addEventListener(...handlers.dragMove);\n        node.addEventListener(...handlers.dragUp);\n        node.setPointerCapture(event.pointerId);\n    }\n    /**\n     * Move the positionable.\n     *\n     * @param event - The pointer move event.\n     */\n    function onDragPointerChange(event) {\n        // See chorded button presses for pointer events:\n        // https://www.w3.org/TR/pointerevents3/#chorded-button-interactions\n        // TODO: Support different button configurations for PointerEvents.\n        if ((event.buttons & 1) === 0) {\n            onDragPointerUp(event);\n            return;\n        }\n        if (event.button !== -1 || !event.isPrimary) {\n            return;\n        }\n        event.preventDefault();\n        // Only set store dragging on first move event.\n        if (!dragging && typeof storeDragging?.set === 'function') {\n            dragging = true;\n            storeDragging.set(true);\n        }\n        const newLeft = initialPosition?.left + (event.clientX - initialDragPoint.x);\n        const newTop = initialPosition?.top + (event.clientY - initialDragPoint.y);\n        if (tween) {\n            quickTo(newTop, newLeft);\n        }\n        else {\n            positionData.left = newLeft;\n            positionData.top = newTop;\n            actualPosition.set(positionData);\n        }\n    }\n    /**\n     * Finish dragging and set the final position and removing listeners.\n     *\n     * @param event - The pointer up event.\n     */\n    function onDragPointerUp(event) {\n        event.preventDefault();\n        dragging = false;\n        if (typeof storeDragging?.set === 'function') {\n            storeDragging.set(false);\n        }\n        node.removeEventListener(...handlers.dragMove);\n        node.removeEventListener(...handlers.dragUp);\n    }\n    return {\n        // The default of enabled being true won't automatically add listeners twice.\n        update: (options) => {\n            if (options.position !== void 0) {\n                // Find actual position instance checking for a Positionable instance.\n                const newPosition = (options.position?.position ?? options.position);\n                if (newPosition !== actualPosition) {\n                    actualPosition = newPosition;\n                    quickTo = actualPosition.animate.quickTo(['top', 'left'], tweenOptions);\n                }\n            }\n            if (typeof options.enabled === 'boolean') {\n                enabled = options.enabled;\n                if (enabled) {\n                    activateListeners();\n                }\n                else {\n                    removeListeners();\n                }\n            }\n            if (typeof options.button === 'number') {\n                button = options.button;\n            }\n            if (typeof options.tween === 'boolean') {\n                tween = options.tween;\n            }\n            if (isObject(options.tweenOptions)) {\n                tweenOptions = options.tweenOptions;\n                quickTo.options(tweenOptions);\n            }\n            if (options.hasTargetClassList !== void 0) {\n                if (!isIterable(options.hasTargetClassList)) {\n                    throw new TypeError(`'hasTargetClassList' is not iterable.`);\n                }\n                else {\n                    hasTargetClassList = options.hasTargetClassList;\n                }\n            }\n            if (options.ignoreTargetClassList !== void 0) {\n                if (!isIterable(options.ignoreTargetClassList)) {\n                    throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\n                }\n                else {\n                    ignoreTargetClassList = options.ignoreTargetClassList;\n                }\n            }\n        },\n        destroy: () => removeListeners()\n    };\n}\n/**\n * Provides an instance of the {@link draggable} action options support / Readable store to make updating / setting\n * draggable options much easier. When subscribing to the options instance returned by {@link draggable.options} the\n * Subscriber handler receives the entire instance.\n */\nclass DraggableOptionsStore {\n    tween;\n    tweenOptions;\n    #initialTween;\n    /**\n     */\n    #initialTweenOptions;\n    #tween = false;\n    /**\n     */\n    #tweenOptions = { duration: 1, ease: 'cubicOut' };\n    /**\n     * Stores the subscribers.\n     */\n    #subscribers = [];\n    /**\n     * @param [opts] - Optional parameters.\n     *\n     * @param [opts.tween = false] - Tween enabled.\n     *\n     * @param [opts.tweenOptions] - Quick tween options.\n     */\n    constructor({ tween = false, tweenOptions } = {}) {\n        // Define the following getters directly on this instance and make them enumerable. This allows them to be\n        // picked up w/ `Object.assign`.\n        Object.defineProperty(this, 'tween', {\n            get: () => { return this.#tween; },\n            set: (newTween) => {\n                if (typeof newTween !== 'boolean') {\n                    throw new TypeError(`'tween' is not a boolean.`);\n                }\n                this.#tween = newTween;\n                this.#updateSubscribers();\n            },\n            enumerable: true\n        });\n        Object.defineProperty(this, 'tweenOptions', {\n            get: () => { return this.#tweenOptions; },\n            set: (newTweenOptions) => {\n                if (!isObject(newTweenOptions)) {\n                    throw new TypeError(`'tweenOptions' is not an object.`);\n                }\n                if (newTweenOptions.duration !== void 0) {\n                    if (!Number.isFinite(newTweenOptions.duration)) {\n                        throw new TypeError(`'tweenOptions.duration' is not a finite number.`);\n                    }\n                    if (newTweenOptions.duration < 0) {\n                        this.#tweenOptions.duration = 0;\n                    }\n                    else {\n                        this.#tweenOptions.duration = newTweenOptions.duration;\n                    }\n                }\n                if (newTweenOptions.ease !== void 0) {\n                    const easeFn = getEasingFunc(newTweenOptions.ease);\n                    if (typeof easeFn !== 'function') {\n                        throw new TypeError(`'tweenOptions.ease' is not a function or Svelte easing function name.`);\n                    }\n                    this.#tweenOptions.ease = newTweenOptions.ease;\n                }\n                this.#updateSubscribers();\n            },\n            enumerable: true\n        });\n        // Set default options.\n        if (tween !== void 0) {\n            this.tween = tween;\n        }\n        if (tweenOptions !== void 0) {\n            this.tweenOptions = tweenOptions;\n        }\n        this.#initialTween = this.#tween;\n        this.#initialTweenOptions = Object.assign({}, this.#tweenOptions);\n    }\n    /**\n     * @returns Get tween duration.\n     */\n    get tweenDuration() { return this.#tweenOptions.duration; }\n    /**\n     * @returns Get easing function or easing function name.\n     */\n    get tweenEase() { return this.#tweenOptions.ease; }\n    /**\n     * @param duration - Set tween duration.\n     */\n    set tweenDuration(duration) {\n        if (!Number.isFinite(duration)) {\n            throw new TypeError(`'duration' is not a finite number.`);\n        }\n        if (duration < 0) {\n            duration = 0;\n        }\n        this.#tweenOptions.duration = duration;\n        this.#updateSubscribers();\n    }\n    /**\n     * @param ease - Set easing function by name or direct function.\n     */\n    set tweenEase(ease) {\n        const easeFn = getEasingFunc(ease);\n        if (typeof easeFn !== 'function') {\n            throw new TypeError(`'ease' is not a function or Svelte easing function name.`);\n        }\n        this.#tweenOptions.ease = ease;\n        this.#updateSubscribers();\n    }\n    /**\n     * Resets all options data to initial values.\n     */\n    reset() {\n        this.#tween = this.#initialTween;\n        this.#tweenOptions = Object.assign({}, this.#initialTweenOptions);\n        this.#updateSubscribers();\n    }\n    /**\n     * Resets tween enabled state to initial value.\n     */\n    resetTween() {\n        this.#tween = this.#initialTween;\n        this.#updateSubscribers();\n    }\n    /**\n     * Resets tween options to initial values.\n     */\n    resetTweenOptions() {\n        this.#tweenOptions = Object.assign({}, this.#initialTweenOptions);\n        this.#updateSubscribers();\n    }\n    /**\n     * Store subscribe method.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives the DraggableOptionsStore\n     *        instance.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        const currentIdx = this.#subscribers.findIndex((entry) => entry === handler);\n        if (currentIdx === -1) {\n            this.#subscribers.push(handler); // add handler to the array of subscribers\n            handler(this); // call handler with current value\n        }\n        // Return unsubscribe function.\n        return () => {\n            const existingIdx = this.#subscribers.findIndex((entry) => entry === handler);\n            if (existingIdx !== -1) {\n                this.#subscribers.splice(existingIdx, 1);\n            }\n        };\n    }\n    #updateSubscribers() {\n        const subscriptions = this.#subscribers;\n        // Early out if there are no subscribers.\n        if (subscriptions.length > 0) {\n            for (let cntr = 0; cntr < subscriptions.length; cntr++) {\n                subscriptions[cntr](this);\n            }\n        }\n    }\n}\n/**\n * Define a function to get a DraggableOptionsStore instance.\n *\n * @param options - Initial options for DraggableOptionsStore.\n *\n * @returns A new options instance.\n */\ndraggable.options = (options) => new DraggableOptionsStore(options);\n\n/**\n * Provides a basic animation implementation for TJSPosition animation.\n */\nclass AnimationControl {\n    /**\n     */\n    #animationData;\n    /**\n     */\n    #finishedPromise;\n    /**\n     */\n    #willFinish;\n    /**\n     * Defines a static empty / void animation control.\n     */\n    static #voidControl = new AnimationControl(null);\n    /**\n     * Provides a static void / undefined AnimationControl that is automatically resolved.\n     */\n    static get voidControl() { return this.#voidControl; }\n    /**\n     * @param [animationData] - Animation data.\n     *\n     * @param [willFinish] - Promise that tracks animation finished state.\n     */\n    constructor(animationData, willFinish = false) {\n        this.#animationData = animationData;\n        this.#willFinish = willFinish;\n        // Set this control to animation data.\n        if (isObject(animationData)) {\n            animationData.control = this;\n        }\n    }\n    /**\n     * Get a promise that resolves when animation is finished.\n     *\n     * @returns Animation finished Promise.\n     */\n    get finished() {\n        if (!CrossWindow.isPromise(this.#finishedPromise)) {\n            this.#finishedPromise = this.#willFinish ? new Promise((resolve) => this.#animationData.resolve = resolve) :\n                Promise.resolve({ cancelled: false });\n        }\n        return this.#finishedPromise;\n    }\n    /**\n     * Returns whether this animation is currently active / animating.\n     *\n     * Note: a delayed animation may not be started / active yet. Use {@link AnimationControl.isFinished} to determine\n     * if an animation is actually finished.\n     *\n     * @returns Animation active state.\n     */\n    get isActive() { return this.#animationData?.active ?? false; }\n    /**\n     * Returns whether this animation is completely finished.\n     *\n     * @returns Animation finished state.\n     */\n    get isFinished() { return this.#animationData?.finished ?? true; }\n    /**\n     * Cancels the animation.\n     */\n    cancel() {\n        const animationData = this.#animationData;\n        if (animationData === null || animationData === void 0) {\n            return;\n        }\n        // Set cancelled state to true and this animation data instance will be removed from AnimationManager on next\n        // update.\n        animationData.cancelled = true;\n    }\n}\n\n/**\n * Provides animation management and scheduling allowing all TJSPosition instances to utilize one micro-task.\n */\nclass AnimationManager {\n    /**\n     * Cancels all animations except `quickTo` animations.\n     */\n    static cancelFn = (data) => data?.quickTo !== true;\n    /**\n     * Cancels all animations.\n     */\n    static cancelAllFn = () => true;\n    /**\n     * Defines the options used for {@link TJSPosition.set}.\n     */\n    static #tjsPositionSetOptions = Object.freeze({ immediateElementUpdate: true });\n    /**\n     */\n    static #activeList = [];\n    /**\n     * Provides the `this` context for {@link AnimationManager.animate} to be scheduled on rAF.\n     */\n    static #animateBound = (timeFrame) => this.animate(timeFrame);\n    /**\n     */\n    static #pendingList = [];\n    /**\n     * Tracks whether a requestAnimationFrame callback is pending via {@link AnimationManager.add};\n     */\n    static #rafPending = false;\n    /**\n     * Time of last `rAF` callback.\n     */\n    static #timeFrame;\n    /**\n     * Time of `performance.now()` at last `rAF` callback.\n     */\n    static #timeNow;\n    /**\n     * @returns Time of last `rAF` callback.\n     */\n    static get timeFrame() {\n        return this.#timeFrame;\n    }\n    /**\n     * @returns Time of `performance.now()` at last `rAF` callback.\n     */\n    static get timeNow() {\n        return this.#timeNow;\n    }\n    /**\n     * Add animation data.\n     *\n     * @param data -\n     */\n    static add(data) {\n        if (data.cancelled) {\n            this.#cleanupData(data);\n            return;\n        }\n        AnimationManager.#pendingList.push(data);\n        // If there is no rAF pending schedule one now.\n        if (!AnimationManager.#rafPending) {\n            AnimationManager.#rafPending = true;\n            globalThis.requestAnimationFrame(this.#animateBound);\n        }\n    }\n    /**\n     * Manage all animation.\n     *\n     * @param timeFrame - rAF callback time.\n     */\n    static animate(timeFrame) {\n        AnimationManager.#rafPending = false;\n        AnimationManager.#timeNow = globalThis.performance.now();\n        AnimationManager.#timeFrame = timeFrame;\n        // Early out of the continual rAF callback when there are no current animations scheduled.\n        if (AnimationManager.#activeList.length === 0 && AnimationManager.#pendingList.length === 0) {\n            return;\n        }\n        if (AnimationManager.#pendingList.length) {\n            // Process new data\n            for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;) {\n                const data = AnimationManager.#pendingList[cntr];\n                // If animation instance has been cancelled before start then remove it from new list and cleanup.\n                if (data.cancelled || (data.el !== void 0 && !data.el.isConnected)) {\n                    AnimationManager.#pendingList.splice(cntr, 1);\n                    this.#cleanupData(data);\n                }\n                // If data is active then process it now. Delayed animations start with `active` false.\n                if (data.active) {\n                    // Set any transform origin for the animation.\n                    if (data.transformOrigin) {\n                        data.position.set({ transformOrigin: data.transformOrigin });\n                    }\n                    data.start = AnimationManager.#timeFrame;\n                    // Remove from new list and add to active list.\n                    AnimationManager.#pendingList.splice(cntr, 1);\n                    AnimationManager.#activeList.push(data);\n                }\n            }\n        }\n        // Process active animations.\n        for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;) {\n            const data = AnimationManager.#activeList[cntr];\n            // Remove any animations that have been canceled.\n            if (data.cancelled || (data.el !== void 0 && !data.el.isConnected)) {\n                AnimationManager.#activeList.splice(cntr, 1);\n                this.#cleanupData(data);\n                continue;\n            }\n            data.current = timeFrame - data.start;\n            // Remove this animation instance if current animating time exceeds duration.\n            if (data.current >= data.duration) {\n                // Prepare final update with end position data.\n                for (let dataCntr = data.keys.length; --dataCntr >= 0;) {\n                    const key = data.keys[dataCntr];\n                    data.newData[key] = data.destination[key];\n                }\n                data.position.set(data.newData, AnimationManager.#tjsPositionSetOptions);\n                AnimationManager.#activeList.splice(cntr, 1);\n                this.#cleanupData(data);\n                continue;\n            }\n            // Apply easing to create an eased time.\n            const easedTime = data.ease(data.current / data.duration);\n            for (let dataCntr = data.keys.length; --dataCntr >= 0;) {\n                const key = data.keys[dataCntr];\n                data.newData[key] = data.interpolate(data.initial[key], data.destination[key], easedTime);\n            }\n            data.position.set(data.newData, AnimationManager.#tjsPositionSetOptions);\n        }\n        globalThis.requestAnimationFrame(this.#animateBound);\n    }\n    /**\n     * Cancels all animations for given TJSPosition instance.\n     *\n     * @param position - TJSPosition instance.\n     *\n     * @param [cancelFn] - An optional function to control cancelling animations.\n     */\n    static cancel(position, cancelFn = AnimationManager.cancelFn) {\n        for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;) {\n            const data = AnimationManager.#activeList[cntr];\n            if (data.position === position && cancelFn(data)) {\n                AnimationManager.#activeList.splice(cntr, 1);\n                data.cancelled = true;\n                this.#cleanupData(data);\n            }\n        }\n        for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;) {\n            const data = AnimationManager.#pendingList[cntr];\n            if (data.position === position && cancelFn(data)) {\n                AnimationManager.#pendingList.splice(cntr, 1);\n                data.cancelled = true;\n                this.#cleanupData(data);\n            }\n        }\n    }\n    /**\n     * Cancels all active and delayed animations.\n     */\n    static cancelAll() {\n        for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;) {\n            const data = AnimationManager.#activeList[cntr];\n            data.cancelled = true;\n            this.#cleanupData(data);\n        }\n        for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;) {\n            const data = AnimationManager.#pendingList[cntr];\n            data.cancelled = true;\n            this.#cleanupData(data);\n        }\n        AnimationManager.#activeList.length = 0;\n        AnimationManager.#pendingList.length = 0;\n    }\n    /**\n     * @param data - Animation data to cleanup.\n     */\n    static #cleanupData(data) {\n        // Update state.\n        data.active = false;\n        data.finished = true;\n        // Reset any transform origin for the animation to initial value.\n        if (data.transformOriginInitial) {\n            data.position.set({ transformOrigin: data.transformOriginInitial });\n        }\n        if (typeof data.cleanup === 'function') {\n            data.cleanup(data);\n        }\n        if (typeof data.resolve === 'function') {\n            data.resolve({ cancelled: data.cancelled });\n        }\n        // Remove retained data if not a `quickTo` animation.\n        if (!data.quickTo) {\n            data.cleanup = void 0;\n            data.control = void 0;\n            data.destination = void 0;\n            data.el = void 0;\n            data.ease = void 0;\n            data.initial = void 0;\n            data.interpolate = void 0;\n            data.keys = void 0;\n            data.newData = void 0;\n            data.position = void 0;\n            data.resolve = void 0;\n        }\n    }\n    /**\n     * Gets all {@link AnimationControl} instances for a given TJSPosition instance.\n     *\n     * @param position - TJSPosition instance.\n     *\n     * @returns All scheduled AnimationControl instances for the given TJSPosition instance.\n     */\n    static getScheduled(position) {\n        const results = [];\n        for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;) {\n            const data = AnimationManager.#activeList[cntr];\n            if (data.position === position && data.control) {\n                results.push(data.control);\n            }\n        }\n        for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;) {\n            const data = AnimationManager.#pendingList[cntr];\n            if (data.position === position && data.control) {\n                results.push(data.control);\n            }\n        }\n        return results;\n    }\n    /**\n     * Returns the status of any scheduled or pending animations for the given {@link TJSPosition} instance.\n     *\n     * @param position - TJSPosition instance.\n     *\n     * @param [options] - Scheduling options.\n     *\n     * @returns True if scheduled / false if not.\n     */\n    static isScheduled(position, { active = true, pending = true } = {}) {\n        if (active) {\n            for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;) {\n                if (AnimationManager.#activeList[cntr].position === position) {\n                    return true;\n                }\n            }\n        }\n        if (pending) {\n            for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;) {\n                if (AnimationManager.#pendingList[cntr].position === position) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Defines stored positional data.\n */\nclass TJSPositionData {\n    height;\n    left;\n    maxHeight;\n    maxWidth;\n    minHeight;\n    minWidth;\n    rotateX;\n    rotateY;\n    rotateZ;\n    scale;\n    top;\n    transformOrigin;\n    translateX;\n    translateY;\n    translateZ;\n    width;\n    zIndex;\n    /**\n     * @param [opts] - Options.\n     *\n     * @param [opts.height] -\n     *\n     * @param [opts.left] -\n     *\n     * @param [opts.maxHeight] -\n     *\n     * @param [opts.maxWidth] -\n     *\n     * @param [opts.minHeight] -\n     *\n     * @param [opts.minWidth] -\n     *\n     * @param [opts.rotateX] -\n     *\n     * @param [opts.rotateY] -\n     *\n     * @param [opts.rotateZ] -\n     *\n     * @param [opts.scale] -\n     *\n     * @param [opts.translateX] -\n     *\n     * @param [opts.translateY] -\n     *\n     * @param [opts.translateZ] -\n     *\n     * @param [opts.top] -\n     *\n     * @param [opts.transformOrigin] -\n     *\n     * @param [opts.width] -\n     *\n     * @param [opts.zIndex] -\n     *\n     * @param [opts.rotation] - Alias for `rotateZ`.\n     */\n    constructor({ height = null, left = null, maxHeight = null, maxWidth = null, minHeight = null, minWidth = null, rotateX = null, rotateY = null, rotateZ = null, scale = null, translateX = null, translateY = null, translateZ = null, top = null, transformOrigin = null, width = null, zIndex = null } = {}) {\n        this.height = height;\n        this.left = left;\n        this.maxHeight = maxHeight;\n        this.maxWidth = maxWidth;\n        this.minHeight = minHeight;\n        this.minWidth = minWidth;\n        this.rotateX = rotateX;\n        this.rotateY = rotateY;\n        this.rotateZ = rotateZ;\n        this.scale = scale;\n        this.top = top;\n        this.transformOrigin = transformOrigin;\n        this.translateX = translateX;\n        this.translateY = translateY;\n        this.translateZ = translateZ;\n        this.width = width;\n        this.zIndex = zIndex;\n    }\n}\n\n/**\n * Various internal utilities to work with {@link TJSPositionData}.\n */\nclass TJSPositionDataUtil {\n    /**\n     * Stores the TJSPositionData properties that can be animated.\n     */\n    static #animateKeys = Object.freeze(new Set([\n        // Main keys\n        'left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\n        'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ', 'zIndex',\n        // Aliases\n        'rotation'\n    ]));\n    /**\n     * Stores the TJSPositionData property aliases that can be animated.\n     */\n    static #animateKeyAliases = Object.freeze(new Map([['rotation', 'rotateZ']]));\n    /**\n     * Provides numeric defaults for all parameters. This is used by {@link TJSPosition.get} to optionally provide\n     * numeric defaults.\n     */\n    static #numericDefaults = Object.freeze({\n        // Other keys\n        height: 0,\n        left: 0,\n        maxHeight: null,\n        maxWidth: null,\n        minHeight: null,\n        minWidth: null,\n        top: 0,\n        transformOrigin: null,\n        width: 0,\n        zIndex: null,\n        rotateX: 0,\n        rotateY: 0,\n        rotateZ: 0,\n        scale: 1,\n        translateX: 0,\n        translateY: 0,\n        translateZ: 0\n    });\n    /**\n     * Convenience to copy from source to target of two TJSPositionData like objects. If a target is not supplied a new\n     * {@link TJSPositionData} instance is created.\n     *\n     * @param source - The source instance to copy from.\n     *\n     * @param [target] - Target TJSPositionData like object; if one is not provided a new instance is created.\n     *\n     * @returns The target instance with all TJSPositionData fields.\n     */\n    static copyData(source, target = new TJSPositionData()) {\n        target.height = source.height ?? null;\n        target.left = source.left ?? null;\n        target.maxHeight = source.maxHeight ?? null;\n        target.maxWidth = source.maxWidth ?? null;\n        target.minHeight = source.minHeight ?? null;\n        target.minWidth = source.minWidth ?? null;\n        target.rotateX = source.rotateX ?? null;\n        target.rotateY = source.rotateY ?? null;\n        target.rotateZ = source.rotateZ ?? null;\n        target.scale = source.scale ?? null;\n        target.top = source.top ?? null;\n        target.transformOrigin = source.transformOrigin ?? null;\n        target.translateX = source.translateX ?? null;\n        target.translateY = source.translateY ?? null;\n        target.translateZ = source.translateZ ?? null;\n        target.width = source.width ?? null;\n        target.zIndex = source.zIndex ?? null;\n        return target;\n    }\n    /**\n     * Returns the non-aliased animation key.\n     *\n     * @param key - Animation key / possibly aliased key.\n     *\n     * @returns Actual non-aliased animation key.\n     */\n    static getAnimationKey(key) {\n        return this.#animateKeyAliases.get(key) ?? key;\n    }\n    /**\n     * Queries an object by the given key or otherwise returns any numeric default.\n     *\n     * @param data - An object to query for the given animation key.\n     *\n     * @param key - Animation key.\n     *\n     * @returns Data at key or numeric default.\n     */\n    static getDataOrDefault(data, key) {\n        key = this.#animateKeyAliases.get(key) ?? key;\n        return data[key] ?? this.#numericDefaults[key];\n    }\n    /**\n     * Tests if the given key is an animation key.\n     *\n     * @param key - A potential animation key.\n     *\n     * @returns Is animation key.\n     */\n    static isAnimationKey(key) {\n        return this.#animateKeys.has(key);\n    }\n    /**\n     * Sets numeric defaults for a {@link TJSPositionData} like object.\n     *\n     * @param data - A TJSPositionData like object.\n     */\n    static setNumericDefaults(data) {\n        // Transform keys\n        if (data.rotateX === null) {\n            data.rotateX = 0;\n        }\n        if (data.rotateY === null) {\n            data.rotateY = 0;\n        }\n        if (data.rotateZ === null) {\n            data.rotateZ = 0;\n        }\n        if (data.translateX === null) {\n            data.translateX = 0;\n        }\n        if (data.translateY === null) {\n            data.translateY = 0;\n        }\n        if (data.translateZ === null) {\n            data.translateZ = 0;\n        }\n        if (data.scale === null) {\n            data.scale = 1;\n        }\n    }\n}\n\n/**\n * Converts {@link TJSPositionData} properties defined as strings to number values. The string values can be defined\n * as relative adjustments with a leading operator. Various unit formats are supported as well.\n */\nclass ConvertStringData {\n    /**\n     * Animation keys for different processing categories.\n     */\n    static #animKeyTypes = {\n        // Animation keys that can be specified in `px` converted to a number.\n        numPx: Object.freeze(new Set(['left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\n            'translateX', 'translateY', 'translateZ'])),\n        // Animation keys that can be specified in percentage of parent element constraint.\n        percentParent: Object.freeze(new Set(['left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width',\n            'height'])),\n        // Only rotation animation keys can be specified in `rad` / `turn` converted to a number.\n        rotationRadTurn: Object.freeze(new Set(['rotateX', 'rotateY', 'rotateZ', 'rotation']))\n    };\n    /**\n     * Parses string data values. Relative values must start with leading values '+=', '-=', or '*=' followed by a\n     * float / numeric value. IE `+=45` or for percentage '+=10%'. Also handles exact percent value such as `10` or\n     * `10%`. Percentage values are based on the current value, parent element constraints, or constraints of the type\n     * of value like rotation being bound by 360 degrees.\n     *\n     * @privateRemarks\n     * TODO: In the future support more specific CSS unit types.\n     */\n    static #regexStringData = /^(?<operation>[-+*]=)?(?<value>-?\\d*\\.?\\d+)(?<unit>%|%~|px|rad|turn)?$/;\n    /**\n     * Stores the results for match groups from `regexStringData`;\n     */\n    static #matchResults = Object.seal({\n        operation: void 0,\n        value: 0,\n        unit: void 0\n    });\n    /**\n     * Converts any relative string values for animatable keys to actual updates performed against current data.\n     *\n     * @param data - position data.\n     *\n     * @param position - The source position data.\n     *\n     * @param el - Target positioned element.\n     *\n     * @returns Converted data.\n     */\n    static process(data, position, el) {\n        // Used in `%` calculations. The first `%` conversion that requires parent element height and width will attempt\n        // to cache the parent element client height & width of the given element.\n        let parentClientHeight = Number.NaN;\n        let parentClientWidth = Number.NaN;\n        for (const key in data) {\n            // Key is animatable / numeric.\n            if (TJSPositionDataUtil.isAnimationKey(key)) {\n                const value = data[key];\n                if (typeof value !== 'string') {\n                    continue;\n                }\n                // Ignore 'auto' and 'inherit' string values.\n                if (value === 'auto' || value === 'inherit') {\n                    continue;\n                }\n                const animKey = key;\n                const regexResults = this.#regexStringData.exec(value);\n                // Additional state indicating a particular key is handled.\n                let handled = false;\n                if (regexResults && regexResults.groups) {\n                    const results = this.#matchResults;\n                    results.operation = regexResults.groups.operation;\n                    results.value = parseFloat(regexResults.groups.value);\n                    results.unit = regexResults.groups.unit;\n                    // Retrieve current value, but if null use the numeric default.\n                    const current = TJSPositionDataUtil.getDataOrDefault(position, key);\n                    switch (results.unit) {\n                        // Animation keys that support percentage changes including constraints against the parent element.\n                        case '%':\n                            {\n                                // Cache parent client width / height on first parent percent based key.\n                                if (this.#animKeyTypes.percentParent.has(key) && (Number.isNaN(parentClientHeight) ||\n                                    Number.isNaN(parentClientWidth))) {\n                                    if (el?.parentElement?.isConnected) {\n                                        parentClientHeight = el.parentElement.clientHeight;\n                                        parentClientWidth = el.parentElement.clientWidth;\n                                    }\n                                    else {\n                                        parentClientHeight = 0;\n                                        parentClientWidth = 0;\n                                        console.warn(`TJSPosition - ConvertStringData warning: could not determine parent constraints for key '${key}' with value '${value}'.`);\n                                        data[key] = void 0;\n                                        continue;\n                                    }\n                                }\n                                handled = this.#handlePercent(animKey, current, data, results, parentClientHeight, parentClientWidth);\n                                break;\n                            }\n                        // Animation keys that support percentage changes from current values.\n                        case '%~':\n                            handled = this.#handleRelativePercent(animKey, current, data, results);\n                            break;\n                        // Animation keys that support `px` / treat as raw number.\n                        case 'px':\n                            handled = this.#animKeyTypes.numPx.has(key) ?\n                                this.#applyResultsValue(animKey, current, data, results) : false;\n                            break;\n                        // Only rotation animation keys support `rad` / `turn`.\n                        case 'rad':\n                        case 'turn':\n                            handled = this.#animKeyTypes.rotationRadTurn.has(key) ?\n                                this.#handleRotationRadTurn(animKey, current, data, results) : false;\n                            break;\n                        // No units / treat as raw number.\n                        default:\n                            handled = this.#applyResultsValue(animKey, current, data, results);\n                            break;\n                    }\n                }\n                if (!regexResults || !handled) {\n                    console.warn(`TJSPosition - ConvertStringData warning: malformed key '${key}' with value '${value}'.`);\n                    data[key] = void 0;\n                }\n            }\n        }\n        return data;\n    }\n    // Internal implementation ----------------------------------------------------------------------------------------\n    /**\n     * Provides the common update to source data after `results.value` has been converted to the proper value\n     * respectively.\n     *\n     * @param key - Animation key.\n     *\n     * @param current - Current value\n     *\n     * @param data - Source data to convert.\n     *\n     * @param results - Match results.\n     *\n     * @returns Adjustment successful.\n     */\n    static #applyResultsValue(key, current, data, results) {\n        if (!results.operation) {\n            data[key] = results.value;\n            return true;\n        }\n        switch (results.operation) {\n            case '-=':\n                data[key] = current - results.value;\n                break;\n            case '+=':\n                data[key] = current + results.value;\n                break;\n            case '*=':\n                data[key] = current * results.value;\n                break;\n            default:\n                return false;\n        }\n        return true;\n    }\n    /**\n     * Handles the `%` unit type where values are adjusted against the parent element client width / height or in the\n     * case of rotation the percentage of 360 degrees.\n     *\n     * @param key - Animation key.\n     *\n     * @param current - Current value\n     *\n     * @param data - Source data to convert.\n     *\n     * @param results - Match results.\n     *\n     * @param parentClientHeight - Parent element client height.\n     *\n     * @param parentClientWidth - Parent element client width.\n     *\n     * @returns Adjustment successful.\n     */\n    static #handlePercent(key, current, data, results, parentClientHeight, parentClientWidth) {\n        switch (key) {\n            // Calculate value; take into account keys that calculate parent client width.\n            case 'left':\n            case 'maxWidth':\n            case 'minWidth':\n            case 'width':\n            case 'translateX':\n                results.value = parentClientWidth * (results.value / 100);\n                break;\n            // Calculate value; take into account keys that calculate parent client height.\n            case 'top':\n            case 'maxHeight':\n            case 'minHeight':\n            case 'height':\n            case 'translateY':\n                results.value = parentClientHeight * (results.value / 100);\n                break;\n            // Calculate value; convert percentage into degrees\n            case 'rotateX':\n            case 'rotateY':\n            case 'rotateZ':\n            case 'rotation':\n                results.value = 360 * (results.value / 100);\n                break;\n            default:\n                return false;\n        }\n        return this.#applyResultsValue(key, current, data, results);\n    }\n    /**\n     * Handles the `%~` unit type where values are adjusted against the current value for the given key.\n     *\n     * @param key - Animation key.\n     *\n     * @param current - Current value\n     *\n     * @param data - Source data to convert.\n     *\n     * @param results - Match results.\n     *\n     * @returns Adjustment successful.\n     */\n    static #handleRelativePercent(key, current, data, results) {\n        // Normalize percentage.\n        results.value = results.value / 100;\n        if (!results.operation) {\n            data[key] = current * results.value;\n            return true;\n        }\n        switch (results.operation) {\n            case '-=':\n                data[key] = current - (current * results.value);\n                break;\n            case '+=':\n                data[key] = current + (current * results.value);\n                break;\n            case '*=':\n                data[key] = current * (current * results.value);\n                break;\n            default:\n                return false;\n        }\n        return true;\n    }\n    /**\n     * Handles the `rad` / `turn` unit types for rotation animation keys.\n     *\n     * @param key - Animation key.\n     *\n     * @param current - Current value\n     *\n     * @param data - Source data to convert.\n     *\n     * @param results - Match results.\n     *\n     * @returns Adjustment successful.\n     */\n    static #handleRotationRadTurn(key, current, data, results) {\n        // Convert radians / turn into degrees.\n        switch (results.unit) {\n            case 'rad':\n                results.value = radToDeg(results.value);\n                break;\n            case 'turn':\n                results.value = 360 * results.value;\n                break;\n        }\n        return this.#applyResultsValue(key, current, data, results);\n    }\n}\n\n/**\n * Provides the output data for {@link TransformAPI.getData}.\n */\nclass TJSTransformData {\n    constructor() {\n        Object.seal(this);\n    }\n    /**\n     * Stores the calculated bounding rectangle.\n     */\n    #boundingRect = new DOMRect();\n    /**\n     * Stores the individual transformed corner points of the window in screen space clockwise from:\n     * top left -> top right -> bottom right -> bottom left.\n     */\n    #corners = [new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n    /**\n     * Stores the current gl-matrix Mat4 data.\n     */\n    #mat4 = new Mat4();\n    /**\n     * Stores the pre-origin & post-origin translations to apply to matrix transforms.\n     */\n    #originTranslations = [new Mat4(), new Mat4()];\n    /**\n     * @returns The bounding rectangle.\n     */\n    get boundingRect() { return this.#boundingRect; }\n    /**\n     * @returns The transformed corner points as Vec3 in screen space.\n     */\n    get corners() { return this.#corners; }\n    /**\n     * @returns Returns the CSS style string for the transform matrix.\n     */\n    get css() { return `matrix3d(${this.mat4.join(',')})`; }\n    /**\n     * @returns The transform matrix.\n     */\n    get mat4() { return this.#mat4; }\n    /**\n     * @returns The pre / post translation matrices for origin translation.\n     */\n    get originTranslations() { return this.#originTranslations; }\n}\n\n/**\n * Provides type guards for `Number`.\n */\nclass NumberGuard {\n    constructor() { }\n    static isFinite(value) {\n        return typeof value === 'number' && Number.isFinite(value);\n    }\n    static isFiniteOrNull(value) {\n        return value === null || (typeof value === 'number' && Number.isFinite(value));\n    }\n}\n\n/**\n * Caches computed styles of a {@link TJSPosition} target element.\n */\nclass TJSPositionStyleCache {\n    el;\n    computed;\n    marginLeft;\n    marginTop;\n    maxHeight;\n    maxWidth;\n    minHeight;\n    minWidth;\n    hasWillChange;\n    stores;\n    resizeObserved;\n    constructor() {\n        this.el = void 0;\n        this.computed = void 0;\n        this.marginLeft = void 0;\n        this.marginTop = void 0;\n        this.maxHeight = void 0;\n        this.maxWidth = void 0;\n        this.minHeight = void 0;\n        this.minWidth = void 0;\n        this.hasWillChange = false;\n        this.resizeObserved = Object.seal({\n            contentHeight: void 0,\n            contentWidth: void 0,\n            offsetHeight: void 0,\n            offsetWidth: void 0\n        });\n        /**\n         * Provides a writable store to track offset & content width / height from an associated `resizeObserver` action.\n         */\n        const storeResizeObserved = writable(this.resizeObserved);\n        this.stores = {\n            element: writable(this.el),\n            resizeContentHeight: propertyStore(storeResizeObserved, 'contentHeight'),\n            resizeContentWidth: propertyStore(storeResizeObserved, 'contentWidth'),\n            resizeObserved: storeResizeObserved,\n            resizeObservable: writable(false),\n            resizeOffsetHeight: propertyStore(storeResizeObserved, 'offsetHeight'),\n            resizeOffsetWidth: propertyStore(storeResizeObserved, 'offsetWidth')\n        };\n    }\n    /**\n     * Returns the cached offsetHeight from any attached `resizeObserver` action otherwise gets the offsetHeight from\n     * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n     * directly is more expensive and alters the execution order of an animation frame.\n     *\n     * @returns The element offsetHeight.\n     */\n    get offsetHeight() {\n        if (this.el !== void 0 && A11yHelper.isFocusTarget(this.el)) {\n            return this.resizeObserved.offsetHeight !== void 0 ? this.resizeObserved.offsetHeight : this.el.offsetHeight;\n        }\n        throw new Error(`TJSPositionStyleCache - get offsetHeight error: no element assigned.`);\n    }\n    /**\n     * Returns the cached offsetWidth from any attached `resizeObserver` action otherwise gets the offsetWidth from\n     * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n     * directly is more expensive and alters the execution order of an animation frame.\n     *\n     * @returns The element offsetHeight.\n     */\n    get offsetWidth() {\n        if (this.el !== void 0 && A11yHelper.isFocusTarget(this.el)) {\n            return this.resizeObserved.offsetWidth !== void 0 ? this.resizeObserved.offsetWidth : this.el.offsetWidth;\n        }\n        throw new Error(`TJSPositionStyleCache - get offsetWidth error: no element assigned.`);\n    }\n    /**\n     * @param el -\n     *\n     * @returns Does element match cached element.\n     */\n    hasData(el) { return this.el === el; }\n    /**\n     * Resets the style cache.\n     */\n    reset() {\n        // Remove will-change inline style from previous element if it is still connected.\n        if (this.el !== void 0 && A11yHelper.isFocusTarget(this.el) && this.el.isConnected && !this.hasWillChange) {\n            this.el.style.willChange = '';\n        }\n        this.el = void 0;\n        this.computed = void 0;\n        this.marginLeft = void 0;\n        this.marginTop = void 0;\n        this.maxHeight = void 0;\n        this.maxWidth = void 0;\n        this.minHeight = void 0;\n        this.minWidth = void 0;\n        this.hasWillChange = false;\n        // Silently reset `resizedObserved`; With proper usage the `resizeObserver` action issues an update on removal.\n        this.resizeObserved.contentHeight = void 0;\n        this.resizeObserved.contentWidth = void 0;\n        this.resizeObserved.offsetHeight = void 0;\n        this.resizeObserved.offsetWidth = void 0;\n        // Reset the tracked element this TJSPosition instance is modifying.\n        this.stores.element.set(void 0);\n    }\n    /**\n     * Updates the style cache with new data from the given element.\n     *\n     * @param el - An HTML element.\n     */\n    update(el) {\n        this.el = el;\n        this.computed = globalThis.getComputedStyle(el);\n        this.marginLeft = StyleParse.pixels(el.style.marginLeft) ?? StyleParse.pixels(this.computed.marginLeft);\n        this.marginTop = StyleParse.pixels(el.style.marginTop) ?? StyleParse.pixels(this.computed.marginTop);\n        this.maxHeight = StyleParse.pixels(el.style.maxHeight) ?? StyleParse.pixels(this.computed.maxHeight);\n        this.maxWidth = StyleParse.pixels(el.style.maxWidth) ?? StyleParse.pixels(this.computed.maxWidth);\n        // Note that the computed styles for below will always be 0px / 0 when no style is active.\n        this.minHeight = StyleParse.pixels(el.style.minHeight) ?? StyleParse.pixels(this.computed.minHeight);\n        this.minWidth = StyleParse.pixels(el.style.minWidth) ?? StyleParse.pixels(this.computed.minWidth);\n        // Tracks if there already is a will-change property on the inline or computed styles.\n        const willChange = el.style.willChange !== '' ? el.style.willChange : this.computed.willChange ?? '';\n        this.hasWillChange = willChange !== '' && willChange !== 'auto';\n        // Update the tracked element this TJSPosition instance is modifying.\n        this.stores.element.set(el);\n    }\n}\n\n/**\n *\n */\nclass TJSTransforms {\n    /**\n     * Stores transform data.\n     */\n    #data = {};\n    /**\n     * Stores the transform keys in the order added.\n     */\n    #orderList = [];\n    /**\n     * Defines the keys of TJSPositionData that are transform keys.\n     */\n    static #transformKeys = Object.freeze([\n        'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ'\n    ]);\n    /**\n     * Validates that a given key is a transform key.\n     *\n     * @param key - A potential transform key.\n     */\n    static #isTransformKey(key) {\n        return this.#transformKeys.includes(key);\n    }\n    /**\n     * Defines bitwise keys for transforms used in {@link TJSTransforms.getMat4}.\n     */\n    static #transformKeysBitwise = Object.freeze({\n        rotateX: 1,\n        rotateY: 2,\n        rotateZ: 4,\n        scale: 8,\n        translateX: 16,\n        translateY: 32,\n        translateZ: 64\n    });\n    /**\n     * Defines the default transform origin.\n     */\n    static #transformOriginDefault = 'top left';\n    /**\n     * Defines the valid transform origins.\n     */\n    static #transformOrigins = Object.freeze([\n        'top left', 'top center', 'top right', 'center left', 'center', 'center right', 'bottom left', 'bottom center',\n        'bottom right'\n    ]);\n    /**\n     * Defines a valid Set of transform origins.\n     */\n    static #transformOriginsSet = Object.freeze(new Set(this.#transformOrigins));\n    // Temporary variables --------------------------------------------------------------------------------------------\n    /**\n     */\n    static #mat4Result = new Mat4();\n    /**\n     */\n    static #mat4Temp = new Mat4();\n    /**\n     */\n    static #vec3Temp = new Vec3();\n    /**\n     */\n    static #vectorScale = [1, 1, 1];\n    /**\n     */\n    static #vectorTranslate = [0, 0, 0];\n    /**\n     * Returns a list of supported transform origins.\n     *\n     * @returns The supported transform origin strings.\n     */\n    static get transformOrigins() {\n        return this.#transformOrigins;\n    }\n    /**\n     * Returns whether the given string is a {@link TransformAPI.TransformOrigin}.\n     *\n     * @param origin - A potential transform origin string.\n     *\n     * @returns True if origin is a TransformOrigin string.\n     */\n    static isTransformOrigin(origin) {\n        return this.#transformOriginsSet.has(origin);\n    }\n    /**\n     * @returns Whether there are active transforms in local data.\n     */\n    get isActive() { return this.#orderList.length > 0; }\n    /**\n     * @returns Any local rotateX data.\n     */\n    get rotateX() { return this.#data.rotateX; }\n    /**\n     * @returns Any local rotateY data.\n     */\n    get rotateY() { return this.#data.rotateY; }\n    /**\n     * @returns Any local rotateZ data.\n     */\n    get rotateZ() { return this.#data.rotateZ; }\n    /**\n     * @returns Any local rotateZ scale.\n     */\n    get scale() { return this.#data.scale; }\n    /**\n     * @returns Any local translateZ data.\n     */\n    get translateX() { return this.#data.translateX; }\n    /**\n     * @returns Any local translateZ data.\n     */\n    get translateY() { return this.#data.translateY; }\n    /**\n     * @returns Any local translateZ data.\n     */\n    get translateZ() { return this.#data.translateZ; }\n    /**\n     * Sets the local rotateX data if the value is a finite number otherwise removes the local data.\n     *\n     * @param value - A value to set.\n     */\n    set rotateX(value) {\n        if (Number.isFinite(value)) {\n            if (this.#data.rotateX === void 0) {\n                this.#orderList.push('rotateX');\n            }\n            this.#data.rotateX = value;\n        }\n        else {\n            if (this.#data.rotateX !== void 0) {\n                const index = this.#orderList.findIndex((entry) => entry === 'rotateX');\n                if (index >= 0) {\n                    this.#orderList.splice(index, 1);\n                }\n            }\n            delete this.#data.rotateX;\n        }\n    }\n    /**\n     * Sets the local rotateY data if the value is a finite number otherwise removes the local data.\n     *\n     * @param value - A value to set.\n     */\n    set rotateY(value) {\n        if (Number.isFinite(value)) {\n            if (this.#data.rotateY === void 0) {\n                this.#orderList.push('rotateY');\n            }\n            this.#data.rotateY = value;\n        }\n        else {\n            if (this.#data.rotateY !== void 0) {\n                const index = this.#orderList.findIndex((entry) => entry === 'rotateY');\n                if (index >= 0) {\n                    this.#orderList.splice(index, 1);\n                }\n            }\n            delete this.#data.rotateY;\n        }\n    }\n    /**\n     * Sets the local rotateZ data if the value is a finite number otherwise removes the local data.\n     *\n     * @param value - A value to set.\n     */\n    set rotateZ(value) {\n        if (Number.isFinite(value)) {\n            if (this.#data.rotateZ === void 0) {\n                this.#orderList.push('rotateZ');\n            }\n            this.#data.rotateZ = value;\n        }\n        else {\n            if (this.#data.rotateZ !== void 0) {\n                const index = this.#orderList.findIndex((entry) => entry === 'rotateZ');\n                if (index >= 0) {\n                    this.#orderList.splice(index, 1);\n                }\n            }\n            delete this.#data.rotateZ;\n        }\n    }\n    /**\n     * Sets the local scale data if the value is a finite number otherwise removes the local data.\n     *\n     * @param value - A value to set.\n     */\n    set scale(value) {\n        if (Number.isFinite(value)) {\n            if (this.#data.scale === void 0) {\n                this.#orderList.push('scale');\n            }\n            this.#data.scale = value;\n        }\n        else {\n            if (this.#data.scale !== void 0) {\n                const index = this.#orderList.findIndex((entry) => entry === 'scale');\n                if (index >= 0) {\n                    this.#orderList.splice(index, 1);\n                }\n            }\n            delete this.#data.scale;\n        }\n    }\n    /**\n     * Sets the local translateX data if the value is a finite number otherwise removes the local data.\n     *\n     * @param value - A value to set.\n     */\n    set translateX(value) {\n        if (Number.isFinite(value)) {\n            if (this.#data.translateX === void 0) {\n                this.#orderList.push('translateX');\n            }\n            this.#data.translateX = value;\n        }\n        else {\n            if (this.#data.translateX !== void 0) {\n                const index = this.#orderList.findIndex((entry) => entry === 'translateX');\n                if (index >= 0) {\n                    this.#orderList.splice(index, 1);\n                }\n            }\n            delete this.#data.translateX;\n        }\n    }\n    /**\n     * Sets the local translateY data if the value is a finite number otherwise removes the local data.\n     *\n     * @param value - A value to set.\n     */\n    set translateY(value) {\n        if (Number.isFinite(value)) {\n            if (this.#data.translateY === void 0) {\n                this.#orderList.push('translateY');\n            }\n            this.#data.translateY = value;\n        }\n        else {\n            if (this.#data.translateY !== void 0) {\n                const index = this.#orderList.findIndex((entry) => entry === 'translateY');\n                if (index >= 0) {\n                    this.#orderList.splice(index, 1);\n                }\n            }\n            delete this.#data.translateY;\n        }\n    }\n    /**\n     * Sets the local translateZ data if the value is a finite number otherwise removes the local data.\n     *\n     * @param value - A value to set.\n     */\n    set translateZ(value) {\n        if (Number.isFinite(value)) {\n            if (this.#data.translateZ === void 0) {\n                this.#orderList.push('translateZ');\n            }\n            this.#data.translateZ = value;\n        }\n        else {\n            if (this.#data.translateZ !== void 0) {\n                const index = this.#orderList.findIndex((entry) => entry === 'translateZ');\n                if (index >= 0) {\n                    this.#orderList.splice(index, 1);\n                }\n            }\n            delete this.#data.translateZ;\n        }\n    }\n    /**\n     * Returns the `matrix3d` CSS transform for the given position / transform data.\n     *\n     * @param [data] - Optional position data otherwise use local stored transform data.\n     *\n     * @returns The CSS `matrix3d` string.\n     */\n    getCSS(data = this.#data) {\n        return `matrix3d(${this.getMat4(data, TJSTransforms.#mat4Result).join(',')})`;\n    }\n    /**\n     * Returns the `matrix3d` CSS transform for the given position / transform data.\n     *\n     * @param [data] - Optional position data otherwise use local stored transform data.\n     *\n     * @returns The CSS `matrix3d` string.\n     */\n    getCSSOrtho(data = this.#data) {\n        return `matrix3d(${this.getMat4Ortho(data, TJSTransforms.#mat4Result).join(',')})`;\n    }\n    /**\n     * Collects all data including a bounding rect, transform matrix, and points array of the given\n     * {@link TJSPositionData} instance with the applied local transform data.\n     *\n     * @param position - The position data to process.\n     *\n     * @param [output] - Optional TJSTransformData output instance.\n     *\n     * @param [validationData] - Optional validation data for adjustment parameters.\n     *\n     * @returns The output TJSTransformData instance.\n     */\n    getData(position, output = new TJSTransformData(), validationData) {\n        const valWidth = validationData?.width ?? 0;\n        const valHeight = validationData?.height ?? 0;\n        const valOffsetTop = validationData?.offsetTop ?? validationData?.marginTop ?? 0;\n        const valOffsetLeft = validationData?.offsetLeft ?? validationData?.marginLeft ?? 0;\n        position.top += valOffsetTop;\n        position.left += valOffsetLeft;\n        const width = NumberGuard.isFinite(position.width) ? position.width : valWidth;\n        const height = NumberGuard.isFinite(position.height) ? position.height : valHeight;\n        const rect = output.corners;\n        if (this.hasTransform(position)) {\n            rect[0][0] = rect[0][1] = rect[0][2] = 0;\n            rect[1][0] = width;\n            rect[1][1] = rect[1][2] = 0;\n            rect[2][0] = width;\n            rect[2][1] = height;\n            rect[2][2] = 0;\n            rect[3][0] = 0;\n            rect[3][1] = height;\n            rect[3][2] = 0;\n            const matrix = this.getMat4(position, output.mat4);\n            const translate = TJSTransforms.#getOriginTranslation(position.transformOrigin, width, height, output.originTranslations);\n            if (TJSTransforms.#transformOriginDefault === position.transformOrigin) {\n                Vec3.transformMat4(rect[0], rect[0], matrix);\n                Vec3.transformMat4(rect[1], rect[1], matrix);\n                Vec3.transformMat4(rect[2], rect[2], matrix);\n                Vec3.transformMat4(rect[3], rect[3], matrix);\n            }\n            else {\n                Vec3.transformMat4(rect[0], rect[0], translate[0]);\n                Vec3.transformMat4(rect[0], rect[0], matrix);\n                Vec3.transformMat4(rect[0], rect[0], translate[1]);\n                Vec3.transformMat4(rect[1], rect[1], translate[0]);\n                Vec3.transformMat4(rect[1], rect[1], matrix);\n                Vec3.transformMat4(rect[1], rect[1], translate[1]);\n                Vec3.transformMat4(rect[2], rect[2], translate[0]);\n                Vec3.transformMat4(rect[2], rect[2], matrix);\n                Vec3.transformMat4(rect[2], rect[2], translate[1]);\n                Vec3.transformMat4(rect[3], rect[3], translate[0]);\n                Vec3.transformMat4(rect[3], rect[3], matrix);\n                Vec3.transformMat4(rect[3], rect[3], translate[1]);\n            }\n            rect[0][0] = position.left + rect[0][0];\n            rect[0][1] = position.top + rect[0][1];\n            rect[1][0] = position.left + rect[1][0];\n            rect[1][1] = position.top + rect[1][1];\n            rect[2][0] = position.left + rect[2][0];\n            rect[2][1] = position.top + rect[2][1];\n            rect[3][0] = position.left + rect[3][0];\n            rect[3][1] = position.top + rect[3][1];\n        }\n        else {\n            rect[0][0] = position.left;\n            rect[0][1] = position.top;\n            rect[1][0] = position.left + width;\n            rect[1][1] = position.top;\n            rect[2][0] = position.left + width;\n            rect[2][1] = position.top + height;\n            rect[3][0] = position.left;\n            rect[3][1] = position.top + height;\n            Mat4.identity(output.mat4);\n        }\n        let maxX = Number.MIN_SAFE_INTEGER;\n        let maxY = Number.MIN_SAFE_INTEGER;\n        let minX = Number.MAX_SAFE_INTEGER;\n        let minY = Number.MAX_SAFE_INTEGER;\n        for (let cntr = 4; --cntr >= 0;) {\n            if (rect[cntr][0] > maxX) {\n                maxX = rect[cntr][0];\n            }\n            if (rect[cntr][0] < minX) {\n                minX = rect[cntr][0];\n            }\n            if (rect[cntr][1] > maxY) {\n                maxY = rect[cntr][1];\n            }\n            if (rect[cntr][1] < minY) {\n                minY = rect[cntr][1];\n            }\n        }\n        const boundingRect = output.boundingRect;\n        boundingRect.x = minX;\n        boundingRect.y = minY;\n        boundingRect.width = maxX - minX;\n        boundingRect.height = maxY - minY;\n        position.top -= valOffsetTop;\n        position.left -= valOffsetLeft;\n        return output;\n    }\n    /**\n     * Creates a transform matrix based on local data applied in order it was added.\n     *\n     * If no data object is provided then the source is the local transform data. If another data object is supplied\n     * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n     * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n     *\n     * @param [data] - TJSPositionData instance or local transform data.\n     *\n     * @param [output] - The output mat4 instance.\n     *\n     * @returns Transform matrix.\n     */\n    getMat4(data = this.#data, output = new Mat4()) {\n        const matrix = Mat4.identity(output);\n        // Bitwise tracks applied transform keys from local transform data.\n        let seenKeys = 0;\n        const orderList = this.#orderList;\n        // First apply ordered transforms from local transform data.\n        for (let cntr = 0; cntr < orderList.length; cntr++) {\n            const key = orderList[cntr];\n            switch (key) {\n                case 'rotateX':\n                    seenKeys |= TJSTransforms.#transformKeysBitwise.rotateX;\n                    Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\n                    break;\n                case 'rotateY':\n                    seenKeys |= TJSTransforms.#transformKeysBitwise.rotateY;\n                    Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\n                    break;\n                case 'rotateZ':\n                    seenKeys |= TJSTransforms.#transformKeysBitwise.rotateZ;\n                    Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\n                    break;\n                case 'scale':\n                    seenKeys |= TJSTransforms.#transformKeysBitwise.scale;\n                    TJSTransforms.#vectorScale[0] = TJSTransforms.#vectorScale[1] = data[key] ?? 0;\n                    Mat4.multiply(matrix, matrix, Mat4.fromScaling(TJSTransforms.#mat4Temp, TJSTransforms.#vectorScale));\n                    break;\n                case 'translateX':\n                    seenKeys |= TJSTransforms.#transformKeysBitwise.translateX;\n                    TJSTransforms.#vectorTranslate[0] = data.translateX ?? 0;\n                    TJSTransforms.#vectorTranslate[1] = 0;\n                    TJSTransforms.#vectorTranslate[2] = 0;\n                    Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n                    break;\n                case 'translateY':\n                    seenKeys |= TJSTransforms.#transformKeysBitwise.translateY;\n                    TJSTransforms.#vectorTranslate[0] = 0;\n                    TJSTransforms.#vectorTranslate[1] = data.translateY ?? 0;\n                    TJSTransforms.#vectorTranslate[2] = 0;\n                    Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n                    break;\n                case 'translateZ':\n                    seenKeys |= TJSTransforms.#transformKeysBitwise.translateZ;\n                    TJSTransforms.#vectorTranslate[0] = 0;\n                    TJSTransforms.#vectorTranslate[1] = 0;\n                    TJSTransforms.#vectorTranslate[2] = data.translateZ ?? 0;\n                    Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n                    break;\n            }\n        }\n        // Now apply any new keys not set in local transform data that have not been applied yet.\n        if (data !== this.#data) {\n            for (let cntr = 0; cntr < TJSTransforms.#transformKeys.length; cntr++) {\n                const key = TJSTransforms.#transformKeys[cntr];\n                // Reject bad / no data or if the key has already been applied.\n                if (data[key] === null || (seenKeys & TJSTransforms.#transformKeysBitwise[key]) > 0) {\n                    continue;\n                }\n                const value = data[key];\n                switch (key) {\n                    case 'rotateX':\n                        Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(value)));\n                        break;\n                    case 'rotateY':\n                        Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(value)));\n                        break;\n                    case 'rotateZ':\n                        Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(value)));\n                        break;\n                    case 'scale':\n                        TJSTransforms.#vectorScale[0] = TJSTransforms.#vectorScale[1] = value;\n                        Mat4.multiply(matrix, matrix, Mat4.fromScaling(TJSTransforms.#mat4Temp, TJSTransforms.#vectorScale));\n                        break;\n                    case 'translateX':\n                        TJSTransforms.#vectorTranslate[0] = value;\n                        TJSTransforms.#vectorTranslate[1] = 0;\n                        TJSTransforms.#vectorTranslate[2] = 0;\n                        Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n                        break;\n                    case 'translateY':\n                        TJSTransforms.#vectorTranslate[0] = 0;\n                        TJSTransforms.#vectorTranslate[1] = value;\n                        TJSTransforms.#vectorTranslate[2] = 0;\n                        Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n                        break;\n                    case 'translateZ':\n                        TJSTransforms.#vectorTranslate[0] = 0;\n                        TJSTransforms.#vectorTranslate[1] = 0;\n                        TJSTransforms.#vectorTranslate[2] = value;\n                        Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n                        break;\n                }\n            }\n        }\n        return matrix;\n    }\n    /**\n     * Provides an orthographic enhancement to convert left / top positional data to a translate operation.\n     *\n     * This transform matrix takes into account that the remaining operations are , but adds any left / top attributes\n     * from passed in data to translate X / Y.\n     *\n     * If no data object is provided then the source is the local transform data. If another data object is supplied\n     * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n     * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n     *\n     * @param [data] - TJSPositionData instance or local transform data.\n     *\n     * @param [output] - The output mat4 instance.\n     *\n     * @returns Transform matrix.\n     */\n    getMat4Ortho(data = this.#data, output = new Mat4()) {\n        const matrix = Mat4.identity(output);\n        // Attempt to retrieve values from passed in data otherwise default to 0.\n        // Always perform the translation last regardless of order added to local transform data.\n        // Add data.left to translateX and data.top to translateY.\n        TJSTransforms.#vectorTranslate[0] = (data.left ?? 0) + (data.translateX ?? 0);\n        TJSTransforms.#vectorTranslate[1] = (data.top ?? 0) + (data.translateY ?? 0);\n        TJSTransforms.#vectorTranslate[2] = data.translateZ ?? 0;\n        Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n        // Scale can also be applied out of order.\n        if (data.scale !== null && data.scale !== void 0) {\n            TJSTransforms.#vectorScale[0] = TJSTransforms.#vectorScale[1] = data.scale;\n            Mat4.multiply(matrix, matrix, Mat4.fromScaling(TJSTransforms.#mat4Temp, TJSTransforms.#vectorScale));\n        }\n        // Early out if there is no rotation data.\n        if (data.rotateX === null && data.rotateY === null && data.rotateZ === null) {\n            return matrix;\n        }\n        // Rotation transforms must be applied in the order they are added.\n        // Bitwise tracks applied transform keys from local transform data.\n        let seenKeys = 0;\n        const orderList = this.#orderList;\n        // First apply ordered transforms from local transform data.\n        for (let cntr = 0; cntr < orderList.length; cntr++) {\n            const key = orderList[cntr];\n            switch (key) {\n                case 'rotateX':\n                    seenKeys |= TJSTransforms.#transformKeysBitwise.rotateX;\n                    Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\n                    break;\n                case 'rotateY':\n                    seenKeys |= TJSTransforms.#transformKeysBitwise.rotateY;\n                    Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\n                    break;\n                case 'rotateZ':\n                    seenKeys |= TJSTransforms.#transformKeysBitwise.rotateZ;\n                    Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\n                    break;\n            }\n        }\n        // Now apply any new keys not set in local transform data that have not been applied yet.\n        if (data !== this.#data) {\n            for (let cntr = 0; cntr < TJSTransforms.#transformKeys.length; cntr++) {\n                const key = TJSTransforms.#transformKeys[cntr];\n                // Reject bad / no data or if the key has already been applied.\n                if (data[key] === null || (seenKeys & TJSTransforms.#transformKeysBitwise[key]) > 0) {\n                    continue;\n                }\n                switch (key) {\n                    case 'rotateX':\n                        Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\n                        break;\n                    case 'rotateY':\n                        Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\n                        break;\n                    case 'rotateZ':\n                        Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\n                        break;\n                }\n            }\n        }\n        return matrix;\n    }\n    /**\n     * Tests an object if it contains transform keys and the values are finite numbers.\n     *\n     * @param data - An object to test for transform data.\n     *\n     * @returns Whether the given TJSPositionData has transforms.\n     */\n    hasTransform(data) {\n        for (const key of TJSTransforms.#transformKeys) {\n            if (Number.isFinite(data[key])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Resets internal data from the given object containing valid transform keys.\n     *\n     * @param data - An object with transform data.\n     */\n    reset(data) {\n        for (const key in data) {\n            if (TJSTransforms.#isTransformKey(key)) {\n                const value = data[key];\n                if (NumberGuard.isFinite(value)) {\n                    this.#data[key] = value;\n                }\n                else {\n                    const index = this.#orderList.findIndex((entry) => entry === key);\n                    if (index >= 0) {\n                        this.#orderList.splice(index, 1);\n                    }\n                    delete this.#data[key];\n                }\n            }\n        }\n    }\n    // Internal implementation ----------------------------------------------------------------------------------------\n    /**\n     * Returns the translations necessary to translate a matrix operation based on the `transformOrigin` parameter of the\n     * given position instance. The first entry / index 0 is the pre-translation and last entry / index 1 is the post-\n     * translation.\n     *\n     * This method is used internally, but may be useful if you need the origin translation matrices to transform\n     * bespoke points based on any `transformOrigin` set in {@link TJSPositionData}.\n     *\n     * @param transformOrigin - The transform origin attribute from TJSPositionData.\n     *\n     * @param width - The TJSPositionData width or validation data width when 'auto'.\n     *\n     * @param height - The TJSPositionData height or validation data height when 'auto'.\n     *\n     * @param output - Output Mat4 array.\n     *\n     * @returns Output Mat4 array.\n     */\n    static #getOriginTranslation(transformOrigin, width, height, output) {\n        const vector = TJSTransforms.#vec3Temp;\n        switch (transformOrigin) {\n            case 'top left':\n                vector[0] = vector[1] = 0;\n                Mat4.fromTranslation(output[0], vector);\n                Mat4.fromTranslation(output[1], vector);\n                break;\n            case 'top center':\n                vector[0] = -width * 0.5;\n                vector[1] = 0;\n                Mat4.fromTranslation(output[0], vector);\n                vector[0] = width * 0.5;\n                Mat4.fromTranslation(output[1], vector);\n                break;\n            case 'top right':\n                vector[0] = -width;\n                vector[1] = 0;\n                Mat4.fromTranslation(output[0], vector);\n                vector[0] = width;\n                Mat4.fromTranslation(output[1], vector);\n                break;\n            case 'center left':\n                vector[0] = 0;\n                vector[1] = -height * 0.5;\n                Mat4.fromTranslation(output[0], vector);\n                vector[1] = height * 0.5;\n                Mat4.fromTranslation(output[1], vector);\n                break;\n            // By default, null / no transform is 'center'.\n            case null:\n            case 'center':\n                vector[0] = -width * 0.5;\n                vector[1] = -height * 0.5;\n                Mat4.fromTranslation(output[0], vector);\n                vector[0] = width * 0.5;\n                vector[1] = height * 0.5;\n                Mat4.fromTranslation(output[1], vector);\n                break;\n            case 'center right':\n                vector[0] = -width;\n                vector[1] = -height * 0.5;\n                Mat4.fromTranslation(output[0], vector);\n                vector[0] = width;\n                vector[1] = height * 0.5;\n                Mat4.fromTranslation(output[1], vector);\n                break;\n            case 'bottom left':\n                vector[0] = 0;\n                vector[1] = -height;\n                Mat4.fromTranslation(output[0], vector);\n                vector[1] = height;\n                Mat4.fromTranslation(output[1], vector);\n                break;\n            case 'bottom center':\n                vector[0] = -width * 0.5;\n                vector[1] = -height;\n                Mat4.fromTranslation(output[0], vector);\n                vector[0] = width * 0.5;\n                vector[1] = height;\n                Mat4.fromTranslation(output[1], vector);\n                break;\n            case 'bottom right':\n                vector[0] = -width;\n                vector[1] = -height;\n                Mat4.fromTranslation(output[0], vector);\n                vector[0] = width;\n                vector[1] = height;\n                Mat4.fromTranslation(output[1], vector);\n                break;\n            // No valid transform origin parameter; set identity.\n            default:\n                Mat4.identity(output[0]);\n                Mat4.identity(output[1]);\n                break;\n        }\n        return output;\n    }\n}\n\nclass AnimationScheduler {\n    /**\n     * Used to copy data from a TJSPosition instance.\n     */\n    static #data = {};\n    static #getEaseOptions = Object.freeze({ default: false });\n    /**\n     * Adds / schedules an animation w/ the AnimationManager. This contains the final steps common to all tweens.\n     *\n     * @param position -\n     *\n     * @param initial -\n     *\n     * @param destination -\n     *\n     * @param duration -\n     *\n     * @param el -\n     *\n     * @param delay -\n     *\n     * @param ease -\n     *\n     * @param [interpolate=lerp] -\n     *\n     * @param [transformOrigin] -\n     *\n     * @param [transformOriginInitial] -\n     *\n     * @param [cleanup] -\n     *\n     * @returns An AnimationControl instance or null if none created.\n     */\n    static #addAnimation(position, initial, destination, duration, el, delay, ease, interpolate = lerp, transformOrigin, transformOriginInitial, cleanup) {\n        // Set initial data for transform values that are often null by default.\n        TJSPositionDataUtil.setNumericDefaults(initial);\n        TJSPositionDataUtil.setNumericDefaults(destination);\n        // Reject all initial data that is not a number.\n        for (const key in initial) {\n            if (!Number.isFinite(initial[key])) {\n                delete initial[key];\n            }\n        }\n        const keys = Object.keys(initial);\n        const newData = Object.assign({}, initial);\n        // Nothing to animate, so return now.\n        // TODO handle in respective animation controls.\n        if (keys.length === 0) {\n            return null;\n        }\n        /**\n         */\n        const animationData = {\n            active: true,\n            cleanup,\n            cancelled: false,\n            control: void 0,\n            current: 0,\n            destination,\n            duration: duration * 1000, // Internally the AnimationManager works in ms.\n            ease,\n            el,\n            finished: false,\n            initial,\n            interpolate,\n            keys,\n            newData,\n            position,\n            resolve: void 0,\n            start: void 0,\n            transformOrigin,\n            transformOriginInitial,\n            quickTo: false\n        };\n        if (delay > 0) {\n            animationData.active = false;\n            // Delay w/ setTimeout and make active w/ AnimationManager.\n            setTimeout(() => animationData.active = true, delay * 1000);\n        }\n        // Schedule immediately w/ AnimationManager\n        AnimationManager.add(animationData);\n        // Create animation control\n        return new AnimationControl(animationData, true);\n    }\n    /**\n     * Provides a tween from given position data to the current position.\n     *\n     * @param position - The target position instance.\n     *\n     * @param fromData - The starting position.\n     *\n     * @param options - Tween options.\n     *\n     * @param [cleanup] - Custom animation cleanup function.\n     *\n     * @returns An AnimationControl instance or null if none created.\n     */\n    static from(position, fromData, options = {}, cleanup) {\n        if (!isObject(fromData)) {\n            throw new TypeError(`AnimationAPI.from error: 'fromData' is not an object.`);\n        }\n        // TJSPositionNS.PositionParent\n        const parent = position.parent;\n        // Early out if the application is not positionable.  TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n        if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable) {\n            return null;\n        }\n        let { delay = 0, duration = 1, ease = 'cubicOut', strategy, transformOrigin } = options;\n        // Handle any defined scheduling strategy.\n        if (strategy !== void 0) {\n            if (this.#handleStrategy(position, strategy) === null) {\n                return null;\n            }\n        }\n        // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n        const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n        const el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl :\n            void 0;\n        if (!Number.isFinite(delay) || delay < 0) {\n            throw new TypeError(`AnimationScheduler.from error: 'delay' is not a positive number.`);\n        }\n        if (!Number.isFinite(duration) || duration < 0) {\n            throw new TypeError(`AnimationScheduler.from error: 'duration' is not a positive number.`);\n        }\n        ease = getEasingFunc(ease, this.#getEaseOptions);\n        if (typeof ease !== 'function') {\n            throw new TypeError(`AnimationScheduler.from error: 'ease' is not a function or valid Svelte easing function name.`);\n        }\n        // TODO: In the future potentially support more interpolation functions besides `lerp`.\n        const initial = {};\n        const destination = {};\n        position.get(this.#data);\n        // Determine if any transform origin for the animation is valid.\n        transformOrigin = TJSTransforms.isTransformOrigin(transformOrigin) ? transformOrigin : void 0;\n        // Given a valid transform origin store the initial transform origin to be restored.\n        const transformOriginInitial = transformOrigin !== void 0 ?\n            this.#data.transformOrigin : void 0;\n        // Set initial data if the key / data is defined and the end position is not equal to current data.\n        for (const key in fromData) {\n            // Must use actual key from any aliases.\n            const animKey = TJSPositionDataUtil.getAnimationKey(key);\n            if (this.#data[animKey] !== void 0 && fromData[key] !== this.#data[animKey]) {\n                initial[key] = fromData[key];\n                destination[key] = this.#data[animKey];\n            }\n        }\n        ConvertStringData.process(initial, this.#data, el);\n        return this.#addAnimation(position, initial, destination, duration, el, delay, ease, lerp, transformOrigin, transformOriginInitial, cleanup);\n    }\n    /**\n     * Provides a tween from given position data to the given position.\n     *\n     * @param position - The target position instance.\n     *\n     * @param fromData - The starting position.\n     *\n     * @param toData - The ending position.\n     *\n     * @param options - Tween options.\n     *\n     * @param [cleanup] - Custom animation cleanup function.\n     *\n     * @returns An AnimationControl instance or null if none created.\n     */\n    static fromTo(position, fromData, toData, options = {}, cleanup) {\n        if (!isObject(fromData)) {\n            throw new TypeError(`AnimationScheduler.fromTo error: 'fromData' is not an object.`);\n        }\n        if (!isObject(toData)) {\n            throw new TypeError(`AnimationScheduler.fromTo error: 'toData' is not an object.`);\n        }\n        // TJSPositionNS.PositionParent\n        const parent = position.parent;\n        // Early out if the application is not positionable.  TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n        if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable) {\n            return null;\n        }\n        let { delay = 0, duration = 1, ease = 'cubicOut', strategy, transformOrigin } = options;\n        // Handle any defined scheduling strategy.\n        if (strategy !== void 0) {\n            if (this.#handleStrategy(position, strategy) === null) {\n                return null;\n            }\n        }\n        // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n        const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n        const el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl :\n            void 0;\n        if (!Number.isFinite(delay) || delay < 0) {\n            throw new TypeError(`AnimationScheduler.fromTo error: 'delay' is not a positive number.`);\n        }\n        if (!Number.isFinite(duration) || duration < 0) {\n            throw new TypeError(`AnimationScheduler.fromTo error: 'duration' is not a positive number.`);\n        }\n        ease = getEasingFunc(ease, this.#getEaseOptions);\n        if (typeof ease !== 'function') {\n            throw new TypeError(`AnimationScheduler.fromTo error: 'ease' is not a function or valid Svelte easing function name.`);\n        }\n        // TODO: In the future potentially support more interpolation functions besides `lerp`.\n        const initial = {};\n        const destination = {};\n        position.get(this.#data);\n        // Determine if any transform origin for the animation is valid.\n        transformOrigin = TJSTransforms.isTransformOrigin(transformOrigin) ? transformOrigin : void 0;\n        // Given a valid transform origin store the initial transform origin to be restored.\n        const transformOriginInitial = transformOrigin !== void 0 ?\n            this.#data.transformOrigin : void 0;\n        // Set initial data if the key / data is defined and the end position is not equal to current data.\n        for (const key in fromData) {\n            if (toData[key] === void 0) {\n                console.warn(`AnimationScheduler.fromTo warning: skipping key ('${key}') from 'fromData' as it is missing in 'toData'.`);\n                continue;\n            }\n            // Must use actual key from any aliases.\n            const animKey = TJSPositionDataUtil.getAnimationKey(key);\n            if (this.#data[animKey] !== void 0) {\n                initial[key] = fromData[key];\n                destination[key] = toData[key];\n            }\n        }\n        ConvertStringData.process(initial, this.#data, el);\n        ConvertStringData.process(destination, this.#data, el);\n        return this.#addAnimation(position, initial, destination, duration, el, delay, ease, lerp, transformOrigin, transformOriginInitial, cleanup);\n    }\n    /**\n     * Provides a tween to given position data from the current position.\n     *\n     * @param position - The target position instance.\n     *\n     * @param toData - The destination position.\n     *\n     * @param options - Tween options.\n     *\n     * @param [cleanup] - Custom animation cleanup function.\n     *\n     * @returns An AnimationControl instance or null if none created.\n     */\n    static to(position, toData, options, cleanup) {\n        if (!isObject(toData)) {\n            throw new TypeError(`AnimationScheduler.to error: 'toData' is not an object.`);\n        }\n        // TJSPositionNS.PositionParent\n        const parent = position.parent;\n        // Early out if the application is not positionable.  TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n        if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable) {\n            return null;\n        }\n        let { delay = 0, duration = 1, ease = 'cubicOut', strategy, transformOrigin } = options;\n        // Handle any defined scheduling strategy.\n        if (strategy !== void 0) {\n            if (this.#handleStrategy(position, strategy) === null) {\n                return null;\n            }\n        }\n        // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n        const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n        const el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\n        if (!Number.isFinite(delay) || delay < 0) {\n            throw new TypeError(`AnimationScheduler.to error: 'delay' is not a positive number.`);\n        }\n        if (!Number.isFinite(duration) || duration < 0) {\n            throw new TypeError(`AnimationScheduler.to error: 'duration' is not a positive number.`);\n        }\n        ease = getEasingFunc(ease, this.#getEaseOptions);\n        if (typeof ease !== 'function') {\n            throw new TypeError(`AnimationScheduler.to error: 'ease' is not a function or valid Svelte easing function name.`);\n        }\n        // TODO: In the future potentially support more interpolation functions besides `lerp`.\n        const initial = {};\n        const destination = {};\n        position.get(this.#data);\n        // Determine if any transform origin for the animation is valid.\n        transformOrigin = TJSTransforms.isTransformOrigin(transformOrigin) ? transformOrigin : void 0;\n        // Given a valid transform origin store the initial transform origin to be restored.\n        const transformOriginInitial = transformOrigin !== void 0 ?\n            this.#data.transformOrigin : void 0;\n        // Set initial data if the key / data is defined and the end position is not equal to current data.\n        for (const key in toData) {\n            // Must use actual key from any aliases.\n            const animKey = TJSPositionDataUtil.getAnimationKey(key);\n            if (this.#data[animKey] !== void 0 && toData[key] !== this.#data[animKey]) {\n                destination[key] = toData[key];\n                initial[key] = this.#data[animKey];\n            }\n        }\n        ConvertStringData.process(destination, this.#data, el);\n        return this.#addAnimation(position, initial, destination, duration, el, delay, ease, lerp, transformOrigin, transformOriginInitial, cleanup);\n    }\n    // Internal implementation ----------------------------------------------------------------------------------------\n    /**\n     * Handle any defined scheduling strategy allowing existing scheduled animations for the same position instance\n     * to be controlled.\n     *\n     * @param position - The target position instance.\n     *\n     * @param strategy - A scheduling strategy to apply.\n     *\n     * @returns Returns null to abort scheduling current animation.\n     */\n    static #handleStrategy(position, strategy) {\n        switch (strategy) {\n            case 'cancel':\n                if (AnimationManager.isScheduled(position)) {\n                    AnimationManager.cancel(position);\n                }\n                break;\n            case 'cancelAll':\n                if (AnimationManager.isScheduled(position)) {\n                    AnimationManager.cancel(position, AnimationManager.cancelAllFn);\n                }\n                break;\n            case 'exclusive':\n                if (AnimationManager.isScheduled(position)) {\n                    return null;\n                }\n                break;\n            default:\n                console.warn(`AnimationScheduler error: 'strategy' is not 'cancel', 'cancelAll', or 'exclusive'.`);\n                return null;\n        }\n    }\n}\n\n/**\n */\nclass AnimationAPIImpl {\n    static #getEaseOptions = Object.freeze({ default: false });\n    /**\n     */\n    #data;\n    #position;\n    /**\n     * @param position -\n     *\n     * @param data -\n     */\n    constructor(position, data) {\n        this.#position = position;\n        this.#data = data;\n        Object.seal(this);\n    }\n    /**\n     * Returns if there are scheduled animations whether active or pending for this TJSPosition instance.\n     *\n     * @returns Are there scheduled animations.\n     */\n    get isScheduled() {\n        return AnimationManager.isScheduled(this.#position);\n    }\n    /**\n     * Cancels all animation instances for this TJSPosition instance.\n     */\n    cancel() {\n        AnimationManager.cancel(this.#position, AnimationManager.cancelAllFn);\n    }\n    /**\n     * Returns all currently scheduled AnimationControl instances for this TJSPosition instance.\n     *\n     * @returns All currently scheduled animation controls for this TJSPosition instance.\n     */\n    getScheduled() {\n        return AnimationManager.getScheduled(this.#position);\n    }\n    /**\n     * Provides a tween from given position data to the current position.\n     *\n     * @param fromData - The starting position.\n     *\n     * @param [options] - Optional tween parameters.\n     *\n     * @returns A control object that can cancel animation and provides a `finished` Promise.\n     */\n    from(fromData, options) {\n        const animationControl = AnimationScheduler.from(this.#position, fromData, options);\n        return animationControl ? animationControl : AnimationControl.voidControl;\n    }\n    /**\n     * Provides a tween from given position data to the given position.\n     *\n     * @param fromData - The starting position.\n     *\n     * @param toData - The ending position.\n     *\n     * @param [options] - Optional tween parameters.\n     *\n     * @returns A control object that can cancel animation and provides a `finished` Promise.\n     */\n    fromTo(fromData, toData, options) {\n        const animationControl = AnimationScheduler.fromTo(this.#position, fromData, toData, options);\n        return animationControl ? animationControl : AnimationControl.voidControl;\n    }\n    /**\n     * Provides a tween to given position data from the current position.\n     *\n     * @param toData - The destination position.\n     *\n     * @param [options] - Optional tween parameters.\n     *\n     * @returns A control object that can cancel animation and provides a `finished` Promise.\n     */\n    to(toData, options) {\n        const animationControl = AnimationScheduler.to(this.#position, toData, options);\n        return animationControl ? animationControl : AnimationControl.voidControl;\n    }\n    /**\n     * Returns a function that provides an optimized way to constantly update a to-tween.\n     *\n     * @param keys - The keys for quickTo.\n     *\n     * @param [options] - Optional quick tween parameters.\n     *\n     * @returns quick-to tween function.\n     */\n    quickTo(keys, options = {}) {\n        if (!isIterable(keys)) {\n            throw new TypeError(`AnimationAPI.quickTo error: 'keys' is not an iterable list.`);\n        }\n        // TJSPosition.PositionParent\n        const parent = this.#position.parent;\n        // Early out if the application is not positionable.\n        if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable) {\n            throw new Error(`AnimationAPI.quickTo error: 'parent' is not positionable.`);\n        }\n        let { duration = 1, ease = 'cubicOut' } = options;\n        if (!Number.isFinite(duration) || duration < 0) {\n            throw new TypeError(`AnimationAPI.quickTo error: 'duration' is not a positive number.`);\n        }\n        ease = getEasingFunc(ease, AnimationAPIImpl.#getEaseOptions);\n        if (typeof ease !== 'function') {\n            throw new TypeError(`AnimationAPI.quickTo error: 'ease' is not a function or valid Svelte easing function name.`);\n        }\n        // TODO: In the future potentially support more interpolation functions besides `lerp`.\n        const initial = {};\n        const destination = {};\n        const data = this.#data;\n        // Set initial data if the key / data is defined and the end position is not equal to current data.\n        for (const key of keys) {\n            if (typeof key !== 'string') {\n                throw new TypeError(`AnimationAPI.quickTo error: key ('${key}') is not a string.`);\n            }\n            if (!TJSPositionDataUtil.isAnimationKey(key)) {\n                throw new Error(`AnimationAPI.quickTo error: key ('${key}') is not animatable.`);\n            }\n            // Must use actual key from any aliases.\n            const value = TJSPositionDataUtil.getDataOrDefault(data, key);\n            if (value !== null) {\n                destination[key] = value;\n                initial[key] = value;\n            }\n        }\n        const keysArray = [...keys];\n        Object.freeze(keysArray);\n        const newData = Object.assign({}, initial);\n        const animationData = {\n            active: true,\n            cancelled: false,\n            control: void 0,\n            current: 0,\n            destination,\n            duration: duration * 1000, // Internally the AnimationManager works in ms.\n            ease,\n            el: void 0,\n            finished: true, // Note: start in finished state to add to AnimationManager on first callback.\n            initial,\n            interpolate: lerp,\n            keys: keysArray,\n            newData,\n            position: this.#position,\n            resolve: void 0,\n            start: 0,\n            quickTo: true\n        };\n        const quickToCB = (...args) => {\n            const argsLength = args.length;\n            if (argsLength === 0) {\n                return;\n            }\n            for (let cntr = keysArray.length; --cntr >= 0;) {\n                const key = keysArray[cntr];\n                // Must use actual key from any aliases.\n                const animKey = TJSPositionDataUtil.getAnimationKey(key);\n                if (data[animKey] !== void 0) {\n                    initial[key] = data[animKey];\n                }\n            }\n            // Handle case where the first arg is an object. Update all quickTo keys from data contained in the object.\n            if (isObject(args[0])) {\n                const objData = args[0];\n                for (const key in objData) {\n                    if (destination[key] !== void 0) {\n                        destination[key] = objData[key];\n                    }\n                }\n            }\n            else // Assign each variable argument to the key specified in the initial `keys` array above.\n             {\n                for (let cntr = 0; cntr < argsLength && cntr < keysArray.length; cntr++) {\n                    const key = keysArray[cntr];\n                    if (destination[key] !== void 0) {\n                        destination[key] = args[cntr];\n                    }\n                }\n            }\n            // Set initial data for transform values that are often null by default.\n            TJSPositionDataUtil.setNumericDefaults(initial);\n            TJSPositionDataUtil.setNumericDefaults(destination);\n            // Set target element to animation data to track if it is removed from the DOM hence ending the animation.\n            const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n            animationData.el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\n            ConvertStringData.process(destination, data, animationData.el);\n            // Reschedule the quickTo animation with AnimationManager as it is finished.\n            if (animationData.finished) {\n                animationData.cancelled = false;\n                animationData.finished = false;\n                animationData.active = true;\n                animationData.current = 0;\n                AnimationManager.add(animationData);\n            }\n            else // QuickTo animation is currently scheduled w/ AnimationManager so reset start and current time.\n             {\n                const now = globalThis.performance.now();\n                animationData.cancelled = false;\n                animationData.current = 0;\n                // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n                // precise delayed time.\n                animationData.start = now + (AnimationManager.timeNow - now);\n            }\n        };\n        Object.defineProperty(quickToCB, 'keys', {\n            value: keysArray,\n            writable: false,\n            configurable: false\n        });\n        Object.defineProperty(quickToCB, 'options', {\n            value: (optionsCB) => {\n                let { duration, ease } = optionsCB;\n                if (duration !== void 0 && (!Number.isFinite(duration) || duration < 0)) {\n                    throw new TypeError(`AnimationAPI.quickTo.options error: 'duration' is not a positive number.`);\n                }\n                ease = getEasingFunc(ease, AnimationAPIImpl.#getEaseOptions);\n                if (ease !== void 0 && typeof ease !== 'function') {\n                    throw new TypeError(`AnimationAPI.quickTo.options error: 'ease' is not a function or valid Svelte easing function name.`);\n                }\n                // TODO: In the future potentially support more interpolation functions besides `lerp`.\n                if (NumberGuard.isFinite(duration) && duration >= 0) {\n                    animationData.duration = duration * 1000;\n                }\n                if (ease) {\n                    animationData.ease = ease;\n                }\n                return quickToCB;\n            },\n            writable: false,\n            configurable: false\n        });\n        return quickToCB;\n    }\n}\n\n/**\n * Provides a implementation for a TJSPosition animation for a group of TJSPosition instances.\n */\nclass AnimationGroupControl {\n    /**\n     */\n    #animationControls;\n    /**\n     */\n    #finishedPromise;\n    /**\n     * Defines a static empty / void animation control.\n     */\n    static #voidControl = new AnimationGroupControl(null);\n    /**\n     * Provides a static void / undefined AnimationGroupControl that is automatically resolved.\n     */\n    static get voidControl() { return this.#voidControl; }\n    /**\n     * @param animationControls - A Set of AnimationControl instances.\n     */\n    constructor(animationControls) {\n        this.#animationControls = animationControls;\n    }\n    /**\n     * Get a promise that resolves when all animations are finished.\n     *\n     * @returns Finished Promise for all animations.\n     */\n    get finished() {\n        const animationControls = this.#animationControls;\n        if (!CrossWindow.isPromise(this.#finishedPromise)) {\n            if (animationControls === null || animationControls === void 0 || animationControls.size === 0) {\n                this.#finishedPromise = Promise.resolve({ cancelled: false });\n            }\n            else {\n                const promises = [];\n                for (const animationControl of animationControls) {\n                    promises.push(animationControl.finished);\n                }\n                this.#finishedPromise = Promise.allSettled(promises).then((results) => {\n                    // Check if any promises were rejected or resolved with `cancelled: true`.\n                    const anyCancelled = results.some((result) => result.status === 'rejected' ||\n                        (result.status === 'fulfilled' && result.value.cancelled));\n                    // Return a single BasicAnimationState based on the aggregation of individual results.\n                    return { cancelled: anyCancelled };\n                });\n            }\n        }\n        return this.#finishedPromise;\n    }\n    /**\n     * Returns whether there are active animation instances for this group.\n     *\n     * Note: a delayed animation may not be started / active yet. Use {@link AnimationGroupControl.isFinished} to\n     * determine if all animations in the group are finished.\n     *\n     * @returns Are there active animation instances.\n     */\n    get isActive() {\n        const animationControls = this.#animationControls;\n        if (animationControls === null || animationControls === void 0 || animationControls.size === 0) {\n            return false;\n        }\n        for (const animationControl of animationControls) {\n            if (animationControl.isActive) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Returns whether all animations in the group are finished.\n     *\n     * @returns Are all animation instances finished.\n     */\n    get isFinished() {\n        const animationControls = this.#animationControls;\n        if (animationControls === null || animationControls === void 0 || animationControls.size === 0) {\n            return true;\n        }\n        for (const animationControl of animationControls) {\n            if (!animationControl.isFinished) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Cancels the all animations.\n     */\n    cancel() {\n        const animationControls = this.#animationControls;\n        if (animationControls === null || animationControls === void 0 || animationControls.size === 0) {\n            return;\n        }\n        for (const animationControl of animationControls) {\n            animationControl.cancel();\n        }\n    }\n}\n\n/**\n * Provides a public API for grouping multiple {@link TJSPosition} animations together with the\n * AnimationManager.\n *\n * Note: To remove cyclic dependencies as this class provides the TJSPosition static / group Animation API `instanceof`\n * checks are not done against TJSPosition. Instead, a check for the animate property being an instanceof\n * {@link AnimationAPI} is performed in {@link AnimationGroupAPI.#getPosition}.\n *\n * Note: This is a static class that conforms to the {@link AnimationGroupAPI} interface.\n *\n * @see AnimationAPI\n */\nclass AnimationGroupAPIImpl {\n    constructor() { }\n    /**\n     * Returns the TJSPosition instance for the possible given positionable by checking the instance by checking for\n     * AnimationAPI.\n     *\n     * @param positionable - Possible position group entry.\n     *\n     * @returns Returns actual TJSPosition instance.\n     */\n    static #getPosition(positionable) {\n        if (!isObject(positionable)) {\n            return null;\n        }\n        if (positionable.animate instanceof AnimationAPIImpl) {\n            return positionable;\n        }\n        if (positionable.position?.animate instanceof AnimationAPIImpl) {\n            return positionable.position;\n        }\n        return null;\n    }\n    /**\n     * Cancels any animation for given TJSPosition.PositionGroup data.\n     *\n     * @param positionGroup - The position group to cancel.\n     */\n    static cancel(positionGroup) {\n        if (isIterable(positionGroup)) {\n            let index = -1;\n            for (const entry of positionGroup) {\n                index++;\n                const actualPosition = this.#getPosition(entry);\n                if (!actualPosition) {\n                    console.warn(`AnimationGroupAPI.cancel warning: No TJSPosition instance found at index: ${index}.`);\n                    continue;\n                }\n                AnimationManager.cancel(actualPosition);\n            }\n        }\n        else {\n            const actualPosition = this.#getPosition(positionGroup);\n            if (!actualPosition) {\n                console.warn(`AnimationGroupAPI.cancel warning: No TJSPosition instance found.`);\n                return;\n            }\n            AnimationManager.cancel(actualPosition);\n        }\n    }\n    /**\n     * Cancels all TJSPosition animation.\n     */\n    static cancelAll() { AnimationManager.cancelAll(); }\n    /**\n     * Gets all animation controls for the given position group data.\n     *\n     * @param positionGroup - A position group.\n     *\n     * @returns Results array.\n     */\n    static getScheduled(positionGroup) {\n        const results = [];\n        if (isIterable(positionGroup)) {\n            let index = -1;\n            for (const entry of positionGroup) {\n                index++;\n                const actualPosition = this.#getPosition(entry);\n                if (!actualPosition) {\n                    console.warn(`AnimationGroupAPI.getScheduled warning: No TJSPosition instance found at index: ${index}.`);\n                    continue;\n                }\n                const controls = AnimationManager.getScheduled(actualPosition);\n                results.push({\n                    position: actualPosition,\n                    entry: actualPosition !== entry ? entry : void 0,\n                    controls\n                });\n            }\n        }\n        else {\n            const actualPosition = this.#getPosition(positionGroup);\n            if (!actualPosition) {\n                console.warn(`AnimationGroupAPI.getScheduled warning: No TJSPosition instance found.`);\n                return results;\n            }\n            const controls = AnimationManager.getScheduled(actualPosition);\n            results.push({\n                position: actualPosition,\n                entry: actualPosition !== positionGroup ? positionGroup : void 0,\n                controls\n            });\n        }\n        return results;\n    }\n    /**\n     * Provides a type guard to test in the given key is an {@link AnimationAPIImpl.AnimationKey}.\n     *\n     * @param key - A key value to test.\n     *\n     * @returns Whether the given key is an animation key.\n     */\n    static isAnimationKey(key) {\n        return TJSPositionDataUtil.isAnimationKey(key);\n    }\n    /**\n     * Returns the status _for the entire position group_ specified if all position instances of the group are scheduled.\n     *\n     * @param positionGroup - A position group.\n     *\n     * @param [options] - Options.\n     *\n     * @returns True if all are scheduled / false if just one position instance in the group is not scheduled.\n     */\n    static isScheduled(positionGroup, options) {\n        if (isIterable(positionGroup)) {\n            let index = -1;\n            for (const entry of positionGroup) {\n                index++;\n                const actualPosition = this.#getPosition(entry);\n                if (!actualPosition) {\n                    console.warn(`AnimationGroupAPI.isScheduled warning: No TJSPosition instance found at index: ${index}.`);\n                    continue;\n                }\n                if (!AnimationManager.isScheduled(actualPosition, options)) {\n                    return false;\n                }\n            }\n        }\n        else {\n            const actualPosition = this.#getPosition(positionGroup);\n            if (!actualPosition) {\n                console.warn(`AnimationGroupAPI.isScheduled warning: No TJSPosition instance found.`);\n                return false;\n            }\n            if (!AnimationManager.isScheduled(actualPosition, options)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Provides the `from` animation tween for one or more positionable instances as a group.\n     *\n     * @param positionGroup - A position group.\n     *\n     * @param fromData - A position data object assigned to all positionable instances or a callback function invoked for\n     *        unique data for each instance.\n     *\n     * @param [options] - Tween options assigned to all positionable instances or a callback function invoked for unique\n     *        options for each instance.\n     *\n     * @returns Basic animation control.\n     */\n    static from(positionGroup, fromData, options) {\n        if (!isObject(fromData) && typeof fromData !== 'function') {\n            throw new TypeError(`AnimationGroupAPI.from error: 'fromData' is not an object or function.`);\n        }\n        if (options !== void 0 && !isObject(options) && typeof options !== 'function') {\n            throw new TypeError(`AnimationGroupAPI.from error: 'options' is not an object or function.`);\n        }\n        /**\n         */\n        const animationControls = new Set();\n        /**\n         */\n        const cleanupFn = (data) => animationControls.delete(data.control);\n        let index = -1;\n        /**\n         */\n        let callbackOptions;\n        const hasDataCallback = typeof fromData === 'function';\n        const hasOptionCallback = typeof options === 'function';\n        const hasCallback = hasDataCallback || hasOptionCallback;\n        if (hasCallback) {\n            callbackOptions = { index, position: void 0, entry: void 0 };\n        }\n        let actualFromData = fromData;\n        let actualOptions = isObject(options) ? options : void 0;\n        if (isIterable(positionGroup)) {\n            for (const entry of positionGroup) {\n                index++;\n                const actualPosition = this.#getPosition(entry);\n                if (!actualPosition) {\n                    console.warn(`AnimationGroupAPI.from warning: No TJSPosition instance found at index: ${index}.`);\n                    continue;\n                }\n                if (hasCallback) {\n                    callbackOptions.index = index;\n                    callbackOptions.position = actualPosition;\n                    callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n                }\n                if (hasDataCallback && typeof fromData === 'function') {\n                    actualFromData = fromData(callbackOptions);\n                    // Returned data from callback is null / undefined, so skip this position instance.\n                    if (actualFromData === null || actualFromData === void 0) {\n                        continue;\n                    }\n                    if (!isObject(actualFromData)) {\n                        throw new TypeError(`AnimationGroupAPI.from error: 'fromData' callback function iteration(${index}) failed to return an object.`);\n                    }\n                }\n                if (hasOptionCallback && typeof options === 'function') {\n                    actualOptions = options(callbackOptions);\n                    // Returned data from callback is null / undefined, so skip this position instance.\n                    if (actualOptions === null || actualOptions === void 0) {\n                        continue;\n                    }\n                    if (!isObject(actualOptions)) {\n                        throw new TypeError(`AnimationGroupAPI.from error: 'options' callback function iteration(${index}) failed to return an object.`);\n                    }\n                }\n                const animationControl = AnimationScheduler.from(actualPosition, actualFromData, actualOptions, cleanupFn);\n                if (animationControl) {\n                    animationControls.add(animationControl);\n                }\n            }\n        }\n        else {\n            const actualPosition = this.#getPosition(positionGroup);\n            if (!actualPosition) {\n                console.warn(`AnimationGroupAPI.from warning: No TJSPosition instance found.`);\n                return AnimationGroupControl.voidControl;\n            }\n            if (hasCallback) {\n                callbackOptions.index = 0;\n                callbackOptions.position = actualPosition;\n                callbackOptions.entry = actualPosition !== positionGroup ? positionGroup :\n                    void 0;\n            }\n            if (hasDataCallback && typeof fromData === 'function') {\n                actualFromData = fromData(callbackOptions);\n                // Returned data from callback is null / undefined, so skip this position instance.\n                if (actualFromData === null || actualFromData === void 0) {\n                    return AnimationGroupControl.voidControl;\n                }\n                if (!isObject(actualFromData)) {\n                    throw new TypeError(`AnimationGroupAPI.from error: 'fromData' callback function failed to return an object.`);\n                }\n            }\n            if (hasOptionCallback && typeof options === 'function') {\n                actualOptions = options(callbackOptions);\n                // Returned data from callback is null / undefined, so skip this position instance.\n                if (actualOptions === null || actualOptions === void 0) {\n                    return AnimationGroupControl.voidControl;\n                }\n                if (!isObject(actualOptions)) {\n                    throw new TypeError(`AnimationGroupAPI.from error: 'options' callback function failed to return an object.`);\n                }\n            }\n            const animationControl = AnimationScheduler.from(actualPosition, actualFromData, actualOptions, cleanupFn);\n            if (animationControl) {\n                animationControls.add(animationControl);\n            }\n        }\n        return new AnimationGroupControl(animationControls);\n    }\n    /**\n     * Provides the `fromTo` animation tween for one or more positionable instances as a group.\n     *\n     * @param positionGroup - A position group.\n     *\n     * @param fromData - A position data object assigned to all positionable instances or a callback function invoked for\n     *        unique data for each instance.\n     *\n     * @param toData - A position data object assigned to all positionable instances or a callback function invoked for\n     *        unique data for each instance.\n     *\n     * @param [options] - Tween options assigned to all positionable instances or a callback function invoked for unique\n     *        options for each instance.\n     *\n     * @returns Basic animation control.\n     */\n    static fromTo(positionGroup, fromData, toData, options) {\n        if (!isObject(fromData) && typeof fromData !== 'function') {\n            throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' is not an object or function.`);\n        }\n        if (!isObject(toData) && typeof toData !== 'function') {\n            throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' is not an object or function.`);\n        }\n        if (options !== void 0 && !isObject(options) && typeof options !== 'function') {\n            throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' is not an object or function.`);\n        }\n        const animationControls = new Set();\n        /**\n         */\n        const cleanupFn = (data) => animationControls.delete(data.control);\n        let index = -1;\n        /**\n         */\n        let callbackOptions;\n        const hasFromCallback = typeof fromData === 'function';\n        const hasToCallback = typeof toData === 'function';\n        const hasOptionCallback = typeof options === 'function';\n        const hasCallback = hasFromCallback || hasToCallback || hasOptionCallback;\n        if (hasCallback) {\n            callbackOptions = { index, position: void 0, entry: void 0 };\n        }\n        let actualFromData = fromData;\n        let actualToData = toData;\n        let actualOptions = isObject(options) ? options : void 0;\n        if (isIterable(positionGroup)) {\n            for (const entry of positionGroup) {\n                index++;\n                const actualPosition = this.#getPosition(entry);\n                if (!actualPosition) {\n                    console.warn(`AnimationGroupAPI.fromTo warning: No TJSPosition instance found at index: ${index}.`);\n                    continue;\n                }\n                if (hasCallback) {\n                    callbackOptions.index = index;\n                    callbackOptions.position = actualPosition;\n                    callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n                }\n                if (hasFromCallback && typeof fromData === 'function') {\n                    actualFromData = fromData(callbackOptions);\n                    // Returned data from callback is null / undefined, so skip this position instance.\n                    if (actualFromData === null || actualFromData === void 0) {\n                        continue;\n                    }\n                    if (!isObject(actualFromData)) {\n                        throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' callback function iteration(${index}) failed to return an object.`);\n                    }\n                }\n                if (hasToCallback && typeof toData === 'function') {\n                    actualToData = toData(callbackOptions);\n                    // Returned data from callback is null / undefined, so skip this position instance.\n                    if (actualToData === null || actualToData === void 0) {\n                        continue;\n                    }\n                    if (!isObject(actualToData)) {\n                        throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' callback function iteration(${index}) failed to return an object.`);\n                    }\n                }\n                if (hasOptionCallback && typeof options === 'function') {\n                    actualOptions = options(callbackOptions);\n                    // Returned data from callback is null / undefined, so skip this position instance.\n                    if (actualOptions === null || actualOptions === void 0) {\n                        continue;\n                    }\n                    if (!isObject(actualOptions)) {\n                        throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' callback function iteration(${index}) failed to return an object.`);\n                    }\n                }\n                const animationControl = AnimationScheduler.fromTo(actualPosition, actualFromData, actualToData, actualOptions, cleanupFn);\n                if (animationControl) {\n                    animationControls.add(animationControl);\n                }\n            }\n        }\n        else {\n            const actualPosition = this.#getPosition(positionGroup);\n            if (!actualPosition) {\n                console.warn(`AnimationGroupAPI.fromTo warning: No TJSPosition instance found.`);\n                return AnimationGroupControl.voidControl;\n            }\n            if (hasCallback) {\n                callbackOptions.index = 0;\n                callbackOptions.position = actualPosition;\n                callbackOptions.entry = actualPosition !== positionGroup ? positionGroup :\n                    void 0;\n            }\n            if (hasFromCallback && typeof fromData === 'function') {\n                actualFromData = fromData(callbackOptions);\n                // Returned data from callback is null / undefined, so skip this position instance.\n                if (actualFromData === null || actualFromData === void 0) {\n                    return AnimationGroupControl.voidControl;\n                }\n                if (!isObject(actualFromData)) {\n                    throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' callback function failed to return an object.`);\n                }\n            }\n            if (hasToCallback && typeof toData === 'function') {\n                actualToData = toData(callbackOptions);\n                // Returned data from callback is null / undefined, so skip this position instance.\n                if (actualToData === null || actualToData === void 0) {\n                    return AnimationGroupControl.voidControl;\n                }\n                if (!isObject(actualToData)) {\n                    throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' callback function failed to return an object.`);\n                }\n            }\n            if (hasOptionCallback && typeof options === 'function') {\n                actualOptions = options(callbackOptions);\n                // Returned data from callback is null / undefined, so skip this position instance.\n                if (actualOptions === null || actualOptions === void 0) {\n                    return AnimationGroupControl.voidControl;\n                }\n                if (!isObject(actualOptions)) {\n                    throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' callback function failed to return an object.`);\n                }\n            }\n            const animationControl = AnimationScheduler.fromTo(actualPosition, actualFromData, actualToData, actualOptions, cleanupFn);\n            if (animationControl) {\n                animationControls.add(animationControl);\n            }\n        }\n        return new AnimationGroupControl(animationControls);\n    }\n    /**\n     * Provides the `to` animation tween for one or more positionable instances as a group.\n     *\n     * @param positionGroup - A position group.\n     *\n     * @param toData - A position data object assigned to all positionable instances or a callback function invoked for\n     *        unique data for each instance.\n     *\n     * @param [options] - Tween options assigned to all positionable instances or a callback function invoked for unique\n     *        options for each instance.\n     *\n     * @returns Basic animation control.\n     */\n    static to(positionGroup, toData, options) {\n        if (!isObject(toData) && typeof toData !== 'function') {\n            throw new TypeError(`AnimationGroupAPI.to error: 'toData' is not an object or function.`);\n        }\n        if (options !== void 0 && !isObject(options) && typeof options !== 'function') {\n            throw new TypeError(`AnimationGroupAPI.to error: 'options' is not an object or function.`);\n        }\n        /**\n         */\n        const animationControls = new Set();\n        /**\n         */\n        const cleanupFn = (data) => animationControls.delete(data.control);\n        let index = -1;\n        /**\n         */\n        let callbackOptions;\n        const hasDataCallback = typeof toData === 'function';\n        const hasOptionCallback = typeof options === 'function';\n        const hasCallback = hasDataCallback || hasOptionCallback;\n        if (hasCallback) {\n            callbackOptions = { index, position: void 0, entry: void 0 };\n        }\n        let actualToData = toData;\n        let actualOptions = isObject(options) ? options : void 0;\n        if (isIterable(positionGroup)) {\n            for (const entry of positionGroup) {\n                index++;\n                const actualPosition = this.#getPosition(entry);\n                if (!actualPosition) {\n                    console.warn(`AnimationGroupAPI.to warning: No TJSPosition instance found at index: ${index}.`);\n                    continue;\n                }\n                if (hasCallback) {\n                    callbackOptions.index = index;\n                    callbackOptions.position = actualPosition;\n                    callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n                }\n                if (hasDataCallback && typeof toData === 'function') {\n                    actualToData = toData(callbackOptions);\n                    // Returned data from callback is null / undefined, so skip this position instance.\n                    if (actualToData === null || actualToData === void 0) {\n                        continue;\n                    }\n                    if (!isObject(actualToData)) {\n                        throw new TypeError(`AnimationGroupAPI.to error: 'toData' callback function iteration(${index}) failed to return an object.`);\n                    }\n                }\n                if (hasOptionCallback && typeof options === 'function') {\n                    actualOptions = options(callbackOptions);\n                    // Returned data from callback is null / undefined, so skip this position instance.\n                    if (actualOptions === null || actualOptions === void 0) {\n                        continue;\n                    }\n                    if (!isObject(actualOptions)) {\n                        throw new TypeError(`AnimationGroupAPI.to error: 'options' callback function iteration(${index}) failed to return an object.`);\n                    }\n                }\n                const animationControl = AnimationScheduler.to(actualPosition, actualToData, actualOptions, cleanupFn);\n                if (animationControl) {\n                    animationControls.add(animationControl);\n                }\n            }\n        }\n        else {\n            const actualPosition = this.#getPosition(positionGroup);\n            if (!actualPosition) {\n                console.warn(`AnimationGroupAPI.to warning: No TJSPosition instance found.`);\n                return AnimationGroupControl.voidControl;\n            }\n            if (hasCallback) {\n                callbackOptions.index = 0;\n                callbackOptions.position = actualPosition;\n                callbackOptions.entry = actualPosition !== positionGroup ? positionGroup :\n                    void 0;\n            }\n            if (hasDataCallback && typeof toData === 'function') {\n                actualToData = toData(callbackOptions);\n                // Returned data from callback is null / undefined, so skip this position instance.\n                if (actualToData === null || actualToData === void 0) {\n                    return AnimationGroupControl.voidControl;\n                }\n                if (!isObject(actualToData)) {\n                    throw new TypeError(`AnimationGroupAPI.to error: 'toData' callback function failed to return an object.`);\n                }\n            }\n            if (hasOptionCallback && typeof options === 'function') {\n                actualOptions = options(callbackOptions);\n                // Returned data from callback is null / undefined, so skip this position instance.\n                if (actualOptions === null || actualOptions === void 0) {\n                    return AnimationGroupControl.voidControl;\n                }\n                if (!isObject(actualOptions)) {\n                    throw new TypeError(`AnimationGroupAPI.to error: 'options' callback function failed to return an object.`);\n                }\n            }\n            const animationControl = AnimationScheduler.to(actualPosition, actualToData, actualOptions, cleanupFn);\n            if (animationControl) {\n                animationControls.add(animationControl);\n            }\n        }\n        return new AnimationGroupControl(animationControls);\n    }\n    /**\n     * Provides the `quickTo` animation tweening function for one or more positionable instances as a group.\n     *\n     * @param positionGroup - A position group.\n     *\n     * @param keys - Animation keys to target.\n     *\n     * @param [options] - Quick tween options assigned to all positionable instances or a callback function invoked for\n     *        unique options for each instance.\n     *\n     * @returns quick-to tween function.\n     */\n    static quickTo(positionGroup, keys, options) {\n        if (!isIterable(keys)) {\n            throw new TypeError(`AnimationGroupAPI.quickTo error: 'keys' is not an iterable list.`);\n        }\n        if (options !== void 0 && !isObject(options) && typeof options !== 'function') {\n            throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n        }\n        /**\n         */\n        const quickToCallbacks = [];\n        let index = -1;\n        const hasOptionCallback = typeof options === 'function';\n        const callbackOptions = { index, position: void 0, entry: void 0 };\n        let actualOptions = isObject(options) ? options : void 0;\n        if (isIterable(positionGroup)) {\n            for (const entry of positionGroup) {\n                index++;\n                const actualPosition = this.#getPosition(entry);\n                if (!actualPosition) {\n                    console.warn(`AnimationGroupAPI.quickTo warning: No TJSPosition instance found at index: ${index}.`);\n                    continue;\n                }\n                callbackOptions.index = index;\n                callbackOptions.position = actualPosition;\n                callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n                if (hasOptionCallback && typeof options === 'function') {\n                    actualOptions = options(callbackOptions);\n                    // Returned data from callback is null / undefined, so skip this position instance.\n                    if (actualOptions === null || actualOptions === void 0) {\n                        continue;\n                    }\n                    if (!isObject(actualOptions)) {\n                        throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' callback function iteration(${index}) failed to return an object.`);\n                    }\n                }\n                quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n            }\n        }\n        else {\n            const actualPosition = this.#getPosition(positionGroup);\n            if (!actualPosition) {\n                console.warn(`AnimationGroupAPI.quickTo warning: No TJSPosition instance found.`);\n                return;\n            }\n            callbackOptions.index = 0;\n            callbackOptions.position = actualPosition;\n            callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\n            if (hasOptionCallback && typeof options === 'function') {\n                actualOptions = options(callbackOptions);\n                // Returned data from callback is null / undefined, so skip this position instance.\n                if (actualOptions === null || actualOptions === void 0) {\n                    return;\n                }\n                if (!isObject(actualOptions)) {\n                    throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' callback function failed to return an object.`);\n                }\n            }\n            quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n        }\n        const keysArray = [...keys];\n        Object.freeze(keysArray);\n        const quickToCB = (...args) => {\n            const argsLength = args.length;\n            if (argsLength === 0) {\n                return;\n            }\n            if (typeof args[0] === 'function') {\n                const dataCallback = args[0];\n                index = -1;\n                let cntr = 0;\n                if (isIterable(positionGroup)) {\n                    for (const entry of positionGroup) {\n                        index++;\n                        const actualPosition = this.#getPosition(entry);\n                        if (!actualPosition) {\n                            continue;\n                        }\n                        callbackOptions.index = index;\n                        callbackOptions.position = actualPosition;\n                        callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n                        const toData = dataCallback(callbackOptions);\n                        // Returned data from callback is null / undefined, so skip this position instance.\n                        if (toData === null || toData === void 0) {\n                            continue;\n                        }\n                        /**\n                         */\n                        const toDataIterable = isIterable(toData);\n                        if (!Number.isFinite(toData) && !toDataIterable && !isObject(toData)) {\n                            throw new TypeError(`AnimationGroupAPI.quickTo error: 'toData' callback function iteration(${index}) failed to return a finite number, iterable list, or object.`);\n                        }\n                        if (toDataIterable) {\n                            quickToCallbacks[cntr++](...toData);\n                        }\n                        else {\n                            quickToCallbacks[cntr++](toData);\n                        }\n                    }\n                }\n                else {\n                    const actualPosition = this.#getPosition(positionGroup);\n                    if (!actualPosition) {\n                        return;\n                    }\n                    callbackOptions.index = 0;\n                    callbackOptions.position = actualPosition;\n                    callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\n                    const toData = dataCallback(callbackOptions);\n                    // Returned data from callback is null / undefined, so skip this position instance.\n                    if (toData === null || toData === void 0) {\n                        return;\n                    }\n                    const toDataIterable = isIterable(toData);\n                    if (!Number.isFinite(toData) && !toDataIterable && !isObject(toData)) {\n                        throw new TypeError(`AnimationGroupAPI.quickTo error: 'toData' callback function iteration(${index}) failed to return a finite number, iterable list, or object.`);\n                    }\n                    if (toDataIterable) {\n                        quickToCallbacks[cntr++](...toData);\n                    }\n                    else {\n                        quickToCallbacks[cntr++](toData);\n                    }\n                }\n            }\n            else {\n                for (let cntr = quickToCallbacks.length; --cntr >= 0;) {\n                    quickToCallbacks[cntr](...args);\n                }\n            }\n        };\n        Object.defineProperty(quickToCB, 'keys', {\n            value: keysArray,\n            writable: false,\n            configurable: false\n        });\n        Object.defineProperty(quickToCB, 'options', {\n            /**\n             * Sets options of quickTo tween.\n             * @param options -\n             */\n            value: (options) => {\n                if (options !== void 0 && !isObject(options)) {\n                    throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object.`);\n                }\n                // Set options object for each quickTo callback.\n                if (isObject(options)) {\n                    for (let cntr = quickToCallbacks.length; --cntr >= 0;) {\n                        quickToCallbacks[cntr].options(options);\n                    }\n                }\n                return quickToCB;\n            },\n            writable: false,\n            configurable: false\n        });\n        return quickToCB;\n    }\n}\nObject.seal(AnimationGroupAPIImpl);\n\n/**\n *\n */\nclass PositionStateAPI {\n    /**\n     */\n    #data;\n    /**\n     */\n    #dataSaved = new Map();\n    /**\n     */\n    #position;\n    /**\n     */\n    #transforms;\n    constructor(position, data, transforms) {\n        this.#position = position;\n        this.#data = data;\n        this.#transforms = transforms;\n        Object.seal(this);\n    }\n    /**\n     * Clears all saved position data except any default state.\n     */\n    clear() {\n        for (const key of this.#dataSaved.keys()) {\n            if (key !== '#defaultData') {\n                this.#dataSaved.delete(key);\n            }\n        }\n    }\n    /**\n     * Returns any stored save state by name.\n     *\n     * @param options - Options.\n     *\n     * @param options.name - Saved data name.\n     *\n     * @returns Any saved position data.\n     */\n    get({ name }) {\n        if (typeof name !== 'string') {\n            throw new TypeError(`TJSPosition - get error: 'name' is not a string.`);\n        }\n        return this.#dataSaved.get(name);\n    }\n    /**\n     * Returns any associated default position data.\n     *\n     * @returns Any saved default position data.\n     */\n    getDefault() {\n        return this.#dataSaved.get('#defaultData');\n    }\n    /**\n     * @returns The saved position data names / keys.\n     */\n    keys() {\n        return this.#dataSaved.keys();\n    }\n    /**\n     * Removes and returns any position data by name.\n     *\n     * @param options - Options.\n     *\n     * @param options.name - Name to remove and retrieve.\n     *\n     * @returns Any saved position data.\n     */\n    remove({ name }) {\n        if (typeof name !== 'string') {\n            throw new TypeError(`TJSPosition - remove: 'name' is not a string.`);\n        }\n        const data = this.#dataSaved.get(name);\n        this.#dataSaved.delete(name);\n        return data;\n    }\n    /**\n     * Resets position instance to default data and invokes set.\n     *\n     * @param [options] - Optional parameters.\n     *\n     * @param [options.keepZIndex=false] - When true keeps current z-index.\n     *\n     * @param [options.invokeSet=true] - When true invokes set method.\n     *\n     * @returns Operation successful.\n     */\n    reset({ keepZIndex = false, invokeSet = true } = {}) {\n        const defaultData = this.#dataSaved.get('#defaultData');\n        // Quit early if there is no saved default data.\n        if (!isObject(defaultData)) {\n            return false;\n        }\n        // Cancel all animations for TJSPosition if there are currently any scheduled.\n        if (this.#position.animate.isScheduled) {\n            this.#position.animate.cancel();\n        }\n        const zIndex = this.#position.zIndex;\n        const data = Object.assign({}, defaultData);\n        if (keepZIndex) {\n            data.zIndex = zIndex;\n        }\n        // Reset the transform data.\n        this.#transforms.reset(data);\n        const parent = this.#position.parent;\n        // If current minimized invoke `maximize`. TODO: REFACTOR FOR APPLICATION DIRECT ACCESS.\n        if (parent?.reactive?.minimized) {\n            parent?.maximize?.({ animate: false, duration: 0 });\n        }\n        // Note next clock tick scheduling.\n        if (invokeSet) {\n            setTimeout(() => this.#position.set(data), 0);\n        }\n        return true;\n    }\n    /**\n     * Restores a saved positional state returning the data. Several optional parameters are available to control\n     * whether the restore action occurs silently (no store / inline styles updates), animates to the stored data, or\n     * simply sets the stored data. Restoring via {@link AnimationAPI.to} allows specification of the duration and\n     * easing along with configuring a Promise to be returned if awaiting the end of the animation.\n     *\n     * @param options - Parameters\n     *\n     * @param options.name - Saved data set name.\n     *\n     * @param [options.remove=false] - Deletes data set.\n     *\n     * @param [options.properties] - Specific properties to set / animate.\n     *\n     * @param [options.silent] - Set position data directly; no store or style updates.\n     *\n     * @param [options.async=false] - If animating return a Promise that resolves with any saved data.\n     *\n     * @param [options.animateTo=false] - Animate to restore data.\n     *\n     * @param [options.duration=0.1] - Duration in seconds.\n     *\n     * @param [options.ease='linear'] - Easing function name or function.\n     *\n     * @returns Any saved position data.\n     */\n    restore({ name, remove = false, properties, silent = false, async = false, animateTo = false, duration = 0.1, ease = 'linear' }) {\n        if (typeof name !== 'string') {\n            throw new TypeError(`TJSPosition - restore error: 'name' is not a string.`);\n        }\n        const dataSaved = this.#dataSaved.get(name);\n        if (dataSaved) {\n            if (remove) {\n                this.#dataSaved.delete(name);\n            }\n            let data = dataSaved;\n            if (isIterable(properties)) {\n                data = {};\n                for (const property of properties) {\n                    data[property] = dataSaved[property];\n                }\n            }\n            // Update data directly with no store or inline style updates.\n            if (silent) {\n                for (const property in data) {\n                    if (property in this.#data) {\n                        this.#data[property] = data[property];\n                    }\n                }\n                return dataSaved;\n            }\n            else if (animateTo) // Animate to saved data.\n             {\n                // Provide special handling to potentially change transform origin as this parameter is not animated.\n                if (data.transformOrigin !== this.#position.transformOrigin) {\n                    this.#position.transformOrigin = data.transformOrigin;\n                }\n                // Return a Promise with saved data that resolves after animation ends.\n                if (async) {\n                    return this.#position.animate.to(data, { duration, ease }).finished.then(() => dataSaved);\n                }\n                else // Animate synchronously.\n                 {\n                    this.#position.animate.to(data, { duration, ease });\n                }\n            }\n            else {\n                // Default options is to set data for an immediate update.\n                this.#position.set(data);\n            }\n        }\n        // Saved data potentially not found, but must still return a Promise when async is true.\n        return async ? Promise.resolve(dataSaved) : dataSaved;\n    }\n    /**\n     * Saves current position state with the opportunity to add extra data to the saved state. Simply include extra\n     * properties in `options` to save extra data.\n     *\n     * @param options - Options.\n     *\n     * @param options.name - name to index this saved data.\n     *\n     * @param [optionsGet] - Additional options for {@link TJSPosition.get} when serializing position state. By default,\n     *        `nullable` values are included.\n     *\n     * @returns Current position data plus any extra data stored.\n     */\n    save({ name, ...extra }, optionsGet) {\n        if (typeof name !== 'string') {\n            throw new TypeError(`TJSPosition - save error: 'name' is not a string.`);\n        }\n        const data = this.#position.get(extra, optionsGet);\n        this.#dataSaved.set(name, data);\n        return data;\n    }\n    /**\n     * Directly sets a saved position state. Simply include extra properties in `options` to set extra data.\n     *\n     * @param opts - Options.\n     *\n     * @param opts.name - name to index this saved data.\n     */\n    set({ name, ...data }) {\n        if (typeof name !== 'string') {\n            throw new TypeError(`TJSPosition - set error: 'name' is not a string.`);\n        }\n        this.#dataSaved.set(name, data);\n    }\n}\n\n/**\n * Provides a base {@link System.SystemBase} implementation.\n */\nclass SystemBase {\n    /**\n     * When true constrains the min / max width or height to element.\n     */\n    #constrain;\n    /**\n     */\n    #element;\n    /**\n     * When true the validator is active.\n     */\n    #enabled;\n    /**\n     * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n     * performance oriented. If manually set this height is used instead of `offsetHeight`.\n     */\n    #height;\n    /**\n     * Set from an optional value in the constructor to lock accessors preventing modification.\n     */\n    #lock;\n    /**\n     * Stores the subscribers.\n     */\n    #subscribers = [];\n    /**\n     * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n     * performance oriented. If manually set this width is used instead of `offsetWidth`.\n     */\n    #width;\n    /**\n     * @param [options] - Initial options.\n     *\n     * @param [options.constrain=true] - Initial constrained state.\n     *\n     * @param [options.element] - Target element.\n     *\n     * @param [options.enabled=true] - Enabled state.\n     *\n     * @param [options.lock=false] - Lock parameters from being set.\n     *\n     * @param [options.width] - Manual width.\n     *\n     * @param [options.height] - Manual height.\n     */\n    constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {}) {\n        this.#constrain = true;\n        this.#enabled = true;\n        this.constrain = constrain;\n        this.element = element;\n        this.enabled = enabled;\n        this.width = width;\n        this.height = height;\n        this.#lock = typeof lock === 'boolean' ? lock : false;\n    }\n    /**\n     * @returns The current constrain state.\n     */\n    get constrain() { return this.#constrain; }\n    /**\n     * @returns Target element.\n     */\n    get element() { return this.#element; }\n    /**\n     * @returns The current enabled state.\n     */\n    get enabled() { return this.#enabled; }\n    /**\n     * @returns Get manual height.\n     */\n    get height() { return this.#height; }\n    /**\n     * @return Get locked state.\n     */\n    get locked() { return this.#lock; }\n    /**\n     * @returns Get manual width.\n     */\n    get width() { return this.#width; }\n    /**\n     * @param constrain - New constrain state.\n     */\n    set constrain(constrain) {\n        if (this.#lock) {\n            return;\n        }\n        if (typeof constrain !== 'boolean') {\n            throw new TypeError(`'constrain' is not a boolean.`);\n        }\n        this.#constrain = constrain;\n        this.#updateSubscribers();\n    }\n    /**\n     * @param element - Set target element.\n     */\n    set element(element) {\n        if (this.#lock) {\n            return;\n        }\n        if (element === void 0 || element === null || A11yHelper.isFocusTarget(element)) {\n            this.#element = element;\n        }\n        else {\n            throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n        }\n        this.#updateSubscribers();\n    }\n    /**\n     * @param enabled - New enabled state.\n     */\n    set enabled(enabled) {\n        if (this.#lock) {\n            return;\n        }\n        if (typeof enabled !== 'boolean') {\n            throw new TypeError(`'enabled' is not a boolean.`);\n        }\n        this.#enabled = enabled;\n        this.#updateSubscribers();\n    }\n    /**\n     * @param height - Set manual height.\n     */\n    set height(height) {\n        if (this.#lock) {\n            return;\n        }\n        if (height === void 0 || Number.isFinite(height)) {\n            this.#height = height;\n        }\n        else {\n            throw new TypeError(`'height' is not a finite number or undefined.`);\n        }\n        this.#updateSubscribers();\n    }\n    /**\n     * @param width - Set manual width.\n     */\n    set width(width) {\n        if (this.#lock) {\n            return;\n        }\n        if (width === void 0 || Number.isFinite(width)) {\n            this.#width = width;\n        }\n        else {\n            throw new TypeError(`'width' is not a finite number or undefined.`);\n        }\n        this.#updateSubscribers();\n    }\n    /**\n     * Set manual width & height.\n     *\n     * @param width - New manual width.\n     *\n     * @param height - New manual height.\n     */\n    setDimension(width, height) {\n        if (this.#lock) {\n            return;\n        }\n        if (width === void 0 || Number.isFinite(width)) {\n            this.#width = width;\n        }\n        else {\n            throw new TypeError(`'width' is not a finite number or undefined.`);\n        }\n        if (height === void 0 || Number.isFinite(height)) {\n            this.#height = height;\n        }\n        else {\n            throw new TypeError(`'height' is not a finite number or undefined.`);\n        }\n        this.#updateSubscribers();\n    }\n    /**\n     * @param handler - Callback function that is invoked on update / changes. Receives a copy of the TJSPositionData.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        const currentIdx = this.#subscribers.findIndex((entry) => entry === handler);\n        if (currentIdx === -1) {\n            this.#subscribers.push(handler); // add handler to the array of subscribers\n            handler(this); // call handler with current value\n        }\n        // Return unsubscribe function.\n        return () => {\n            const existingIdx = this.#subscribers.findIndex((entry) => entry === handler);\n            if (existingIdx !== -1) {\n                this.#subscribers.splice(existingIdx, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscribers.length; cntr++) {\n            this.#subscribers[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a {@link System.Initial.InitialSystem} implementation to center an element being positioned.\n */\nclass Centered extends SystemBase {\n    /**\n     * Get the left constraint based on any manual target values or the browser inner width.\n     *\n     * @param width - Target width.\n     *\n     * @returns Calculated left constraint.\n     */\n    getLeft(width) {\n        // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n        const boundsWidth = this.width ?? this.element?.offsetWidth ?? globalThis.innerWidth;\n        return (boundsWidth - width) / 2;\n    }\n    /**\n     * Get the top constraint based on any manual target values or the browser inner height.\n     *\n     * @param height - Target height.\n     *\n     * @returns Calculated top constraint.\n     */\n    getTop(height) {\n        const boundsHeight = this.height ?? this.element?.offsetHeight ?? globalThis.innerHeight;\n        return (boundsHeight - height) / 2;\n    }\n}\n\n/**\n * Provides the storage and sequencing of managed position validators. Each validator added may be a bespoke function or\n * a {@link ValidatorData} object containing an `id`, `validator`, and `weight` attributes; `validator` is the only\n * required attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the validator; recommended strings or numbers. This\n * allows validators to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows validators to be added in a predictable\n * order which is especially handy if they are manipulated at runtime. A lower weighted validator always runs before a\n * higher weighted validator. If no weight is specified the default of '1' is assigned, and it is appended to the end of\n * the validators list.\n *\n * This class forms the public API which is accessible from the {@link TJSPosition.validators} getter in the main\n * TJSPosition instance.\n * ```\n * const position = new TJSPosition();\n * position.validators.add(...);\n * position.validators.clear();\n * position.validators.length;\n * position.validators.remove(...);\n * position.validators.removeBy(...);\n * position.validators.removeById(...);\n * ```\n */\nclass AdapterValidators {\n    /**\n     */\n    #enabled = true;\n    /**\n     */\n    #validatorData;\n    /**\n     */\n    #mapUnsubscribe = new Map();\n    #updateFn;\n    /**\n     * @returns Returns this and internal storage for validator adapter.\n     */\n    static create(updateFn) {\n        const validatorAPI = new AdapterValidators(updateFn);\n        return [validatorAPI, validatorAPI.#validatorData];\n    }\n    /**\n     */\n    constructor(updateFn) {\n        this.#validatorData = [];\n        this.#updateFn = updateFn;\n        Object.seal(this);\n    }\n    /**\n     * @returns Returns the enabled state.\n     */\n    get enabled() { return this.#enabled; }\n    /**\n     * @returns Returns the length of the validators array.\n     */\n    get length() { return this.#validatorData.length; }\n    /**\n     * @param enabled - Sets enabled state.\n     */\n    set enabled(enabled) {\n        if (typeof enabled !== 'boolean') {\n            throw new TypeError(`'enabled' is not a boolean.`);\n        }\n        this.#enabled = enabled;\n    }\n    /**\n     * Provides an iterator for validators.\n     *\n     * @returns iterator.\n     */\n    *[Symbol.iterator]() {\n        if (this.#validatorData.length === 0) {\n            return;\n        }\n        for (const entry of this.#validatorData) {\n            yield { ...entry };\n        }\n    }\n    /**\n     * Adds the given validators.\n     *\n     * @param validators - Validators to add.\n     */\n    add(...validators) {\n        /**\n         * Tracks the number of validators added that have subscriber functionality.\n         */\n        let subscribeCount = 0;\n        for (const validator of validators) {\n            const validatorType = typeof validator;\n            if ((validatorType !== 'function' && validatorType !== 'object') || validator === null) {\n                throw new TypeError(`AdapterValidator error: 'validator' is not a function or object.`);\n            }\n            /**\n             */\n            let data = void 0;\n            /**\n             */\n            let subscribeFn = void 0;\n            switch (validatorType) {\n                case 'function':\n                    data = {\n                        id: void 0,\n                        validate: validator,\n                        weight: 1\n                    };\n                    subscribeFn = validator.subscribe;\n                    break;\n                case 'object':\n                    if ('validate' in validator) {\n                        if (typeof validator.validate !== 'function') {\n                            throw new TypeError(`AdapterValidator error: 'validate' attribute is not a function.`);\n                        }\n                        if (validator.weight !== void 0 && typeof validator.weight !== 'number' ||\n                            (validator?.weight < 0 || validator?.weight > 1)) {\n                            throw new TypeError(`AdapterValidator error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n                        }\n                        data = {\n                            id: validator.id !== void 0 ? validator.id : void 0,\n                            validate: validator.validate.bind(validator),\n                            weight: validator.weight || 1\n                        };\n                        subscribeFn = validator.validate.subscribe ?? validator.subscribe;\n                    }\n                    else {\n                        throw new TypeError(`AdapterValidator error: 'validate' attribute is not a function.`);\n                    }\n                    break;\n            }\n            // Find the index to insert where data.weight is less than existing values weight.\n            const index = this.#validatorData.findIndex((value) => data.weight < value.weight);\n            // If an index was found insert at that location.\n            if (index >= 0) {\n                this.#validatorData.splice(index, 0, data);\n            }\n            else // push to end of validators.\n             {\n                this.#validatorData.push(data);\n            }\n            if (typeof subscribeFn === 'function') {\n                const unsubscribe = subscribeFn.call(validator, this.#updateFn);\n                // Ensure that unsubscribe is a function.\n                if (typeof unsubscribe !== 'function') {\n                    throw new TypeError('AdapterValidator error: Validator has subscribe function, but no unsubscribe function is returned.');\n                }\n                // Ensure that the same validator is not subscribed to multiple times.\n                if (this.#mapUnsubscribe.has(data.validate)) {\n                    throw new Error('AdapterValidator error: Validator added already has an unsubscribe function registered.');\n                }\n                this.#mapUnsubscribe.set(data.validate, unsubscribe);\n                subscribeCount++;\n            }\n        }\n        // Validators with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n        // subscriber count is less than the amount of validators added then automatically trigger an update manually.\n        if (subscribeCount < validators.length) {\n            this.#updateFn();\n        }\n    }\n    /**\n     * Clears / removes all validators.\n     */\n    clear() {\n        this.#validatorData.length = 0;\n        // Unsubscribe from all validators with subscription support.\n        for (const unsubscribe of this.#mapUnsubscribe.values()) {\n            unsubscribe();\n        }\n        this.#mapUnsubscribe.clear();\n        this.#updateFn();\n    }\n    /**\n     * Removes one or more given validators.\n     *\n     * @param validators - Validators to remove.\n     */\n    remove(...validators) {\n        const length = this.#validatorData.length;\n        if (length === 0) {\n            return;\n        }\n        for (const data of validators) {\n            // Handle the case that the validator may either be a function or a validator entry / object.\n            const actualValidator = typeof data === 'function' ? data : isObject(data) ? data.validate : void 0;\n            if (!actualValidator) {\n                continue;\n            }\n            for (let cntr = this.#validatorData.length; --cntr >= 0;) {\n                if (this.#validatorData[cntr].validate === actualValidator) {\n                    this.#validatorData.splice(cntr, 1);\n                    // Invoke any unsubscribe function for given validator then remove from tracking.\n                    let unsubscribe = void 0;\n                    if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualValidator)) === 'function') {\n                        unsubscribe();\n                        this.#mapUnsubscribe.delete(actualValidator);\n                    }\n                }\n            }\n        }\n        // Invoke update as a validator was removed.\n        if (length !== this.#validatorData.length) {\n            this.#updateFn();\n        }\n    }\n    /**\n     * Remove validators by the provided callback. The callback takes 3 parameters: `id`, `validator`, and `weight`.\n     * Any truthy value returned will remove that validator.\n     *\n     * @param callback - Callback function to evaluate each validator entry.\n     */\n    removeBy(callback) {\n        const length = this.#validatorData.length;\n        if (length === 0) {\n            return;\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(`AdapterValidator error: 'callback' is not a function.`);\n        }\n        this.#validatorData = this.#validatorData.filter((data) => {\n            const remove = callback.call(callback, { ...data });\n            if (remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validate)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.validate);\n                }\n            }\n            // Reverse remove boolean to properly validator / remove this validator.\n            return !remove;\n        });\n        if (length !== this.#validatorData.length) {\n            this.#updateFn();\n        }\n    }\n    /**\n     * Removes any validators with matching IDs.\n     *\n     * @param ids - IDs to remove.\n     */\n    removeById(...ids) {\n        const length = this.#validatorData.length;\n        if (length === 0) {\n            return;\n        }\n        this.#validatorData = this.#validatorData.filter((data) => {\n            let remove = false;\n            for (const id of ids) {\n                remove ||= data.id === id;\n            }\n            // If not keeping invoke any unsubscribe function for given validator then remove from tracking.\n            if (remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validate)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.validate);\n                }\n            }\n            return !remove; // Swap here to actually remove the item via array validator method.\n        });\n        if (length !== this.#validatorData.length) {\n            this.#updateFn();\n        }\n    }\n}\n\nclass TransformBounds extends SystemBase {\n    static #TRANSFORM_DATA = new TJSTransformData();\n    /**\n     * Provides a validator that respects transforms in positional data constraining the position to within the target\n     * elements bounds.\n     *\n     * @param valData - The associated validation data for position updates.\n     *\n     * @returns Potentially adjusted position data.\n     */\n    validate(valData) {\n        // Early out if element is undefined or local enabled state is false.\n        if (!this.enabled) {\n            return valData.position;\n        }\n        // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n        const boundsWidth = this.width ?? this.element?.offsetWidth ?? globalThis.innerWidth;\n        const boundsHeight = this.height ?? this.element?.offsetHeight ?? globalThis.innerHeight;\n        // Ensure min / max width constraints when position width is a number; not 'auto' or 'inherit'. If constrain is\n        // true cap width bounds.\n        if (typeof valData.position.width === 'number') {\n            const maxW = valData.maxWidth ?? (this.constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n            valData.position.width = clamp(valData.width, valData.minWidth, maxW);\n        }\n        // Ensure min / max height constraints when position height is a number; not 'auto' or 'inherit'. If constrain\n        // is true cap height bounds.\n        if (typeof valData.position.height === 'number') {\n            const maxH = valData.maxHeight ?? (this.constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n            valData.position.height = clamp(valData.height, valData.minHeight, maxH);\n        }\n        // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n        // when position width / height is 'auto'.\n        const data = valData.transforms.getData(valData.position, TransformBounds.#TRANSFORM_DATA, valData);\n        // Check the bounding rectangle against browser height / width. Adjust position based on how far the overlap of\n        // the bounding rect is outside the bounds height / width. The order below matters as the constraints are top /\n        // left oriented, so perform those checks last.\n        const initialX = data.boundingRect.x;\n        const initialY = data.boundingRect.y;\n        const marginTop = valData.marginTop ?? 0;\n        const marginLeft = valData.marginLeft ?? 0;\n        if (data.boundingRect.bottom + marginTop > boundsHeight) {\n            data.boundingRect.y += boundsHeight - data.boundingRect.bottom - marginTop;\n        }\n        if (data.boundingRect.right + marginLeft > boundsWidth) {\n            data.boundingRect.x += boundsWidth - data.boundingRect.right - marginLeft;\n        }\n        if (data.boundingRect.top - marginTop < 0) {\n            data.boundingRect.y += Math.abs(data.boundingRect.top - marginTop);\n        }\n        if (data.boundingRect.left - marginLeft < 0) {\n            data.boundingRect.x += Math.abs(data.boundingRect.left - marginLeft);\n        }\n        valData.position.left -= initialX - data.boundingRect.x;\n        valData.position.top -= initialY - data.boundingRect.y;\n        return valData.position;\n    }\n}\n\n/**\n * Tracks changes to positional data during {@link TJSPosition.set} updates to minimize changes to the element style in\n * {@link UpdateElementManager}.\n */\nclass PositionChangeSet {\n    left;\n    top;\n    width;\n    height;\n    maxHeight;\n    maxWidth;\n    minHeight;\n    minWidth;\n    zIndex;\n    transform;\n    transformOrigin;\n    constructor() {\n        this.left = false;\n        this.top = false;\n        this.width = false;\n        this.height = false;\n        this.maxHeight = false;\n        this.maxWidth = false;\n        this.minHeight = false;\n        this.minWidth = false;\n        this.zIndex = false;\n        this.transform = false;\n        this.transformOrigin = false;\n    }\n    hasChange() {\n        return this.left || this.top || this.width || this.height || this.maxHeight || this.maxWidth || this.minHeight ||\n            this.minWidth || this.zIndex || this.transform || this.transformOrigin;\n    }\n    set(value) {\n        this.left = value;\n        this.top = value;\n        this.width = value;\n        this.height = value;\n        this.maxHeight = value;\n        this.maxWidth = value;\n        this.minHeight = value;\n        this.minWidth = value;\n        this.zIndex = value;\n        this.transform = value;\n        this.transformOrigin = value;\n    }\n}\n\n/**\n * Encapsulates internal data from a TJSPosition instance to be manipulated by {@link UpdateElementManager}.\n */\nclass UpdateElementData {\n    changeSet;\n    data;\n    dataSubscribers;\n    dimensionData;\n    options;\n    queued;\n    storeDimension;\n    storeTransform;\n    styleCache;\n    subscribers;\n    transforms;\n    transformData;\n    constructor(changeSet, data, options, styleCache, subscribers, transforms) {\n        /**\n         */\n        this.changeSet = changeSet;\n        /**\n         * Stores the private data from TJSPosition.\n         */\n        this.data = data;\n        /**\n         * Provides a copy of local data sent to subscribers.\n         */\n        this.dataSubscribers = Object.seal(new TJSPositionData());\n        /**\n         * Stores the current dimension data used for the readable `dimension` store.\n         */\n        this.dimensionData = Object.seal({ width: 0, height: 0 });\n        /**\n         */\n        this.options = options;\n        /**\n         * Stores if this TJSPosition / update data is queued for update.\n         */\n        this.queued = false;\n        /**\n         */\n        this.styleCache = styleCache;\n        /**\n         */\n        this.storeDimension = writable(this.dimensionData);\n        /**\n         */\n        this.subscribers = subscribers;\n        /**\n         */\n        this.transforms = transforms;\n        /**\n         * Stores the current transform data used for the readable `transform` store. It is only active when there are\n         * subscribers to the store or calculateTransform options is true.\n         */\n        this.transformData = new TJSTransformData();\n        /**\n         * When there are subscribers set option to calculate transform updates; set to false when no subscribers.\n         */\n        this.storeTransform = writable(this.transformData, () => {\n            this.options.transformSubscribed = true;\n            return () => this.options.transformSubscribed = false;\n        });\n    }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link TJSPosition.elementUpdated} to await\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n * element are in sync with the browser and potentially in the future be further throttled.\n */\nclass UpdateElementManager {\n    /**\n     * Stores the active list of all TJSPosition instances currently updating. The list entries are recycled between\n     * updates.\n     */\n    static list = [];\n    /**\n     * Tracks the current position in the list.\n     */\n    static listCntr = 0;\n    static updatePromise;\n    /**\n     * Potentially adds the given element and internal updateData instance to the list.\n     *\n     * @param el - An HTMLElement instance.\n     *\n     * @param updateData - An UpdateElementData instance.\n     *\n     * @returns The unified next frame update promise. Returns `currentTime`.\n     */\n    static add(el, updateData) {\n        if (this.listCntr < this.list.length) {\n            const entry = this.list[this.listCntr];\n            entry[0] = el;\n            entry[1] = updateData;\n        }\n        else {\n            this.list.push([el, updateData]);\n        }\n        this.listCntr++;\n        updateData.queued = true;\n        if (!this.updatePromise) {\n            this.updatePromise = this.wait();\n        }\n        return this.updatePromise;\n    }\n    /**\n     * Await on `nextAnimationFrame` and iterate over list map invoking callback functions.\n     *\n     * @returns The next frame Promise / currentTime from nextAnimationFrame.\n     */\n    static async wait() {\n        // Await the next animation frame. In the future this can be extended to multiple frames to divide update rate.\n        const currentTime = await nextAnimationFrame();\n        this.updatePromise = void 0;\n        for (let cntr = this.listCntr; --cntr >= 0;) {\n            // Obtain data for entry.\n            const entry = this.list[cntr];\n            const el = entry[0];\n            const updateData = entry[1];\n            // Clear entry data.\n            entry[0] = void 0;\n            entry[1] = void 0;\n            // Reset queued state.\n            updateData.queued = false;\n            // Early out if the element is no longer connected to the DOM / shadow root.\n            if (!el.isConnected) {\n                continue;\n            }\n            if (updateData.options.ortho) {\n                UpdateElementManager.#updateElementOrtho(el, updateData);\n            }\n            else {\n                UpdateElementManager.#updateElement(el, updateData);\n            }\n            // If calculate transform options is enabled then update the transform data and set the readable store.\n            if (updateData.options.calculateTransform || updateData.options.transformSubscribed) {\n                UpdateElementManager.#updateTransform(updateData);\n            }\n            // Update all subscribers with changed data.\n            this.updateSubscribers(updateData);\n        }\n        this.listCntr = 0;\n        return currentTime;\n    }\n    /**\n     * Potentially immediately updates the given element.\n     *\n     * @param el - An HTMLElement instance.\n     *\n     * @param updateData - An UpdateElementData instance.\n     */\n    static immediate(el, updateData) {\n        // Early out if the element is no longer connected to the DOM / shadow root.\n        if (!el.isConnected) {\n            return;\n        }\n        if (updateData.options.ortho) {\n            UpdateElementManager.#updateElementOrtho(el, updateData);\n        }\n        else {\n            UpdateElementManager.#updateElement(el, updateData);\n        }\n        // If calculate transform options is enabled then update the transform data and set the readable store.\n        if (updateData.options.calculateTransform || updateData.options.transformSubscribed) {\n            UpdateElementManager.#updateTransform(updateData);\n        }\n        // Update all subscribers with changed data.\n        this.updateSubscribers(updateData);\n    }\n    /**\n     * @param updateData - Data change set.\n     */\n    static updateSubscribers(updateData) {\n        const data = updateData.data;\n        const changeSet = updateData.changeSet;\n        if (!changeSet.hasChange()) {\n            return;\n        }\n        // Make a copy of the data.\n        const output = TJSPositionDataUtil.copyData(data, updateData.dataSubscribers);\n        const subscribers = updateData.subscribers;\n        // Early out if there are no subscribers.\n        if (subscribers.length > 0) {\n            for (let cntr = 0; cntr < subscribers.length; cntr++) {\n                subscribers[cntr](output);\n            }\n        }\n        // Update dimension data if width / height has changed.\n        if (changeSet.width || changeSet.height) {\n            updateData.dimensionData.width = data.width;\n            updateData.dimensionData.height = data.height;\n            updateData.storeDimension.set(updateData.dimensionData);\n        }\n        changeSet.set(false);\n    }\n    // Internal Implementation ----------------------------------------------------------------------------------------\n    /**\n     * Temporary data for validation.\n     */\n    static #validationData = Object.seal({\n        height: 0,\n        width: 0,\n        marginLeft: 0,\n        marginTop: 0\n    });\n    /**\n     * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link TJSPosition.elementUpdated} to\n     * await on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n     * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n     * element are in sync with the browser and potentially in the future be further throttled.\n     *\n     * @param el - The target HTMLElement.\n     *\n     * @param updateData - Update data.\n     */\n    static #updateElement(el, updateData) {\n        const changeSet = updateData.changeSet;\n        const data = updateData.data;\n        if (changeSet.left) {\n            el.style.left = `${data.left}px`;\n        }\n        if (changeSet.top) {\n            el.style.top = `${data.top}px`;\n        }\n        if (changeSet.zIndex) {\n            el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : '';\n        }\n        if (changeSet.width) {\n            el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n        }\n        if (changeSet.height) {\n            el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n        }\n        if (changeSet.transformOrigin) {\n            el.style.transformOrigin = data.transformOrigin;\n        }\n        // Update all transforms in order added to transforms object.\n        if (changeSet.transform) {\n            el.style.transform = updateData.transforms.isActive ? updateData.transforms.getCSS() : '';\n        }\n    }\n    /**\n     * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link TJSPosition.elementUpdated} to\n     * await on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n     * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n     * element are in sync with the browser and potentially in the future be further throttled.\n     *\n     * @param el - The target HTMLElement.\n     *\n     * @param updateData - Update data.\n     */\n    static #updateElementOrtho(el, updateData) {\n        const changeSet = updateData.changeSet;\n        const data = updateData.data;\n        if (changeSet.zIndex) {\n            el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : '';\n        }\n        if (changeSet.width) {\n            el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n        }\n        if (changeSet.height) {\n            el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n        }\n        if (changeSet.transformOrigin) {\n            el.style.transformOrigin = data.transformOrigin;\n        }\n        // Update all transforms in order added to transforms object.\n        if (changeSet.left || changeSet.top || changeSet.transform) {\n            el.style.transform = updateData.transforms.getCSSOrtho(data);\n        }\n    }\n    /**\n     * Updates the applied transform data and sets the readable `transform` store.\n     *\n     * @param updateData - Update element data.\n     */\n    static #updateTransform(updateData) {\n        const validationData = this.#validationData;\n        validationData.height = updateData.data.height !== 'auto' && updateData.data.height !== 'inherit' ?\n            updateData.data.height : updateData.styleCache.offsetHeight;\n        validationData.width = updateData.data.width !== 'auto' && updateData.data.width !== 'inherit' ?\n            updateData.data.width : updateData.styleCache.offsetWidth;\n        validationData.marginLeft = updateData.styleCache.marginLeft;\n        validationData.marginTop = updateData.styleCache.marginTop;\n        // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n        // when position width / height is 'auto'.\n        updateData.transforms.getData(updateData.data, updateData.transformData, validationData);\n        updateData.storeTransform.set(updateData.transformData);\n    }\n}\n\nvar _a;\n/**\n * Provides an advanced compound store for positioning elements dynamically including an optimized pipeline for updating\n * an associated element. Essential tweening / animation is supported in addition to a validation API to constrain\n * positional updates.\n */\nclass TJSPosition {\n    /**\n     * Public API for {@link TJSPosition.Initial}.\n     */\n    static #positionInitial = Object.freeze({\n        browserCentered: new Centered({ lock: true }),\n        Centered\n    });\n    /**\n     * Public API for {@link TJSPosition.Validators}\n     */\n    static #positionValidators = Object.freeze({\n        TransformBounds,\n        transformWindow: new TransformBounds({ lock: true })\n    });\n    /**\n     * Stores all position data / properties.\n     */\n    #data = Object.seal(new TJSPositionData());\n    /**\n     * Provides the animation API.\n     */\n    #animate = new AnimationAPIImpl(this, this.#data);\n    /**\n     * Provides a way to turn on / off the position handling.\n     */\n    #enabled = true;\n    /**\n     * Stores ongoing options that are set in the constructor or by transform store subscription.\n     */\n    #options = {\n        calculateTransform: false,\n        initial: void 0,\n        ortho: true,\n        transformSubscribed: false,\n    };\n    /**\n     * The associated parent for positional data tracking. Used in validators.\n     */\n    #parent;\n    /**\n     * Stores the style attributes that changed on update.\n     */\n    #positionChangeSet = new PositionChangeSet();\n    /**\n     * Tracks the current state if this position instance is a candidate for resize observation by the `resizeObserver`\n     * action. This is `true` when `width` or `height` is `auto` or `inherit`.\n     */\n    #resizeObservable = false;\n    /**\n     */\n    #stores;\n    /**\n     * Stores an instance of the computer styles for the target element.\n     */\n    #styleCache;\n    /**\n     * Stores the subscribers.\n     */\n    #subscribers = [];\n    /**\n     */\n    #transforms = new TJSTransforms();\n    /**\n     */\n    #updateElementData;\n    /**\n     * Stores the UpdateElementManager wait promise.\n     */\n    #updateElementPromise;\n    /**\n     */\n    #validators;\n    /**\n     */\n    #validatorData;\n    /**\n     */\n    #state = new PositionStateAPI(this, this.#data, this.#transforms);\n    /**\n     * @returns Public Animation Group API.\n     */\n    static get Animate() { return AnimationGroupAPIImpl; }\n    /**\n     * @returns TJSPositionData constructor.\n     */\n    static get Data() { return TJSPositionData; }\n    /**\n     * @returns TJSPosition default initial systems.\n     */\n    static get Initial() { return this.#positionInitial; }\n    /**\n     * @returns `SystemBase` constructor.\n     */\n    static get SystemBase() { return SystemBase; }\n    /**\n     * Returns TJSTransformData class / constructor.\n     *\n     * @returns TransformData class / constructor.\n     */\n    static get TransformData() { return TJSTransformData; }\n    /**\n     * Returns default validator systems.\n     *\n     * @returns Available validators.\n     */\n    static get Validators() { return this.#positionValidators; }\n    /**\n     * Returns a list of supported transform origins.\n     *\n     * @returns The supported transform origin strings.\n     */\n    static get transformOrigins() {\n        return TJSTransforms.transformOrigins;\n    }\n    /**\n     * Convenience to copy from source to target of two TJSPositionData like objects. If a target is not supplied a new\n     * {@link TJSPositionData} instance is created.\n     *\n     * @param source - The source instance to copy from.\n     *\n     * @param [target] - Target TJSPositionData like object; if one is not provided a new instance is created.\n     *\n     * @returns The target instance with all TJSPositionData fields.\n     */\n    static copyData(source, target) {\n        return TJSPositionDataUtil.copyData(source, target);\n    }\n    /**\n     * Returns a duplicate of a given position instance copying any options and validators. The position parent is not\n     * copied and a new one must be set manually via the {@link TJSPosition.parent} setter.\n     *\n     * @param position - A position instance.\n     *\n     * @param [options] - Unique new options to set.\n     *\n     * @returns A duplicate position instance.\n     */\n    static duplicate(position, options = {}) {\n        if (!(position instanceof _a)) {\n            throw new TypeError(`'position' is not an instance of TJSPosition.`);\n        }\n        const newPosition = new _a(options);\n        newPosition.#options = Object.assign({}, position.#options, options);\n        newPosition.#validators.add(...position.#validators);\n        newPosition.set(position.#data);\n        return newPosition;\n    }\n    /**\n     * @param [parentOrOptions] - A  potential parent element or object w/ `elementTarget` accessor. You may also forego\n     *        setting the parent and pass in the options object.\n     *\n     * @param [options] - The options object.\n     */\n    constructor(parentOrOptions, options) {\n        // Test if `parent` is a plain object; if so treat as options object.\n        if (isPlainObject(parentOrOptions)) {\n            options = parentOrOptions;\n        }\n        else {\n            this.#parent = parentOrOptions;\n        }\n        this.#styleCache = new TJSPositionStyleCache();\n        const updateData = new UpdateElementData(this.#positionChangeSet, this.#data, this.#options, this.#styleCache, this.#subscribers, this.#transforms);\n        this.#updateElementData = updateData;\n        // Set TJSPosition options -------------------------------------------------------------------------------------\n        if (typeof options?.calculateTransform === 'boolean') {\n            this.#options.calculateTransform = options.calculateTransform;\n        }\n        if (typeof options?.ortho === 'boolean') {\n            this.#options.ortho = options.ortho;\n        }\n        // Initialize stores -------------------------------------------------------------------------------------------\n        this.#stores = Object.freeze({\n            // The main properties for manipulating TJSPosition.\n            height: propertyStore(this, 'height'),\n            left: propertyStore(this, 'left'),\n            rotateX: propertyStore(this, 'rotateX'),\n            rotateY: propertyStore(this, 'rotateY'),\n            rotateZ: propertyStore(this, 'rotateZ'),\n            scale: propertyStore(this, 'scale'),\n            top: propertyStore(this, 'top'),\n            transformOrigin: propertyStore(this, 'transformOrigin'),\n            translateX: propertyStore(this, 'translateX'),\n            translateY: propertyStore(this, 'translateY'),\n            translateZ: propertyStore(this, 'translateZ'),\n            width: propertyStore(this, 'width'),\n            zIndex: propertyStore(this, 'zIndex'),\n            // Stores that control validation when width / height is not `auto`.\n            maxHeight: propertyStore(this, 'maxHeight'),\n            maxWidth: propertyStore(this, 'maxWidth'),\n            minHeight: propertyStore(this, 'minHeight'),\n            minWidth: propertyStore(this, 'minWidth'),\n            // Readable stores based on updates or from resize observer changes.\n            dimension: { subscribe: updateData.storeDimension.subscribe },\n            element: { subscribe: this.#styleCache.stores.element.subscribe },\n            resizeContentHeight: { subscribe: this.#styleCache.stores.resizeContentHeight.subscribe },\n            resizeContentWidth: { subscribe: this.#styleCache.stores.resizeContentWidth.subscribe },\n            resizeObservable: { subscribe: this.#styleCache.stores.resizeObservable.subscribe },\n            resizeOffsetHeight: { subscribe: this.#styleCache.stores.resizeOffsetHeight.subscribe },\n            resizeOffsetWidth: { subscribe: this.#styleCache.stores.resizeOffsetWidth.subscribe },\n            transform: { subscribe: updateData.storeTransform.subscribe },\n            // Protected store that should only be set by resizeObserver action.\n            resizeObserved: this.#styleCache.stores.resizeObserved,\n        });\n        /**\n         * Define 'values' getter to retrieve static transform origins.\n         */\n        Object.defineProperty(this.#stores.transformOrigin, 'values', {\n            get: () => _a.transformOrigins\n        });\n        // When resize change from any applied `resizeObserver` action automatically set data for new validation run.\n        // A resizeObserver prop should be set to true for ApplicationShell components or usage of resizeObserver action\n        // to monitor for changes. This should only be used on elements that have 'auto' or `inherit` for width or height.\n        subscribeIgnoreFirst(this.#stores.resizeObserved, (resizeData) => {\n            const parent = this.#parent;\n            const el = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n            // Only invoke set if there is a target element and the resize data has a valid offset width & height.\n            if (A11yHelper.isFocusTarget(el) && Number.isFinite(resizeData?.offsetWidth) &&\n                Number.isFinite(resizeData?.offsetHeight)) {\n                this.set();\n            }\n        });\n        [this.#validators, this.#validatorData] = AdapterValidators.create(() => this.set());\n        if (options?.initial) {\n            const initial = options.initial;\n            if (typeof initial?.getLeft !== 'function' || typeof initial?.getTop !== 'function') {\n                throw new Error(`'options.initial' position helper does not contain 'getLeft' and / or 'getTop' functions.`);\n            }\n            this.#options.initial = initial;\n        }\n        if (options?.validator) {\n            if (isIterable(options?.validator)) {\n                this.validators.add(...options.validator);\n            }\n            else {\n                /**\n                 */\n                const validatorFn = options.validator;\n                this.validators.add(validatorFn);\n            }\n        }\n        Object.seal(this);\n        // Set any remaining position data.\n        if (isObject(options)) {\n            this.set(options);\n        }\n    }\n    /**\n     * Returns the animation API.\n     *\n     * @returns Animation instance API.\n     */\n    get animate() {\n        return this.#animate;\n    }\n    /**\n     * Returns the dimension data for the readable store.\n     *\n     * @returns Dimension data.\n     */\n    get dimension() {\n        return this.#updateElementData.dimensionData;\n    }\n    /**\n     * Returns the enabled state.\n     *\n     * @returns Enabled state.\n     */\n    get enabled() {\n        return this.#enabled;\n    }\n    /**\n     * Returns the current HTMLElement being positioned.\n     *\n     * @returns Current HTMLElement being positioned.\n     */\n    get element() {\n        return this.#styleCache.el;\n    }\n    /**\n     * Returns a promise that is resolved on the next element update with the time of the update.\n     *\n     * @returns Promise resolved on element update.\n     */\n    get elementUpdated() {\n        return this.#updateElementPromise;\n    }\n    /**\n     * Returns the associated {@link TJSPosition.PositionParent} instance.\n     *\n     * @returns The current position parent instance.\n     */\n    get parent() { return this.#parent; }\n    /**\n     * Returns the state API.\n     *\n     * @returns TJSPosition state API.\n     */\n    get state() { return this.#state; }\n    /**\n     * Returns the derived writable stores for individual data variables.\n     *\n     * @returns Derived / writable stores.\n     */\n    get stores() { return this.#stores; }\n    /**\n     * Returns the transform data for the readable store.\n     *\n     * @returns Transform Data.\n     */\n    get transform() {\n        return this.#updateElementData.transformData;\n    }\n    /**\n     * Returns the validators.\n     *\n     * @returns Validators API\n     */\n    get validators() { return this.#validators; }\n    /**\n     * Sets the enabled state.\n     *\n     * @param enabled - New enabled state.\n     */\n    set enabled(enabled) {\n        if (typeof enabled !== 'boolean') {\n            throw new TypeError(`'enabled' is not a boolean.`);\n        }\n        this.#enabled = enabled;\n    }\n    /**\n     * Sets the associated {@link TJSPosition.PositionParent} instance. Resets the style cache and default data.\n     *\n     * @param parent - A PositionParent instance or undefined to disassociate\n     */\n    set parent(parent) {\n        if (parent !== void 0 && !A11yHelper.isFocusTarget(parent) && !isObject(parent)) {\n            throw new TypeError(`'parent' is not an HTMLElement, object, or undefined.`);\n        }\n        this.#parent = parent;\n        // Reset any stored default data & the style cache.\n        this.#state.remove({ name: '#defaultData' });\n        this.#styleCache.reset();\n        // If a parent is defined then invoke set to update any parent element.\n        if (parent) {\n            this.set(this.#data);\n        }\n    }\n    // Data accessors ----------------------------------------------------------------------------------------------------\n    /**\n     * @returns height\n     */\n    get height() { return this.#data.height; }\n    /**\n     * @returns left\n     */\n    get left() { return this.#data.left; }\n    /**\n     * @returns maxHeight\n     */\n    get maxHeight() { return this.#data.maxHeight; }\n    /**\n     * @returns maxWidth\n     */\n    get maxWidth() { return this.#data.maxWidth; }\n    /**\n     * @returns minHeight\n     */\n    get minHeight() { return this.#data.minHeight; }\n    /**\n     * @returns minWidth\n     */\n    get minWidth() { return this.#data.minWidth; }\n    /**\n     * @returns rotateX\n     */\n    get rotateX() { return this.#data.rotateX; }\n    /**\n     * @returns rotateY\n     */\n    get rotateY() { return this.#data.rotateY; }\n    /**\n     * @returns rotateZ\n     */\n    get rotateZ() { return this.#data.rotateZ; }\n    /**\n     * @returns Alias for rotateZ\n     */\n    get rotation() { return this.#data.rotateZ; }\n    /**\n     * @returns scale\n     */\n    get scale() { return this.#data.scale; }\n    /**\n     * @returns top\n     */\n    get top() { return this.#data.top; }\n    /**\n     * @returns transformOrigin\n     */\n    get transformOrigin() { return this.#data.transformOrigin; }\n    /**\n     * @returns translateX\n     */\n    get translateX() { return this.#data.translateX; }\n    /**\n     * @returns translateY\n     */\n    get translateY() { return this.#data.translateY; }\n    /**\n     * @returns translateZ\n     */\n    get translateZ() { return this.#data.translateZ; }\n    /**\n     * @returns width\n     */\n    get width() { return this.#data.width; }\n    /**\n     * @returns z-index\n     */\n    get zIndex() { return this.#data.zIndex; }\n    /**\n     * @param height -\n     */\n    set height(height) {\n        this.#stores.height.set(height);\n    }\n    /**\n     * @param left -\n     */\n    set left(left) {\n        this.#stores.left.set(left);\n    }\n    /**\n     * @param maxHeight -\n     */\n    set maxHeight(maxHeight) {\n        this.#stores.maxHeight.set(maxHeight);\n    }\n    /**\n     * @param maxWidth -\n     */\n    set maxWidth(maxWidth) {\n        this.#stores.maxWidth.set(maxWidth);\n    }\n    /**\n     * @param minHeight -\n     */\n    set minHeight(minHeight) {\n        this.#stores.minHeight.set(minHeight);\n    }\n    /**\n     * @param minWidth -\n     */\n    set minWidth(minWidth) {\n        this.#stores.minWidth.set(minWidth);\n    }\n    /**\n     * @param rotateX -\n     */\n    set rotateX(rotateX) {\n        this.#stores.rotateX.set(rotateX);\n    }\n    /**\n     * @param rotateY -\n     */\n    set rotateY(rotateY) {\n        this.#stores.rotateY.set(rotateY);\n    }\n    /**\n     * @param rotateZ -\n     */\n    set rotateZ(rotateZ) {\n        this.#stores.rotateZ.set(rotateZ);\n    }\n    /**\n     * @param  rotateZ - alias for rotateZ\n     */\n    set rotation(rotateZ) {\n        this.#stores.rotateZ.set(rotateZ);\n    }\n    /**\n     * @param scale -\n     */\n    set scale(scale) {\n        this.#stores.scale.set(scale);\n    }\n    /**\n     * @param top -\n     */\n    set top(top) {\n        this.#stores.top.set(top);\n    }\n    /**\n     * @param transformOrigin -\n     */\n    set transformOrigin(transformOrigin) {\n        if (TJSTransforms.transformOrigins.includes(transformOrigin)) {\n            this.#stores.transformOrigin.set(transformOrigin);\n        }\n    }\n    /**\n     * @param translateX -\n     */\n    set translateX(translateX) {\n        this.#stores.translateX.set(translateX);\n    }\n    /**\n     * @param translateY -\n     */\n    set translateY(translateY) {\n        this.#stores.translateY.set(translateY);\n    }\n    /**\n     * @param translateZ -\n     */\n    set translateZ(translateZ) {\n        this.#stores.translateZ.set(translateZ);\n    }\n    /**\n     * @param width -\n     */\n    set width(width) {\n        this.#stores.width.set(width);\n    }\n    /**\n     * @param zIndex -\n     */\n    set zIndex(zIndex) {\n        this.#stores.zIndex.set(zIndex);\n    }\n    /**\n     * Assigns current position data to given object `data` object. By default, `null` position data is not assigned.\n     * Other options allow configuration of the data assigned including setting default numeric values for any properties\n     * that are null.\n     *\n     * @param [data] - Target to assign current position data.\n     *\n     * @param [options] - Defines options for specific keys and substituting null for numeric default values. By\n     *        default, nullable keys are included.\n     *\n     * @returns Passed in object with current position data.\n     */\n    get(data = {}, options = {}) {\n        const keys = options?.keys;\n        const excludeKeys = options?.exclude;\n        const nullable = options?.nullable ?? true;\n        const numeric = options?.numeric ?? false;\n        if (isIterable(keys)) {\n            for (const key of keys) {\n                // Convert any null values to numeric defaults if `numeric` is true.\n                data[key] = numeric ? TJSPositionDataUtil.getDataOrDefault(this, key) : this[key];\n                // Potentially remove null keys.\n                if (!nullable && data[key] === null) {\n                    delete data[key];\n                }\n            }\n            // Remove any excluded keys.\n            if (isIterable(excludeKeys)) {\n                for (const key of excludeKeys) {\n                    delete data[key];\n                }\n            }\n            return data;\n        }\n        else {\n            data = Object.assign(data, this.#data);\n            // Remove any excluded keys.\n            if (isIterable(excludeKeys)) {\n                for (const key of excludeKeys) {\n                    delete data[key];\n                }\n            }\n            // Potentially set numeric defaults.\n            if (numeric) {\n                TJSPositionDataUtil.setNumericDefaults(data);\n            }\n            if (!nullable) {\n                for (const key in data) {\n                    if (data[key] === null) {\n                        delete data[key];\n                    }\n                }\n            }\n            return data;\n        }\n    }\n    /**\n     * @returns Current position data.\n     */\n    toJSON() {\n        return Object.assign({}, this.#data);\n    }\n    /**\n     * All calculation and updates of position are implemented in {@link TJSPosition}. This allows position to be fully\n     * reactive and in control of updating inline styles for a connected {@link HTMLElement}.\n     *\n     * The initial set call with a target element will always set width / height as this is necessary for correct\n     * calculations.\n     *\n     * When a target element is present updated styles are applied after validation. To modify the behavior of set\n     * implement one or more validator functions and add them via the validator API available from\n     * {@link TJSPosition.validators}.\n     *\n     * Updates to any target element are decoupled from the underlying TJSPosition data. This method returns this\n     * instance that you can then await on the target element inline style update by using\n     * {@link TJSPosition.elementUpdated}.\n     *\n     * Relative updates to any property of {@link TJSPositionData} are possible by specifying properties as strings.\n     * This string should be in the form of '+=', '-=', or '*=' and float / numeric value. IE '+=0.2'.\n     * {@link TJSPosition.set} will apply the `addition`, `subtraction`, or `multiplication` operation specified against\n     * the current value of the given property. Please see {@link Data.TJSPositionDataRelative} for a detailed\n     * description.\n     *\n     * @param [position] - TJSPosition data to set.\n     *\n     * @param [options] - Additional options.\n     *\n     * @returns This TJSPosition instance.\n     */\n    set(position = {}, options = {}) {\n        if (!isObject(position)) {\n            throw new TypeError(`TJSPosition - set error: 'position' is not an object.`);\n        }\n        // TJSPosition.PositionParent\n        const parent = this.#parent;\n        // An early out to prevent `set` from taking effect if not enabled.\n        if (!this.#enabled) {\n            return this;\n        }\n        // An early out to prevent `set` from taking effect if options `positionable` is false.\n        // TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n        if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable) {\n            return this;\n        }\n        const immediateElementUpdate = options?.immediateElementUpdate ?? false;\n        const data = this.#data;\n        const transforms = this.#transforms;\n        // Find the target HTML element and verify that it is connected storing it in `el`.\n        const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n        const el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl :\n            void 0;\n        const changeSet = this.#positionChangeSet;\n        const styleCache = this.#styleCache;\n        if (el) {\n            // Cache the computed styles of the element.\n            if (!styleCache.hasData(el)) {\n                styleCache.update(el);\n                // Add will-change property if not already set in inline or computed styles.\n                if (!styleCache.hasWillChange) ;\n                // Update all properties / clear queued state.\n                changeSet.set(true);\n                this.#updateElementData.queued = false;\n            }\n            // Converts any string position data to numeric inputs.\n            ConvertStringData.process(position, this.#data, el);\n            position = this.#updatePosition(position, parent, el, styleCache);\n            // Check if a validator cancelled the update.\n            if (position === null) {\n                return this;\n            }\n        }\n        if (NumberGuard.isFinite(position.left)) {\n            position.left = Math.round(position.left);\n            if (data.left !== position.left) {\n                data.left = position.left;\n                changeSet.left = true;\n            }\n        }\n        if (NumberGuard.isFinite(position.top)) {\n            position.top = Math.round(position.top);\n            if (data.top !== position.top) {\n                data.top = position.top;\n                changeSet.top = true;\n            }\n        }\n        if (NumberGuard.isFiniteOrNull(position.maxHeight)) {\n            position.maxHeight = typeof position.maxHeight === 'number' ? Math.round(position.maxHeight) : null;\n            if (data.maxHeight !== position.maxHeight) {\n                data.maxHeight = position.maxHeight;\n                changeSet.maxHeight = true;\n            }\n        }\n        if (NumberGuard.isFiniteOrNull(position.maxWidth)) {\n            position.maxWidth = typeof position.maxWidth === 'number' ? Math.round(position.maxWidth) : null;\n            if (data.maxWidth !== position.maxWidth) {\n                data.maxWidth = position.maxWidth;\n                changeSet.maxWidth = true;\n            }\n        }\n        if (NumberGuard.isFiniteOrNull(position.minHeight)) {\n            position.minHeight = typeof position.minHeight === 'number' ? Math.round(position.minHeight) : null;\n            if (data.minHeight !== position.minHeight) {\n                data.minHeight = position.minHeight;\n                changeSet.minHeight = true;\n            }\n        }\n        if (NumberGuard.isFiniteOrNull(position.minWidth)) {\n            position.minWidth = typeof position.minWidth === 'number' ? Math.round(position.minWidth) : null;\n            if (data.minWidth !== position.minWidth) {\n                data.minWidth = position.minWidth;\n                changeSet.minWidth = true;\n            }\n        }\n        if (NumberGuard.isFiniteOrNull(position.rotateX)) {\n            if (data.rotateX !== position.rotateX) {\n                data.rotateX = transforms.rotateX = position.rotateX;\n                changeSet.transform = true;\n            }\n        }\n        if (NumberGuard.isFiniteOrNull(position.rotateY)) {\n            if (data.rotateY !== position.rotateY) {\n                data.rotateY = transforms.rotateY = position.rotateY;\n                changeSet.transform = true;\n            }\n        }\n        if (NumberGuard.isFiniteOrNull(position.rotateZ)) {\n            if (data.rotateZ !== position.rotateZ) {\n                data.rotateZ = transforms.rotateZ = position.rotateZ;\n                changeSet.transform = true;\n            }\n        }\n        if (NumberGuard.isFiniteOrNull(position.scale)) {\n            position.scale = typeof position.scale === 'number' ? clamp(position.scale, 0, 1000) : null;\n            if (data.scale !== position.scale) {\n                data.scale = transforms.scale = position.scale;\n                changeSet.transform = true;\n            }\n        }\n        if ((typeof position.transformOrigin === 'string' && TJSTransforms.transformOrigins.includes(position.transformOrigin)) || position.transformOrigin === null) {\n            if (data.transformOrigin !== position.transformOrigin) {\n                data.transformOrigin = position.transformOrigin;\n                changeSet.transformOrigin = true;\n            }\n        }\n        if (NumberGuard.isFiniteOrNull(position.translateX)) {\n            if (data.translateX !== position.translateX) {\n                data.translateX = transforms.translateX = position.translateX;\n                changeSet.transform = true;\n            }\n        }\n        if (NumberGuard.isFiniteOrNull(position.translateY)) {\n            if (data.translateY !== position.translateY) {\n                data.translateY = transforms.translateY = position.translateY;\n                changeSet.transform = true;\n            }\n        }\n        if (NumberGuard.isFiniteOrNull(position.translateZ)) {\n            if (data.translateZ !== position.translateZ) {\n                data.translateZ = transforms.translateZ = position.translateZ;\n                changeSet.transform = true;\n            }\n        }\n        if (NumberGuard.isFinite(position.zIndex)) {\n            position.zIndex = Math.round(position.zIndex);\n            if (data.zIndex !== position.zIndex) {\n                data.zIndex = position.zIndex;\n                changeSet.zIndex = true;\n            }\n        }\n        const widthIsObservable = position.width === 'auto' || position.width === 'inherit';\n        if (NumberGuard.isFiniteOrNull(position.width) || widthIsObservable) {\n            position.width = typeof position.width === 'number' ? Math.round(position.width) : position.width;\n            if (data.width !== position.width) {\n                data.width = position.width;\n                changeSet.width = true;\n            }\n        }\n        const heightIsObservable = position.height === 'auto' || position.height === 'inherit';\n        if (NumberGuard.isFiniteOrNull(position.height) || heightIsObservable) {\n            position.height = typeof position.height === 'number' ? Math.round(position.height) : position.height;\n            if (data.height !== position.height) {\n                data.height = position.height;\n                changeSet.height = true;\n            }\n        }\n        // Potentially update the `resizeObservable` store when the state of `width` or `height` changes between\n        // `auto` / `inherit` to a number or null.\n        const resizeObservable = widthIsObservable || heightIsObservable;\n        if (this.#resizeObservable !== resizeObservable) {\n            this.#resizeObservable = resizeObservable;\n            // Set store on next clock tick.\n            // setTimeout(() => this.#styleCache.stores.resizeObservable.set(resizeObservable), 0);\n            this.#styleCache.stores.resizeObservable.set(resizeObservable);\n        }\n        if (el) {\n            const defaultData = this.#state.getDefault();\n            // Set default data after first set operation that has a target element.\n            if (!isObject(defaultData)) {\n                this.#state.save({ name: '#defaultData', ...Object.assign({}, data) });\n            }\n            // If `immediateElementUpdate` is true then update the element immediately. This is for rAF based library\n            // integrations like GSAP and updates coming from AnimationManager.\n            if (immediateElementUpdate) {\n                UpdateElementManager.immediate(el, this.#updateElementData);\n                this.#updateElementPromise = Promise.resolve(globalThis.performance.now());\n            }\n            // Else if not queued then queue an update for the next rAF callback.\n            else if (!this.#updateElementData.queued) {\n                this.#updateElementPromise = UpdateElementManager.add(el, this.#updateElementData);\n            }\n        }\n        else {\n            // Notify main store subscribers.\n            UpdateElementManager.updateSubscribers(this.#updateElementData);\n        }\n        return this;\n    }\n    /**\n     * @param handler - Callback function that is invoked on update / changes. Receives a readonly copy of the\n     *        TJSPositionData.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        const currentIdx = this.#subscribers.findIndex((entry) => entry === handler);\n        if (currentIdx === -1) {\n            this.#subscribers.push(handler); // add handler to the array of subscribers\n            handler(Object.assign({}, this.#data)); // call handler with current value\n        }\n        // Return unsubscribe function.\n        return () => {\n            const existingIdx = this.#subscribers.findIndex((entry) => entry === handler);\n            if (existingIdx !== -1) {\n                this.#subscribers.splice(existingIdx, 1);\n            }\n        };\n    }\n    /**\n     * Provides the {@link Writable} store `update` method. Receive and return a {@link TJSPositionData} instance to\n     * update the position state. You may manipulate numeric properties by providing relative adjustments described in\n     * {@link TJSPositionDataRelative}.\n     *\n     * @param updater -\n     */\n    update(updater) {\n        const result = updater(this.get());\n        if (!isObject(result)) {\n            throw new TypeError(`'result' of 'updater' is not an object.`);\n        }\n        this.set(result);\n    }\n    // Internal Implementation ----------------------------------------------------------------------------------------\n    /**\n     * Temporary data storage for `TJSPosition.#updatePosition`.\n     */\n    static #updateDataCopy = Object.seal(new TJSPositionData());\n    /**\n     * Temporary data storage for `TJSPosition.#updatePosition`.\n     */\n    static #validationData = Object.seal({\n        position: void 0,\n        parent: void 0,\n        el: void 0,\n        computed: void 0,\n        transforms: void 0,\n        height: void 0,\n        width: void 0,\n        marginLeft: void 0,\n        marginTop: void 0,\n        maxHeight: void 0,\n        maxWidth: void 0,\n        minHeight: void 0,\n        minWidth: void 0,\n        rest: void 0\n    });\n    /**\n     * @param data -\n     *\n     * @param parent -\n     *\n     * @param el -\n     *\n     * @param styleCache -\n     *\n     * @returns Updated position data or null if validation fails.\n     */\n    #updatePosition({ \n    // Directly supported parameters\n    left, top, maxWidth, maxHeight, minWidth, minHeight, width, height, rotateX, rotateY, rotateZ, scale, transformOrigin, translateX, translateY, translateZ, zIndex, \n    // Aliased parameters\n    rotation, ...rest }, parent, el, styleCache) {\n        let currentPosition = TJSPositionDataUtil.copyData(this.#data, _a.#updateDataCopy);\n        // Update width if an explicit value is passed, or if no width value is set on the element.\n        if (width !== void 0 || el.style.width === '') {\n            const widthValid = width === null || Number.isFinite(width);\n            if (width === 'auto' || (currentPosition.width === 'auto' && !widthValid)) {\n                currentPosition.width = 'auto';\n                width = styleCache.offsetWidth;\n            }\n            else if (width === 'inherit' || (currentPosition.width === 'inherit' && !widthValid)) {\n                currentPosition.width = 'inherit';\n                width = styleCache.offsetWidth;\n            }\n            else {\n                const newWidth = NumberGuard.isFinite(width) ? width :\n                    currentPosition.width;\n                currentPosition.width = width = NumberGuard.isFinite(newWidth) ? Math.round(newWidth) :\n                    styleCache.offsetWidth;\n            }\n        }\n        else {\n            width = Number.isFinite(currentPosition.width) ? currentPosition.width : styleCache.offsetWidth;\n        }\n        // Update height if an explicit value is passed, or if no height value is set on the element.\n        if (height !== void 0 || el.style.height === '') {\n            const heightValid = height === null || Number.isFinite(height);\n            if (height === 'auto' || (currentPosition.height === 'auto' && !heightValid)) {\n                currentPosition.height = 'auto';\n                height = styleCache.offsetHeight;\n            }\n            else if (height === 'inherit' || (currentPosition.height === 'inherit' && !heightValid)) {\n                currentPosition.height = 'inherit';\n                height = styleCache.offsetHeight;\n            }\n            else {\n                const newHeight = NumberGuard.isFinite(height) ? height :\n                    currentPosition.height;\n                currentPosition.height = height = NumberGuard.isFinite(newHeight) ? Math.round(newHeight) :\n                    styleCache.offsetHeight;\n            }\n        }\n        else {\n            height = Number.isFinite(currentPosition.height) ? currentPosition.height : styleCache.offsetHeight;\n        }\n        // Update left\n        if (NumberGuard.isFinite(left)) {\n            currentPosition.left = left;\n        }\n        else if (!Number.isFinite(currentPosition.left)) {\n            // Potentially use any initial position helper if available or set to 0.\n            currentPosition.left = typeof this.#options?.initial?.getLeft === 'function' ?\n                this.#options.initial.getLeft(width) : 0;\n        }\n        // Update top\n        if (Number.isFinite(top)) {\n            currentPosition.top = top;\n        }\n        else if (!Number.isFinite(currentPosition.top)) {\n            // Potentially use any initial position helper if available or set to 0.\n            currentPosition.top = typeof this.#options?.initial?.getTop === 'function' ?\n                this.#options.initial.getTop(height) : 0;\n        }\n        if (NumberGuard.isFiniteOrNull(maxHeight)) {\n            currentPosition.maxHeight = NumberGuard.isFinite(maxHeight) ? Math.round(maxHeight) : null;\n        }\n        if (NumberGuard.isFiniteOrNull(maxWidth)) {\n            currentPosition.maxWidth = NumberGuard.isFinite(maxWidth) ? Math.round(maxWidth) : null;\n        }\n        if (NumberGuard.isFiniteOrNull(minHeight)) {\n            currentPosition.minHeight = NumberGuard.isFinite(minHeight) ? Math.round(minHeight) : null;\n        }\n        if (NumberGuard.isFiniteOrNull(minWidth)) {\n            currentPosition.minWidth = NumberGuard.isFinite(minWidth) ? Math.round(minWidth) : null;\n        }\n        // Update rotate X/Y/Z, scale, z-index\n        if (NumberGuard.isFiniteOrNull(rotateX)) {\n            currentPosition.rotateX = rotateX;\n        }\n        if (NumberGuard.isFiniteOrNull(rotateY)) {\n            currentPosition.rotateY = rotateY;\n        }\n        // Handle alias for rotateZ. First check if `rotateZ` is valid and different from the current value. Next check if\n        // `rotation` is valid and use it for `rotateZ`.\n        if (rotateZ !== currentPosition.rotateZ && (NumberGuard.isFiniteOrNull(rotateZ))) {\n            currentPosition.rotateZ = rotateZ;\n        }\n        else if (rotation !== currentPosition.rotateZ && (NumberGuard.isFiniteOrNull(rotation))) {\n            currentPosition.rotateZ = rotation;\n        }\n        if (NumberGuard.isFiniteOrNull(translateX)) {\n            currentPosition.translateX = translateX;\n        }\n        if (NumberGuard.isFiniteOrNull(translateY)) {\n            currentPosition.translateY = translateY;\n        }\n        if (NumberGuard.isFiniteOrNull(translateZ)) {\n            currentPosition.translateZ = translateZ;\n        }\n        if (NumberGuard.isFiniteOrNull(scale)) {\n            currentPosition.scale = typeof scale === 'number' ? clamp(scale, 0, 1000) : null;\n        }\n        if (typeof transformOrigin === 'string' || transformOrigin === null) {\n            currentPosition.transformOrigin = TJSTransforms.transformOrigins.includes(transformOrigin) ? transformOrigin :\n                null;\n        }\n        if (NumberGuard.isFiniteOrNull(zIndex)) {\n            currentPosition.zIndex = typeof zIndex === 'number' ? Math.round(zIndex) : zIndex;\n        }\n        const validatorData = this.#validatorData;\n        // If there are any validators allow them to potentially modify position data or reject the update.\n        if (this.#validators.enabled && validatorData.length) {\n            const validationData = _a.#validationData;\n            validationData.parent = parent;\n            validationData.el = el;\n            validationData.computed = styleCache.computed;\n            validationData.transforms = this.#transforms;\n            validationData.height = height;\n            validationData.width = width;\n            validationData.marginLeft = styleCache.marginLeft;\n            validationData.marginTop = styleCache.marginTop;\n            validationData.maxHeight = styleCache.maxHeight ?? currentPosition.maxHeight;\n            validationData.maxWidth = styleCache.maxWidth ?? currentPosition.maxWidth;\n            // Given a parent w/ reactive state and is minimized ignore styleCache min-width/height.\n            // TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n            const isMinimized = parent?.reactive?.minimized ?? false;\n            // Note the use of || for accessing the style cache as the left hand is ignored w/ falsy values such as '0'.\n            validationData.minHeight = isMinimized ? currentPosition.minHeight ?? 0 :\n                styleCache.minHeight || (currentPosition.minHeight ?? 0);\n            validationData.minWidth = isMinimized ? currentPosition.minWidth ?? 0 :\n                styleCache.minWidth || (currentPosition.minWidth ?? 0);\n            for (let cntr = 0; cntr < validatorData.length; cntr++) {\n                validationData.position = currentPosition;\n                validationData.rest = rest;\n                currentPosition = validatorData[cntr].validate(validationData);\n                if (currentPosition === null) {\n                    return null;\n                }\n            }\n        }\n        // Return the updated position object.\n        return currentPosition;\n    }\n}\n_a = TJSPosition;\n\nexport { TJSPosition, applyPosition, draggable };\n//# sourceMappingURL=index.js.map\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","import { TJSStyleManager } from '@typhonjs-fvtt/runtime/util/dom/style';\n\nexport const cssVariables = new TJSStyleManager({ docKey: '#__trl-root-styles', version: 1 });\n","import { isWritableStore } from '@typhonjs-fvtt/runtime/svelte/store/util';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { StyleParse } from '@typhonjs-fvtt/runtime/util/dom/style';\nimport { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides an instance of {@link ResizeObserver} that can manage multiple elements and notify a wide range of\n * {@link ResizeObserverData.ResizeTarget} listeners. Offset width and height is also provided through caching the\n * margin and padding styles of the target element.\n *\n * The action, {@link resizeObserver}, utilizes ResizeObserverManager for automatic registration and removal\n * via Svelte.\n */\nclass ResizeObserverManager\n{\n   /** @type {Map<HTMLElement, import('./types-local').ResizeObserverSubscriber[]>} */\n   #elMap = new Map();\n\n   /** @type {ResizeObserver} */\n   #resizeObserver;\n\n   /**\n    * Defines the various shape / update type of the given target.\n    *\n    * @type {{ [key: string]: number }}\n    */\n   static #updateTypes = Object.freeze({\n      none: 0,\n      attribute: 1,\n      function: 2,\n      resizeObserved: 3,\n      setContentBounds: 4,\n      setDimension: 5,\n      storeObject: 6,\n      storesObject: 7\n   });\n\n   constructor()\n   {\n      this.#resizeObserver = new ResizeObserver((entries) =>\n      {\n         for (const entry of entries)\n         {\n            const subscribers = this.#elMap.get(entry?.target);\n\n            if (Array.isArray(subscribers))\n            {\n               const contentWidth = entry.contentRect.width;\n               const contentHeight = entry.contentRect.height;\n\n               for (const subscriber of subscribers)\n               {\n                  ResizeObserverManager.#updateSubscriber(subscriber, contentWidth, contentHeight);\n               }\n            }\n         }\n      });\n   }\n\n   /**\n    * Add an {@link HTMLElement} and {@link ResizeObserverData.ResizeTarget} instance for monitoring. Create cached\n    * style attributes for the given element include border & padding dimensions for offset width / height calculations.\n    *\n    * @param {HTMLElement}    el - The element to observe.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget} target - A target that contains one of several\n    *        mechanisms for updating resize data.\n    */\n   add(el, target)\n   {\n      if (!CrossWindow.isHTMLElement(el))\n      {\n         throw new TypeError(`ResizeObserverManager.add error: 'el' is not a HTMLElement.`);\n      }\n\n      // Verify that this target is not already added for this element.\n      if (this.#hasTarget(el, target)) { return; }\n\n      const updateType = ResizeObserverManager.#getUpdateType(target);\n\n      if (updateType === 0)\n      {\n         throw new Error(`ResizeObserverManager.add error: 'target' is not a valid ResizeObserverManager target.`);\n      }\n\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n      const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n      const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n      const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n      const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ?? StyleParse.pixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n      const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n      const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n      /** @type {import('./types-local').ResizeObserverSubscriber} */\n      const data = {\n         updateType,\n         target,\n\n         // Stores most recent contentRect.width and contentRect.height values from ResizeObserver.\n         contentWidth: 0,\n         contentHeight: 0,\n\n         // Convenience data for total border & padding for offset width & height calculations.\n         styles: {\n            additionalWidth: borderLeft + borderRight + paddingLeft + paddingRight,\n            additionalHeight: borderTop + borderBottom + paddingTop + paddingBottom\n         }\n      };\n\n      if (this.#elMap.has(el))\n      {\n         const subscribers = this.#elMap.get(el);\n         subscribers.push(data);\n      }\n      else\n      {\n         this.#elMap.set(el, [data]);\n      }\n\n      this.#resizeObserver.observe(el);\n   }\n\n   /**\n    * Clears and unobserves all currently tracked elements and managed targets.\n    */\n   clear()\n   {\n      for (const el of this.#elMap.keys()) { this.#resizeObserver.unobserve(el); }\n\n      this.#elMap.clear();\n   }\n\n   /**\n    * Removes all {@link ResizeObserverData.ResizeTarget} instances for the given element from monitoring when just an\n    * element is provided otherwise removes a specific target from the monitoring map. If no more targets remain then\n    * the element is removed from monitoring.\n    *\n    * @param {HTMLElement} el - Element to remove from monitoring.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget} [target] - A specific target to remove from monitoring.\n    */\n   remove(el, target = void 0)\n   {\n      const subscribers = this.#elMap.get(el);\n      if (Array.isArray(subscribers))\n      {\n         // Remove specific target from subscribers.\n         if (target !== void 0)\n         {\n            const index = subscribers.findIndex((entry) => entry.target === target);\n            if (index >= 0)\n            {\n               subscribers.splice(index, 1);\n            }\n         }\n         else\n         {\n            // Remove all subscribers.\n            subscribers.length = 0;\n         }\n\n         // Remove element monitoring if last target removed.\n         if (subscribers.length === 0)\n         {\n            this.#elMap.delete(el);\n            this.#resizeObserver.unobserve(el);\n         }\n      }\n   }\n\n   /**\n    * Provides a function that when invoked with an element updates the cached styles for each subscriber of the\n    * element.\n    *\n    * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n    * to update the cache if you change border or padding attributes of the element.\n    *\n    * @param {HTMLElement} el - A HTML element.\n    */\n   updateCache(el)\n   {\n      const subscribers = this.#elMap.get(el);\n\n      if (Array.isArray(subscribers))\n      {\n         const computed = globalThis.getComputedStyle(el);\n\n         // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n         // Used to create the offset width & height values from the context box ResizeObserver provides.\n         const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n         const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n         const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n         const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n         const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ??\n          StyleParse.pixels(computed.paddingBottom) ?? 0;\n         const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n         const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n         const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n         const additionalWidth = borderLeft + borderRight + paddingLeft + paddingRight;\n         const additionalHeight = borderTop + borderBottom + paddingTop + paddingBottom;\n\n         for (const subscriber of subscribers)\n         {\n            subscriber.styles.additionalWidth = additionalWidth;\n            subscriber.styles.additionalHeight = additionalHeight;\n            ResizeObserverManager.#updateSubscriber(subscriber, subscriber.contentWidth, subscriber.contentHeight);\n         }\n      }\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Determines the shape of the target instance regarding valid update mechanisms to set width & height changes.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget}  target - The target instance.\n    *\n    * @returns {number} Update type value.\n    */\n   static #getUpdateType(target)\n   {\n      if (typeof target?.resizeObserved === 'function') { return this.#updateTypes.resizeObserved; }\n      if (typeof target?.setDimension === 'function') { return this.#updateTypes.setDimension; }\n      if (typeof target?.setContentBounds === 'function') { return this.#updateTypes.setContentBounds; }\n\n      const targetType = typeof target;\n\n      // Does the target have resizeObserved writable store?\n      if (targetType !== null && (targetType === 'object' || targetType === 'function'))\n      {\n         if (isWritableStore(target.resizeObserved))\n         {\n            return this.#updateTypes.storeObject;\n         }\n\n         // Now check for a child stores object which is a common TRL pattern for exposing stores.\n         const stores = target?.stores;\n         if (isObject(stores) || typeof stores === 'function')\n         {\n            if (isWritableStore(stores.resizeObserved))\n            {\n               return this.#updateTypes.storesObject;\n            }\n         }\n      }\n\n      if (targetType !== null && targetType === 'object') { return this.#updateTypes.attribute; }\n\n      if (targetType === 'function') { return this.#updateTypes.function; }\n\n      return this.#updateTypes.none;\n   }\n\n   /**\n    * Determines if a given element and target is already being observed.\n    *\n    * @param {HTMLElement} el - A HTMLElement.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget} [target] - A specific target to find.\n    *\n    * @returns {boolean} Whether the target is already being tracked for the given element.\n    */\n   #hasTarget(el, target)\n   {\n      if (target === void 0 || target === null) { return false; }\n\n      const subscribers = this.#elMap.get(el);\n      if (Array.isArray(subscribers))\n      {\n         return subscribers.findIndex((entry) => entry.target === target) >= 0;\n      }\n\n      return false;\n   }\n\n   /**\n    * Updates a subscriber target with given content width & height values. Offset width & height is calculated from\n    * the content values + cached styles.\n    *\n    * @param {import('./types-local').ResizeObserverSubscriber} subscriber - Internal data about subscriber.\n    *\n    * @param {number|undefined}  contentWidth - ResizeObserver `contentRect.width` value or undefined.\n    *\n    * @param {number|undefined}  contentHeight - ResizeObserver `contentRect.height` value or undefined.\n    */\n   static #updateSubscriber(subscriber, contentWidth, contentHeight)\n   {\n      const styles = subscriber.styles;\n\n      subscriber.contentWidth = contentWidth;\n      subscriber.contentHeight = contentHeight;\n\n      const offsetWidth = Number.isFinite(contentWidth) ? contentWidth + styles.additionalWidth : void 0;\n      const offsetHeight = Number.isFinite(contentHeight) ? contentHeight + styles.additionalHeight : void 0;\n\n      const target = subscriber.target;\n\n      switch (subscriber.updateType)\n      {\n         case this.#updateTypes.attribute:\n            target.contentWidth = contentWidth;\n            target.contentHeight = contentHeight;\n            target.offsetWidth = offsetWidth;\n            target.offsetHeight = offsetHeight;\n            break;\n\n         case this.#updateTypes.function:\n            target?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n            break;\n\n         case this.#updateTypes.resizeObserved:\n            target.resizeObserved?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n            break;\n\n         case this.#updateTypes.setContentBounds:\n            target.setContentBounds?.(contentWidth, contentHeight);\n            break;\n\n         case this.#updateTypes.setDimension:\n            target.setDimension?.(offsetWidth, offsetHeight);\n            break;\n\n         case this.#updateTypes.storeObject:\n            target.resizeObserved.update((object) =>\n            {\n               object.contentHeight = contentHeight;\n               object.contentWidth = contentWidth;\n               object.offsetHeight = offsetHeight;\n               object.offsetWidth = offsetWidth;\n\n               return object;\n            });\n            break;\n\n         case this.#updateTypes.storesObject:\n            target.stores.resizeObserved.update((object) =>\n            {\n               object.contentHeight = contentHeight;\n               object.contentWidth = contentWidth;\n               object.offsetHeight = offsetHeight;\n               object.offsetWidth = offsetWidth;\n\n               return object;\n            });\n            break;\n      }\n   }\n}\n\nexport { ResizeObserverManager };\n//# sourceMappingURL=index.js.map\n","import { ResizeObserverManager } from '@typhonjs-fvtt/runtime/util/dom/observer';\n\n/**\n * Provides a single global ResizeObserverManager instance for the resizeObserver action.\n *\n * @type {ResizeObserverManager}\n */\nconst resizeObserverActionManager = new ResizeObserverManager();\n\n/**\n * Provides an action to monitor the given {@link HTMLElement} node with {@link ResizeObserver} via\n * {@link ResizeObserverManager} posting width / height changes to the {@link ResizeObserverData.ResizeTarget} in\n * various ways depending on the shape of the target. The target can be one of the following and the\n * precedence order is listed from top to bottom:\n *\n * - has a `resizeObserved` function as attribute; offset then content width / height are passed as parameters.\n * - has a `setContentBounds` function as attribute; content width / height are passed as parameters.\n * - has a `setDimension` function as attribute; offset width / height are passed as parameters.\n * - target is an object; offset and content width / height attributes directly set on target.\n * - target is a function; the function invoked with offset then content width / height parameters.\n * - has a writable store `resizeObserved` as an attribute; updated with offset & content width / height.\n * - has an object 'stores' that has a writable store `resizeObserved` as an attribute; updated with offset &\n *   content width / height.\n *\n * Note: Svelte currently uses an archaic IFrame based workaround to monitor offset / client width & height changes.\n * A more up to date way to do this is with ResizeObserver. To track when Svelte receives ResizeObserver support\n * monitor this issue: {@link https://github.com/sveltejs/svelte/issues/4233}\n *\n * Can-I-Use: {@link https://caniuse.com/resizeobserver}\n *\n * @param {HTMLElement} node - The node associated with the action.\n *\n * @param {import('#runtime/util/dom/observer').ResizeObserverData.ResizeTarget} target - A\n *        {@link ResizeObserverManager} target to update with observed width & height changes.\n *\n * @returns {(import('svelte/action').ActionReturn<\n *   import('#runtime/util/dom/observer').ResizeObserverData.ResizeTarget\n * >)} The action lifecycle methods.\n *\n * @see https://github.com/sveltejs/svelte/issues/4233\n */\nfunction resizeObserver(node, target)\n{\n   resizeObserverActionManager.add(node, target);\n\n   return {\n      /**\n       * @param {import('#runtime/util/dom/observer').ResizeObserverData.ResizeTarget} newTarget - A\n       *        {@link ResizeObserverManager} target to update with observed width & height changes.\n       */\n      update: (newTarget) =>\n      {\n         resizeObserverActionManager.remove(node, target);\n         target = newTarget;\n         resizeObserverActionManager.add(node, target);\n      },\n\n      destroy: () =>\n      {\n         resizeObserverActionManager.remove(node, target);\n      }\n   };\n}\n\n/**\n * Provides a function that when invoked with an element updates the cached styles for each subscriber of the element.\n *\n * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n * to update the cache if you change border or padding attributes of the element.\n *\n * @param {HTMLElement} el - A HTML element.\n */\nresizeObserver.updateCache = function(el)\n{\n   resizeObserverActionManager.updateCache(el);\n};\n\nexport { resizeObserver };\n//# sourceMappingURL=index.js.map\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides an action to apply CSS style properties provided as an object.\n *\n * @param {HTMLElement} node - Target element\n *\n * @param {{ [key: string]: string | null }}  properties - Hyphen case CSS property key / value object of properties\n *        to set.\n *\n * @returns {import('svelte/action').ActionReturn<{ [key: string]: string | null }>} Lifecycle functions.\n */\nfunction applyStyles(node, properties)\n{\n   /** Sets properties on node. */\n   function setProperties()\n   {\n      if (!isObject(properties)) { return; }\n\n      for (const prop of Object.keys(properties))\n      {\n         node.style.setProperty(`${prop}`, properties[prop]);\n      }\n   }\n\n   setProperties();\n\n   return {\n      /**\n       * @param {{ [key: string]: string | null }}  newProperties - Key / value object of properties to set.\n       */\n      update: (newProperties) =>\n      {\n         properties = newProperties;\n         setProperties();\n      }\n   };\n}\n\nexport { applyStyles };\n//# sourceMappingURL=index.js.map\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Applies the given action dynamically allowing the hosted action to be updated reactively while still appropriately\n * handling the action lifecycle methods.\n *\n * @param {HTMLElement} node - The node associated with the action.\n *\n * @param {import('./types').DynamicActionOptions} options - Defines the action to dynamically mount.\n *\n * @returns {import('svelte/action').ActionReturn<import('./types').DynamicActionOptions>} The action lifecycle\n *          methods.\n */\nfunction dynamicAction(node, { action, data } = {})\n{\n   let actionResult;\n\n   if (typeof action === 'function') { actionResult = action(node, data); }\n\n   return {\n      /**\n       * @param {import('./types').DynamicActionOptions} newOptions - Defines the new action to dynamically mount.\n       */\n      update: (newOptions) =>\n      {\n         // If `newOptions` is not an object then destroy any old action.\n         if (!isObject(newOptions))\n         {\n            actionResult?.destroy?.();\n            action = void 0;\n            data = void 0;\n\n            return;\n         }\n\n         const { action: newAction, data: newData } = newOptions;\n\n         if (typeof newAction !== 'function')\n         {\n            console.warn(`dynamicAction.update warning: Aborting as 'action' is not a function.`);\n            return;\n         }\n\n         const hasNewData = newData !== data;\n\n         if (hasNewData) { data = newData; }\n\n         if (newAction !== action)\n         {\n            // If the action changes destroy the previous action and apply the new one.\n            actionResult?.destroy?.();\n\n            action = newAction;\n            actionResult = action(node, data);\n         }\n         else if (hasNewData)\n         {\n            actionResult?.update?.(data);\n         }\n      },\n\n      destroy: () =>\n      {\n         actionResult?.destroy?.();\n\n         action = void 0;\n         data = void 0;\n         actionResult = void 0;\n      }\n   };\n}\n\nexport { dynamicAction };\n//# sourceMappingURL=index.js.map\n","import { linear } from 'svelte/easing';\nimport { lerp } from '@typhonjs-fvtt/runtime/math/interpolate';\nimport { getEasingFunc } from '@typhonjs-fvtt/runtime/svelte/easing';\nimport { fade, slide } from 'svelte/transition';\n\n/**\n * Provides a rotate transition. For options `easing` is applied to the rotate transition. The default easing is\n * linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easing='linear'] - Easing function name or\n *        function to apply to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction rotate(node, options)\n{\n   const easingRotate = getEasingFunc(options.easing);\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const rotateT = easingRotate(t);\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg)`;\n      }\n   };\n}\n\n/**\n * Combines rotate & fade transitions into a single transition. For options `easing` this is applied to both\n * transitions, however if provided `easingRotate` and / or `easingFade` will take precedence. The default easing is\n * linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easing='linear'] - Easing function name or\n *        function to apply to both slide & fade transitions.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easingFade='linear'] - Easing function name or\n *        function to apply to the fade transition.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easingRotate='linear'] - Easing function name or\n *        function to apply to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction rotateFade(node, options)\n{\n   const easingFade = getEasingFunc(options.easingFade ?? options.easing);\n   const easingRotate = getEasingFunc(options.easingRotate ?? options.easing);\n\n   const fadeTransition = fade(node);\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = easingFade(t);\n         const rotateT = easingRotate(t);\n\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg); ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Combines slide & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingSlide` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {'x' | 'y'}   [options.axis] - The sliding axis.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easing=linear] - Easing function name or\n *        function to apply to both slide & fade transitions.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easingFade=linear] - Easing function name or\n *        function to apply to the fade transition.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easingSlide=linear] - Easing function name or\n *        function to apply to the slide transition.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction slideFade(node, options)\n{\n   const fadeEasing = getEasingFunc(options.easingFade ?? options.easing);\n   const slideEasing = getEasingFunc(options.easingSlide ?? options.easing);\n\n   const fadeTransition = fade(node);\n   const slideTransition = slide(node, { axis: options.axis });\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = fadeEasing(t);\n         const slideT = slideEasing(t);\n         return `${slideTransition.css(slideT, 1 - slideT)}; ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Converts a Svelte transition to an animation. Both transitions & animations use the same CSS / styles solution and\n * resulting data so wrap the transition function with the signature of an animation.\n *\n * @param {(node: Element, ...rest: any[]) => import('svelte/transition').TransitionConfig} fn -\n *        A Svelte transition function.\n *\n * @returns {(\n *    node: Element,\n *    data: { from: DOMRect, to: DOMRect },\n *    ...rest: any\n * ) => import('svelte/animation').AnimationConfig} - Transition function converted to an animation.\n */\nfunction toAnimation(fn)\n{\n   return (node, animations, ...rest) => fn(node, ...rest);\n}\n\n/**\n * Provides static data useful for handling custom props / options to components that allow dynamic configuration of\n * transitions. This is used in all application shells and components that have configurable transitions.\n *\n * @ignore\n */\nclass TJSDefaultTransition\n{\n   static #options = {};\n\n   static #default = () => void 0;\n\n   /**\n    * @returns {() => undefined} Default empty transition.\n    */\n   static get default() { return this.#default; }\n\n   /**\n    * @returns {{}} Default empty options.\n    */\n   static get options() { return this.#options; }\n}\n\nexport { TJSDefaultTransition, rotate, rotateFade, slideFade, toAnimation };\n//# sourceMappingURL=index.js.map\n","import { writable } from 'svelte/store';\n\n/**\n * Provides the internal context to all application shells.\n *\n * @implements {import('./types').AppShell.Context.Internal}\n *\n * @internal\n */\nexport class AppShellContextInternal\n{\n   /** @type {import('./types').AppShell.Context.Internal.stores} */\n   #stores;\n\n   constructor()\n   {\n      this.#stores = {\n         elementContent: writable(void 0),\n         elementRoot: writable(void 0)\n      };\n\n      Object.freeze(this.#stores);\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {import('./types').AppShell.Context.Internal.stores} The internal context stores for `elementContent` /\n    *          `elementRoot`\n    */\n   get stores()\n   {\n      return this.#stores;\n   }\n}\n","import { Mat4, Vec3 } from '@typhonjs-fvtt/runtime/math/gl-matrix';\n\n/**\n * Handles the projection of app resizing from screen to local space of the app transform for accurate resizing.\n */\nexport class ResizeHandleTransform\n{\n   /**\n    * Stores inverted app transform matrix.\n    */\n   static #invMat = new Mat4();\n\n   /**\n    * Stores converted world delta width & height change.\n    */\n   static #pDeltaLocal = new Vec3();\n\n   /**\n    * Stores point down in local space.\n    */\n   static #pLocalDown = new Vec3();\n\n   /**\n    * Stores point drag in local space.\n    */\n   static #pLocalDrag = new Vec3();\n\n   /**\n    * Stores point down in world space.\n    */\n   static #pScreenDown = new Vec3();\n\n   /**\n    * Stores point drag in world space.\n    */\n   static #pScreenDrag = new Vec3();\n\n   /**\n    * Compute the delta width and height in local space given the app transform matrix and initial pointer down and\n    * drag screen coordinates.\n    *\n    * @param {Mat4} transformMat - App transform matrix.\n    *\n    * @param {number} pScreenDownX - Pointer down X position in screen coords.\n    *\n    * @param {number} pScreenDownY - Pointer down Y position in screen coords.\n    *\n    * @param {number} pScreenDragX - Current pointer drag X position in screen coords.\n    *\n    * @param {number} pScreenDragY - Current pointer drag Y position in screen coords.\n    *\n    * @returns {Vec3} Output vector for width & height changes (x = deltaWidth, y = deltaHeight).\n    */\n   static computeDelta(transformMat, pScreenDownX, pScreenDownY, pScreenDragX, pScreenDragY)\n   {\n      // Invert the transform to go from SCREEN -> LOCAL.\n      Mat4.invert(this.#invMat, transformMat);\n\n      // Store screen down and drag coordinates in temp vectors.\n      this.#pScreenDown[0] = pScreenDownX;\n      this.#pScreenDown[1] = pScreenDownY;\n\n      this.#pScreenDrag[0] = pScreenDragX;\n      this.#pScreenDrag[1] = pScreenDragY;\n\n      // Transform both points to local space.\n      Vec3.transformMat4(this.#pLocalDown, this.#pScreenDown, this.#invMat);\n      Vec3.transformMat4(this.#pLocalDrag, this.#pScreenDrag, this.#invMat);\n\n      // Compute local delta.\n      this.#pDeltaLocal[0] = this.#pLocalDrag[0] - this.#pLocalDown[0];\n      this.#pDeltaLocal[1] = this.#pLocalDrag[1] - this.#pLocalDown[1];\n\n      return this.#pDeltaLocal;\n   }\n}\n","<script>\n   /**\n    * @privateRemarks\n    * TODO: Add description\n    *\n    * @componentDocumentation\n    */\n   import { getContext }            from 'svelte';\n\n   import { ResizeHandleTransform } from './ResizeHandleTransform.js';\n\n   export let isResizable = false;\n\n   const application = getContext('#external')?.application;\n\n   // Allows retrieval of the element root at runtime.\n   const storeElementRoot = getContext('#internal').stores.elementRoot;\n\n   const storeResizable = application.reactive.storeAppOptions.resizable;\n\n   const storeMinimized = application.reactive.storeUIState.minimized;\n   const storeResizing = application.reactive.storeUIState.resizing;\n\n   let elementResize;\n\n   $: if (elementResize)\n   {\n      // Instead of creating a derived store it is easier to use isResizable and the minimized store below.\n      elementResize.style.display = isResizable && !$storeMinimized ? 'block' : 'none';\n\n      // Add / remove `resizable` class from element root.\n      const elementRoot = $storeElementRoot;\n      if (elementRoot) { elementRoot.classList[isResizable ? 'add' : 'remove']('resizable'); }\n   }\n\n   /**\n    * Cancel any app animation in progress when dragging starts.\n    */\n   function onPointerdown()\n   {\n      application.position.animate.cancel();\n   }\n\n   /**\n    * Provides an action to handle resizing the application shell based on the resizable app option.\n    *\n    * @param {HTMLElement}       node - The node associated with the action.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {boolean}           [opts.active=true] - A boolean value; attached to a readable store.\n    *\n    * @param {Writable<boolean>} [opts.storeResizing] - A writable store that tracks \"resizing\" state.\n    *\n    * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n    */\n   function resizable(node, { active = true, storeResizing = void 0 } = {})\n   {\n      /**\n       * Duplicate the app / Positionable starting position to track differences.\n       *\n       * @type {object}\n       */\n      let position = null;\n\n      /**\n       * Stores the current resizing state and gates the move pointer as the resizing store is not\n       * set until the first pointer move.\n       *\n       * @type {boolean}\n       */\n      let resizing = false;\n\n      /**\n       * Stores initial pointer down X in screen coordinates.\n       */\n      let pScreenDownX = 0;\n\n      /**\n       * Stores initial pointer down Y in screen coordinates.\n       */\n      let pScreenDownY = 0;\n\n      /**\n       * Remember event handlers associated with this action so they may be later unregistered.\n       *\n       * @type {Object}\n       */\n      const handlers = {\n         resizeDown: ['pointerdown', (e) => onResizePointerDown(e), false],\n         resizeMove: ['pointermove', (e) => onResizePointerMove(e), false],\n         resizeUp: ['pointerup', (e) => onResizePointerUp(e), false]\n      };\n\n      /**\n       * Activates listeners.\n       */\n      function activateListeners()\n      {\n         // Resize handlers\n         node.addEventListener(...handlers.resizeDown);\n\n         isResizable = true;\n\n         node.style.display = 'block';\n      }\n\n      /**\n       * Removes listeners.\n       */\n      function removeListeners()\n      {\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         // Resize handlers\n         node.removeEventListener(...handlers.resizeDown);\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         node.style.display = 'none';\n\n         isResizable = false;\n      }\n\n      // On mount if resizable is true then activate listeners otherwise set element display to `none`.\n      if (active)\n      {\n         activateListeners();\n      }\n      else\n      {\n         node.style.display = 'none';\n      }\n\n      /**\n       * Handle the initial pointer down that activates resizing capture.\n       */\n      function onResizePointerDown(event)\n      {\n         event.preventDefault();\n\n         resizing = false;\n\n         // Record initial position\n         position = application.position.get();\n\n         if (position.height === 'auto') { position.height = $storeElementRoot.clientHeight; }\n         if (position.width === 'auto') { position.width = $storeElementRoot.clientWidth; }\n\n         pScreenDownX = event.clientX;\n         pScreenDownY = event.clientY;\n\n         // Add temporary handlers\n         node.addEventListener(...handlers.resizeMove);\n         node.addEventListener(...handlers.resizeUp);\n\n         node.setPointerCapture(event.pointerId);\n      }\n\n      /**\n       * Sets the width / height of the positionable application.\n       */\n      function onResizePointerMove(event)\n      {\n         event.preventDefault();\n\n         if (!resizing && typeof storeResizing?.set === 'function')\n         {\n            resizing = true;\n            storeResizing.set(true);\n         }\n\n         const pDeltaLocal = ResizeHandleTransform.computeDelta(application.position.transform.mat4, pScreenDownX,\n          pScreenDownY, event.clientX, event.clientY);\n\n         application.position.set({\n            width: position.width + pDeltaLocal[0],\n            height: position.height + pDeltaLocal[1]\n         });\n      }\n\n      /**\n       * Conclude the dragging behavior when the pointer is released setting the final position and\n       * removing listeners.\n       */\n      function onResizePointerUp(event)\n      {\n         resizing = false;\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         event.preventDefault();\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         // TODO: Direct Foundry API access.\n         application?._onResize?.(event);\n      }\n\n      return {\n         update: ({ active }) =>  // eslint-disable-line no-shadow\n         {\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n</script>\n\n<div class=\"window-resizable-handle\"\n     on:pointerdown={onPointerdown}\n     use:resizable={{ active: $storeResizable, storeResizing }}\n     bind:this={elementResize}>\n   <i class=\"fas fa-arrows-alt-h\"></i>\n</div>\n\n<style>\n   .window-resizable-handle {\n      display: block;\n      position: absolute;\n      width: var(--tjs-app-resizable-handle-width, 20px);\n      height: var(--tjs-app-resizable-handle-height, 20px);\n      top: var(--tjs-app-resizable-handle-top, unset);\n      bottom: var(--tjs-app-resizable-handle-bottom, -1px);\n      right: var(--tjs-app-resizable-handle-right, 0);\n      left: var(--tjs-app-resizable-handle-left, unset);\n      background: var(--tjs-app-resizable-handle-background, #444);\n      border: var(--tjs-app-resizable-handle-border, 1px solid #111);\n      border-radius: var(--tjs-app-resizable-handle-border-radius, 4px 0 0 0);\n      padding: var(--tjs-app-resizable-handle-padding, 2px);\n      touch-action: none;\n   }\n\n   .fa-arrows-alt-h {\n      color: var(--tjs-app-resizable-handle-icon-color, #f0f0e0);\n      transform: var(--tjs-app-resizable-handle-icon-transform, rotate(45deg));\n   }\n</style>\n","<script>\n   /**\n    * Provides a component to wrap focus to the first focusable element in the given `elementRoot` prop. Place this\n    * component as the last child in `elementRoot`.\n    *\n    * @componentDocumentation\n    */\n   import { A11yHelper }    from '@typhonjs-fvtt/runtime/util/a11y';\n\n   /** @type {HTMLElement} */\n   export let elementRoot = void 0;\n\n   /** @type {boolean} */\n   export let enabled = true;\n\n   let ignoreElements, wrapEl;\n\n   $: if (wrapEl) { ignoreElements = new Set([wrapEl]); }\n\n   function onFocus()\n   {\n      // Early out if not enabled.\n      if (!enabled) { return; }\n\n      if (A11yHelper.isFocusTarget(elementRoot))\n      {\n         const firstFocusEl = A11yHelper.getFirstFocusableElement(elementRoot, ignoreElements);\n\n         if (A11yHelper.isFocusTarget(firstFocusEl) && firstFocusEl !== wrapEl)\n         {\n            firstFocusEl.focus();\n         }\n         else\n         {\n            // No focus target found, so focus elementRoot.\n            elementRoot.focus();\n         }\n      }\n   }\n</script>\n\n<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n<div bind:this={wrapEl} class=tjs-focus-wrap tabindex=0 on:focus={onFocus}></div>\n\n<style>\n    div {\n        width: 0;\n        height: 0;\n        flex: 0;\n    }\n\n    div:focus {\n        outline: none;\n    }\n</style>\n","<script>\n   /**\n    * Provides an empty application shell as a main top level slotted component.\n    *\n    * @componentDocumentation\n    */\n   import {\n      getContext,\n      onMount,\n      setContext }                     from 'svelte';\n\n   import { resizeObserver }           from '@typhonjs-fvtt/runtime/svelte/action/dom/observer';\n   import { applyStyles }              from '@typhonjs-fvtt/runtime/svelte/action/dom/style';\n   import { dynamicAction }            from '@typhonjs-fvtt/runtime/svelte/action/util';\n   import { TJSDefaultTransition }     from '@typhonjs-fvtt/runtime/svelte/transition';\n   import { A11yHelper }               from '@typhonjs-fvtt/runtime/util/a11y';\n   import { isObject }                 from '@typhonjs-fvtt/runtime/util/object';\n\n   import { AppShellContextInternal }  from './AppShellContextInternal.js';\n   import ResizableHandle              from './ResizableHandle.svelte';\n\n   import TJSFocusWrap                 from '../internal/dom/TJSFocusWrap.svelte';\n\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\n   /** @type {HTMLElement} */\n   export let elementContent = void 0;\n   /** @type {HTMLElement} */\n   export let elementRoot = void 0;\n\n   // Explicit style overrides for the main app and content elements. Uses action `applyStyles`.\n   export let stylesApp = void 0;\n\n   /**\n    * Application reference.\n    *\n    * @type {SvelteApp}\n    */\n   const application = getContext('#external')?.application;\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep, focusTrap } = application.reactive.storeAppOptions;\n\n   const { minimized } = application.reactive.storeUIState;\n\n   // Is the backing app TJSPosition instance a candidate for the `resizeObserver` action? IE `width` or `height is\n   // `auto` or `inherit`.\n   const { resizeObservable } = application.position.stores;\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   // If a parent component binds and sets `appOffsetHeight` or `appOffsetWidth` to a truthy value then the\n   // `resizeObserver` action is enabled on the outer application `div`. Additionally, the SvelteApplication position\n   // resizeObserved store is updated.\n   export let appOffsetHeight = false;\n   export let appOffsetWidth = false;\n\n   // Tracks initial state if either of the above props are truthy otherwise a null operation.\n   const initialAppResizeObserver = !!appOffsetHeight || !!appOffsetWidth;\n\n   /**\n    * Reactive statement to control any dynamic action to apply for the app resize observer. It is always enabled when\n    * `initialAppResizeObserver` is true or when the position store `resizeObservable` is true when app position `width`\n    * or `height` is `auto` or `inherit`.\n    *\n    * @type {undefined | import('@typhonjs-fvtt/runtime/svelte/action/util').DynamicActionOptions}\n    */\n   $: appResizeObserver = initialAppResizeObserver || $resizeObservable ?\n    { action: resizeObserver, data: resizeObservedApp } : void 0;\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   // Provides the internal context for data / stores of the application shell.\n   const internal = new AppShellContextInternal();\n\n   // Provides options to `A11yHelper.getFocusableElements` to ignore TJSFocusWrap by CSS class.\n   const s_IGNORE_CLASSES = { ignoreClasses: ['tjs-focus-wrap'] };\n\n   // Internal context for `elementContent` / `elementRoot` stores.\n   setContext('#internal', internal);\n\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n   $: if (elementContent !== void 0 && elementContent !== null)\n   {\n      getContext('#internal').stores.elementContent.set(elementContent);\n   }\n\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n   $: if (elementRoot !== void 0 && elementRoot !== null)\n   {\n      getContext('#internal').stores.elementRoot.set(elementRoot);\n   }\n\n   // Assign elementRoot to elementContent.\n   $: if (elementRoot) { elementContent = elementRoot; }\n\n   let focusWrapEnabled;\n\n   // Enable TJSFocusWrap component when focus trapping app option is true and app is not minimized.\n   $: focusWrapEnabled = $focusAuto && $focusTrap && !$minimized;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = TJSDefaultTransition.default;\n   export let inTransition = TJSDefaultTransition.default;\n   export let outTransition = TJSDefaultTransition.default;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = TJSDefaultTransition.options;\n   export let outTransitionOptions = TJSDefaultTransition.options;\n\n   // Tracks last transition state.\n   let oldTransition = TJSDefaultTransition.default;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = typeof transition === 'function' ? transition : TJSDefaultTransition.default;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== TJSDefaultTransition.options && isObject(transitionOptions) ?\n       transitionOptions : TJSDefaultTransition.options;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = TJSDefaultTransition.default; }\n\n   $:\n   {\n      // Handle cases if outTransition is unset; assign noop default transition function.\n      if (typeof outTransition !== 'function') { outTransition = TJSDefaultTransition.default; }\n\n      // Set close animation to `false` / not run when an out transition is defined.\n      const defaultCloseAnimation = application?.options?.defaultCloseAnimation;\n      if (typeof defaultCloseAnimation === 'boolean' && defaultCloseAnimation &&\n       outTransition !== TJSDefaultTransition.default)\n      {\n         application.options.defaultCloseAnimation = false;\n      }\n   }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(inTransitionOptions)) { inTransitionOptions = TJSDefaultTransition.options; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(outTransitionOptions)) { outTransitionOptions = TJSDefaultTransition.options; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // Focus `elementRoot` on mount to allow keyboard tab navigation of header buttons.\n   onMount(() => elementRoot.focus());\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a handler for the custom `close:popup` event fired by `svelte-standard` components like TJSMenu. The\n    * intention is to handle focus management of a component that is no longer connected in the DOM. If a target element\n    * that is the source of the close event is attached attempt to resolve internal focus to the application.\n    *\n    * @param {CustomEvent}  event - A custom event for `close:popup`.\n    */\n   function onClosePopup(event)\n   {\n      // Early out as automatic focus management is not enabled.\n      if (!$focusAuto) { return; }\n\n      const targetEl = event?.detail?.target;\n\n      // Early out if there is no target element.\n      if (!A11yHelper.isFocusTarget(targetEl)) { return; }\n\n      // Early out if the target element is focusable as it will gain focus naturally.\n      if (A11yHelper.isFocusable(targetEl)) { return; }\n\n      const elementRootContains = elementRoot.contains(targetEl);\n\n      // First check for if the target is elementRoot or elementContent then fallback to contains checks.\n      if (targetEl === elementRoot)\n      {\n         elementRoot.focus();\n      }\n      else if (targetEl === elementContent)\n      {\n         elementContent.focus();\n      }\n      else if (elementRootContains)\n      {\n         if (elementContent.contains(targetEl))\n         {\n            elementContent.focus();\n         }\n         else\n         {\n            elementRoot.focus();\n         }\n      }\n   }\n\n   /**\n    * Provides focus cycling inside the application capturing `<Shift-Tab>` and if `elementRoot` or `firstFocusEl` is\n    * the actively focused element then last focusable element is focused skipping `TJSFocusWrap`.\n    *\n    * @param {KeyboardEvent} event - Keyboard Event.\n    */\n   function onKeydown(event)\n   {\n      // TODO: Note this handling is specifically for Foundry v11+ as the platform KeyboardManager uses\n      // `document.querySelector(':focus')` to short circuit keyboard handling internally to KeyboardManager.\n      // ApplicationShell manages containing focus programmatically and this prevents the Foundry KeyboardManager from\n      // activating. We need to check if this key event target is currently the `elementRoot` or `elementContent` and\n      // the event matches any KeyboardManager actions and if so blur current focus.\n      if ((event.target === elementRoot || event.target === elementContent) &&\n       KeyboardManager && KeyboardManager?._getMatchingActions?.(\n        KeyboardManager?.getKeyboardEventContext?.(event))?.length)\n      {\n         event.target?.blur();\n         return;\n      }\n\n      if (focusWrapEnabled && event.shiftKey && event.code === 'Tab')\n      {\n         // Collect all focusable elements from `elementRoot` and ignore TJSFocusWrap.\n         const allFocusable = A11yHelper.getFocusableElements(elementRoot, s_IGNORE_CLASSES);\n\n         // Find first and last focusable elements.\n         const firstFocusEl = allFocusable.length > 0 ? allFocusable[0] : void 0;\n         const lastFocusEl = allFocusable.length > 0 ? allFocusable[allFocusable.length - 1] : void 0;\n\n         const activeWindow = application.reactive.activeWindow;\n\n         // Only cycle focus to the last keyboard focusable app element if `elementRoot` or first focusable element\n         // is the active element.\n         if (elementRoot === activeWindow.document.activeElement ||\n          firstFocusEl === activeWindow.document.activeElement)\n         {\n            if (A11yHelper.isFocusTarget(lastFocusEl) && firstFocusEl !== lastFocusEl) { lastFocusEl.focus(); }\n\n            event.preventDefault();\n            event.stopPropagation();\n         }\n      }\n\n      // Make sure this application is top most when it receives keyboard events.\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * Handle focus management on any pointer events, `non-capture`.\n    *\n    * @param {PointerEvent} event - A PointerEvent.\n    */\n   function onPointerdownApp(event)\n   {\n      // Note: the event target may not always be the element that will eventually receive focus.\n      const focusable = A11yHelper.isFocusable(event.target);\n\n      if (!focusable && $focusAuto)\n      {\n         if ($focusKeep)\n         {\n            const activeWindow = application.reactive.activeWindow;\n            const focusOutside = !elementRoot.contains(activeWindow.document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               elementRoot.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            elementRoot.focus();\n         }\n      }\n   }\n\n   /**\n    * If the application is a popOut application then when clicked bring to top if not already the Foundry\n    * `activeWindow`.\n    *\n    * Note: `capture` is used so pointer down is always received. Be mindful as `onPointerdownAppTopMost` should only\n    * invoke `bringToTop`.\n    */\n   function onPointerdownAppTopMost()\n   {\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\n    * bound. Additionally, the Application position resizeObserved store is updated.\n    *\n    * @param {number}   contentWidth - Observed contentWidth.\n    * @param {number}   contentHeight - Observed contentHeight\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight)\n   {\n      application.position.stores.resizeObserved.update((object) =>\n      {\n         object.contentWidth = contentWidth;\n         object.contentHeight = contentHeight;\n         object.offsetWidth = offsetWidth;\n         object.offsetHeight = offsetHeight;\n\n         return object;\n      });\n\n      appOffsetHeight = offsetHeight;\n      appOffsetWidth = offsetWidth;\n   }\n\n   /**\n    * Transitions can cause side effects. Work around this issue by using an if conditional.\n    * Due to timing issues and the onDestroy / outro transitions can cause elementRoot / elementContent to be set to\n    * null when swapped dynamically. There is a feature request to allow transition functions to be undefined:\n    *\n    * @see: https://github.com/sveltejs/svelte/issues/6942\n    */\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if inTransition !== TJSDefaultTransition.default || outTransition !== TJSDefaultTransition.default}\n    <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n    <div id={application.id}\n         class={application.options.classes.join(' ')}\n         data-appid={application.appId}\n         bind:this={elementRoot}\n         in:inTransition|global={inTransitionOptions}\n         out:outTransition|global={outTransitionOptions}\n         on:close:popup|preventDefault|stopPropagation={onClosePopup}\n         on:keydown={onKeydown}\n         on:pointerdown|capture={onPointerdownAppTopMost}\n         on:pointerdown={onPointerdownApp}\n         use:applyStyles={stylesApp}\n         use:dynamicAction={appResizeObserver}\n         role=application\n         tabindex=-1>\n        <slot />\n        <ResizableHandle />\n        <TJSFocusWrap {elementRoot} enabled={focusWrapEnabled} />\n    </div>\n{:else}\n    <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n    <div id={application.id}\n         class={application.options.classes.join(' ')}\n         data-appid={application.appId}\n         bind:this={elementRoot}\n         on:close:popup|preventDefault|stopPropagation={onClosePopup}\n         on:keydown={onKeydown}\n         on:pointerdown|capture={onPointerdownAppTopMost}\n         on:pointerdown={onPointerdownApp}\n         use:applyStyles={stylesApp}\n         use:dynamicAction={appResizeObserver}\n         role=application\n         tabindex=-1>\n        <slot />\n        <ResizableHandle />\n        <TJSFocusWrap {elementRoot} enabled={focusWrapEnabled} />\n    </div>\n{/if}\n\n<style>\n    div {\n        contain: layout style paint;\n\n        display: var(--tjs-app-display, flex);\n        flex-direction: var(--tjs-app-flex-direction, column);\n        flex-wrap: var(--tjs-app-flex-wrap, nowrap);\n        justify-content: var(--tjs-app-justify-content, flex-start);\n        gap: var(--tjs-app-content-gap);\n\n        background: var(--tjs-empty-app-background, none);\n        border-radius: var(--tjs-app-border-radius, 5px);\n        box-shadow: var(--tjs-app-box-shadow, none);\n\n        color: var(--tjs-app-color, inherit);\n        margin: var(--tjs-app-margin, 0);\n        max-height: var(--tjs-app-max-height, 100%);\n        overflow: var(--tjs-app-overflow, hidden);\n        padding: var(--tjs-app-padding, 0);\n        position: var(--tjs-app-position, absolute);\n    }\n\n    div:focus-visible {\n        outline: var(--tjs-app-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n    }\n</style>\n","import { cssVariables }                      from './cssVariables.js';\n\nexport { default as ApplicationShell }       from './ApplicationShell.svelte';\nexport { default as EmptyApplicationShell }  from './EmptyApplicationShell.svelte';\nexport { default as TJSApplicationShell }    from './TJSApplicationShell.svelte';\nexport { default as TJSGlassPane }           from './TJSGlassPane.svelte';\n\n/**\n * Provides default CSS variables for core components.\n */\ncssVariables.setProperties({\n   // Anchor text shadow / header buttons\n   '--tjs-default-text-shadow-focus-hover': '0 0 8px var(--color-shadow-primary)',\n\n   // TJSApplicationShell app background.\n   '--tjs-app-background': `url(\"${globalThis.foundry.utils.getRoute('/ui/denim075.png')}\")`,\n}, false);\n","import { isObject, deepMerge, safeAccess, safeSet, hasGetter, klona } from '@typhonjs-fvtt/runtime/util/object';\nimport { writable, derived } from 'svelte/store';\nimport { subscribeIgnoreFirst } from '@typhonjs-fvtt/runtime/svelte/store/util';\nimport { TJSWebStorage, TJSSessionStorage } from '@typhonjs-fvtt/runtime/svelte/store/web-storage';\nimport { propertyStore } from '@typhonjs-fvtt/runtime/svelte/store/writable-derived';\nimport { TJSSvelte } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { TJSPosition } from '@typhonjs-fvtt/runtime/svelte/store/position';\nimport { A11yHelper } from '@typhonjs-fvtt/runtime/util/a11y';\nimport { DialogShell } from '@typhonjs-fvtt/runtime/svelte/component/internal';\nimport { ManagedPromise } from '@typhonjs-fvtt/runtime/util/async';\n\n/**\n * Provides the ability the save / restore / serialize application state for positional and UI state such as minimized\n * status.\n */\nclass ApplicationState\n{\n   /** @type {import('../../SvelteApp.js').SvelteApp} */\n   #application;\n\n   /**\n    * Stores the current save state key being restored by animating. When a restore is already being animated with the\n    * same name the subsequent restore animation is ignored.\n    *\n    * @type {string | undefined}\n    */\n   #currentRestoreKey;\n\n   /** @type {Map<string, import('../../types').SvelteApp.API.State.Data>} */\n   #dataSaved = new Map();\n\n   /**\n    * @param {import('../../SvelteApp.js').SvelteApp}   application - The application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Clears all saved application state.\n    */\n   clear()\n   {\n      this.#dataSaved.clear();\n   }\n\n   /**\n    * Returns current application state along with any extra data passed into method.\n    *\n    * @param {object} [extra] - Extra data to add to application state.\n    *\n    * @returns {import('../../types').SvelteApp.API.State.Data} Passed in object with current application state.\n    */\n   current(extra = {})\n   {\n      return Object.assign(extra, {\n         position: this.#application?.position?.get(),\n         beforeMinimized: this.#application?.position?.state.get({ name: '#beforeMinimized' }),\n         options: this.#application?.reactive?.toJSON(),\n         ui: { minimized: this.#application?.reactive?.minimized }\n      });\n   }\n\n   /**\n    * Gets any saved application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Saved data set name.\n    *\n    * @returns {import('../../types').SvelteApp.API.State.Data | undefined} Any saved application state.\n    */\n   get({ name })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`[SvelteApp.state.get] error: 'name' is not a string.`);\n      }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * @returns {IterableIterator<string>} The saved application state names / keys.\n    */\n   keys()\n   {\n      return this.#dataSaved.keys();\n   }\n\n   /**\n    * Removes and returns any saved application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {import('../../types').SvelteApp.API.State.Data | undefined} Any saved application state.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`[SvelteApp.state.remove] error: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Restores a previously saved application state by `name` returning the data. Several optional parameters are\n    * available to animate / tween to the new state. When `animateTo` is true an animation is scheduled via\n    * {@link #runtime/svelte/store/position!TJSPosition.API.Animation.to} and the duration and easing name or function may be\n    * specified.\n    *\n    * @param {object}            options - Options.\n    *\n    * @param {string}            options.name - Saved data set name.\n    *\n    * @param {boolean}           [options.remove=false] - Remove data set.\n    *\n    * @param {boolean}           [options.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [options.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/easing').EasingReference} [options.ease='linear'] - Easing function or easing\n    *        function name.\n    *\n    * @returns {import('../../types').SvelteApp.API.State.Data | undefined} Any saved application state.\n    */\n   restore({ name, remove = false, animateTo = false, duration = 0.1, ease = 'linear' })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`[SvelteApp.state.restore] error: 'name' is not a string.`);\n      }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         // Multiple invocations for animated restores are skipped when one is already in progress.\n         if (animateTo && name !== this.#currentRestoreKey)\n         {\n            // Track current restore key name.\n            this.#currentRestoreKey = name;\n\n            this.#setImpl(dataSaved, {\n               animateTo,\n               async: true,\n               duration,\n               ease\n            }).then(() =>\n            {\n               // Reset current restore key name for animation if the same as initial animation initiation.\n               if (name === this.#currentRestoreKey) { this.#currentRestoreKey = void 0; }\n            });\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current application state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to index this saved state.\n    *\n    * @returns {import('../../types').SvelteApp.API.State.Data} Current saved application state.\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`[SvelteApp.state.save] error: 'name' is not a string.`); }\n\n      const data = this.current(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Sets application state from the given `SvelteApp.API.State.Data` instance. Several optional parameters are\n    * available to animate / tween to the new state. When `animateTo` is true an animation is scheduled via\n    * {@link #runtime/svelte/store/position!AnimationAPI.to} and the duration and easing name or function may be\n    * specified.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * @param {import('../../types').SvelteApp.API.State.Data}   data - Saved data set name.\n    *\n    * @param {object}         [options] - Optional parameters\n    *\n    * @param {boolean}        [options.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}         [options.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/easing').EasingReference} [options.ease='linear'] - Easing function or easing\n    *        function name.\n    */\n   set(data, options = {})\n   {\n      this.#setImpl(data, { ...options, async: false });\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Sets application state from the given `SvelteApp.API.State.Data` instance. Several optional parameters are\n    * available to animate / tween to the new state. When `animateTo` is true an animation is scheduled via\n    * {@link #runtime/svelte/store/position!AnimationAPI.to} and the duration and easing name or function may be\n    * specified.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * @privateRemarks\n    * TODO: THIS METHOD NEEDS TO BE REFACTORED WHEN TRL IS MADE INTO A STANDALONE FRAMEWORK.\n    *\n    * @param {import('../../types').SvelteApp.API.State.Data}   data - Saved data set name.\n    *\n    * @param {object}            [opts] - Optional parameters\n    *\n    * @param {boolean}           [opts.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [opts.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [opts.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/easing').EasingReference} [opts.ease='linear'] - Easing function or easing\n    *        function name.\n    *\n    * @returns {undefined | Promise<void>} When asynchronous the animation Promise.\n    */\n   #setImpl(data, { async = false, animateTo = false, duration = 0.1, ease = 'linear' } = {})\n   {\n      if (!isObject(data))\n      {\n         throw new TypeError(`[SvelteApp.state.set] error: 'data' is not an object.`);\n      }\n\n      const application = this.#application;\n\n      if (!isObject(data?.position))\n      {\n         console.warn(`[SvelteApp.state.set] warning: 'data.position' is not an object.`);\n         return;\n      }\n\n      // TODO: TAKE NOTE THAT WE ARE ACCESSING A FOUNDRY APP v1 GETTER HERE TO DETERMINE IF APPLICATION IS RENDERED.\n      // TODO: THIS NEEDS TO BE REFACTORED WHEN CONVERTING TRL TO A GENERIC FRAMEWORK.\n      const rendered = application.rendered;\n\n      // Update data directly with no store or inline style updates.\n      if (animateTo)  // Animate to saved data.\n      {\n         if (!rendered)\n         {\n            console.warn(`[SvelteApp.state.set] warning: application is not rendered and 'animateTo' is true.`);\n            return;\n         }\n\n         // Provide special handling to potentially change transform origin as this parameter is not animated.\n         if (data.position.transformOrigin !== application.position.transformOrigin)\n         {\n            application.position.transformOrigin = data.position.transformOrigin;\n         }\n\n         if (isObject(data?.ui))\n         {\n            const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n            if (application?.reactive?.minimized && !minimized)\n            {\n               application.maximize({ animate: false, duration: 0 });\n            }\n         }\n\n         const promise = application.position.animate.to(data.position, {\n            duration,\n            ease,\n            strategy: 'cancelAll'\n         }).finished.then(({ cancelled }) =>\n         {\n            if (cancelled) { return; }\n\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration: 0 });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n         });\n\n         // Return a Promise with the application that resolves after animation ends.\n         if (async) { return promise; }\n      }\n      else\n      {\n         if (rendered)\n         {\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (application?.reactive?.minimized && !minimized)\n               {\n                  application.maximize({ animate: false, duration: 0 });\n               }\n               else if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            // Default options is to set data for an immediate update.\n            application.position.set(data.position);\n         }\n         else\n         {\n            // When not rendered set position to the 'beforeMinimized' data if it exists otherwise set w/ 'position'.\n            // Currently, w/ Foundry core Application API it is impossible to initially render an app in the minimized\n            // state.\n\n            let positionData = data.position;\n\n            if (isObject(data.beforeMinimized))\n            {\n               // Take before minimized data.\n               positionData = data.beforeMinimized;\n\n               // Apply position left / top to before minimized data. This covers the case when an app is minimized,\n               // but then moved. This allows restoration of the before minimized parameters w/ the last position\n               // location.\n               positionData.left = data.position.left;\n               positionData.top = data.position.top;\n            }\n\n            application.position.set(positionData);\n         }\n      }\n   }\n}\n\n/**\n * Provides a mechanism to retrieve and query all mounted Svelte components including the main application shell.\n *\n * @implements {import('../../types').SvelteApp.API.Svelte}\n */\nclass GetSvelteData\n{\n   /** @type {import('svelte').SvelteComponent[] | null[]} */\n   #applicationShellHolder;\n\n   /** @type {import('./types').SvelteData[]} */\n   #svelteData;\n\n   /**\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApp}.\n    *\n    * @param {import('svelte').SvelteComponent[] | null[]}  applicationShellHolder - A reference to the mounted app shell.\n    *\n    * @param {import('./types').SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\n    */\n   constructor(applicationShellHolder, svelteData)\n   {\n      this.#applicationShellHolder = applicationShellHolder;\n      this.#svelteData = svelteData;\n   }\n\n   /**\n    * Returns any mounted application shell.\n    *\n    * @returns {import('svelte').SvelteComponent} Any mounted application shell.\n    */\n   get appShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns any mounted application shell.\n    *\n    * @deprecated Use {@link GetSvelteData.appShell}; since `0.2.0` removal in `0.5.0`.\n    *\n    * @returns {import('svelte').SvelteComponent} Any mounted application shell.\n    */\n   get applicationShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns mounted application shell data / config.\n    *\n    * @internal\n    *\n    * @returns {import('./types').SvelteData} Any mounted application shell data.\n    */\n   get appShellData() { return this.#svelteData[0]; }\n}\n\n/**\n * API docs and description in {@link SvelteApp.API.Reactive}.\n */\nclass SvelteReactive\n{\n   /**\n    * @type {import('../SvelteApp').SvelteApp}\n    */\n   #application;\n\n   /**\n    * @type {boolean}\n    */\n   #initialized = false;\n\n   /** @type {import('@typhonjs-fvtt/runtime/svelte/store/web-storage').WebStorage} */\n   #sessionStorage;\n\n   /**\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {import('./types').StoreAppOptions}\n    */\n   #storeAppOptions;\n\n   /**\n    * Stores the update function for `#storeAppOptions`.\n    *\n    * @type {(this: void, updater: import('svelte/store').Updater<object>) => void}\n    */\n   #storeAppOptionsUpdate;\n\n   /**\n    * Stores the UI state data to make it accessible via getters.\n    *\n    * @type {object}\n    */\n   #dataUIState;\n\n   /**\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {import('./types').StoreUIOptions}\n    */\n   #storeUIState;\n\n   /**\n    * Stores the update function for `#storeUIState`.\n    *\n    * @type {(this: void, updater: import('svelte/store').Updater<object>) => void}\n    */\n   #storeUIStateUpdate;\n\n   /**\n    * Stores the unsubscribe functions from local store subscriptions.\n    *\n    * @type {import('svelte/store').Unsubscriber[]}\n    */\n   #storeUnsubscribe = [];\n\n   /**\n    * @param {import('../SvelteApp').SvelteApp} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n      const optionsSessionStorage = application?.options?.sessionStorage;\n\n      if (optionsSessionStorage !== void 0 && !(optionsSessionStorage instanceof TJSWebStorage))\n      {\n         throw new TypeError(`'options.sessionStorage' is not an instance of TJSWebStorage.`);\n      }\n\n      // If no external web storage API instance is available then create a TJSSessionStorage instance.\n      this.#sessionStorage = optionsSessionStorage !== void 0 ? optionsSessionStorage : new TJSSessionStorage();\n   }\n\n   /**\n    * Initializes reactive support. Package private for internal use.\n    *\n    * @returns {import('./types-local').SvelteReactiveStores | undefined} Internal methods to interact with Svelte\n    * stores.\n    *\n    * @package\n    * @internal\n    */\n   initialize()\n   {\n      if (this.#initialized) { return; }\n\n      this.#initialized = true;\n\n      this.#storesInitialize();\n\n      return {\n         appOptionsUpdate: this.#storeAppOptionsUpdate,\n         uiStateUpdate: this.#storeUIStateUpdate,\n         subscribe: this.#storesSubscribe.bind(this),\n         unsubscribe: this.#storesUnsubscribe.bind(this)\n      };\n   }\n\n// Store getters -----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/store/web-storage').WebStorage} Returns WebStorage (session) instance.\n    */\n   get sessionStorage()\n   {\n      return this.#sessionStorage;\n   }\n\n   /**\n    * Returns the store for app options.\n    *\n    * @returns {import('../../types').SvelteApp.API.Reactive.AppOptions} App options store.\n    */\n   get storeAppOptions() { return this.#storeAppOptions; }\n\n   /**\n    * Returns the store for UI options.\n    *\n    * @returns {import('../../types').SvelteApp.API.Reactive.UIState} UI options store.\n    */\n   get storeUIState() { return this.#storeUIState; }\n\n// Only reactive getters ---------------------------------------------------------------------------------------------\n\n   /**\n    * Returns the current active Window / WindowProxy UI state.\n    *\n    * @returns {Window} Active window UI state.\n    */\n   get activeWindow() { return this.#dataUIState.activeWindow ?? globalThis; }\n\n   /**\n    * Returns the current dragging UI state.\n    *\n    * @returns {boolean} Dragging UI state.\n    */\n   get dragging() { return this.#dataUIState.dragging; }\n\n   /**\n    * Returns the current minimized UI state.\n    *\n    * @returns {boolean} Minimized UI state.\n    */\n   get minimized() { return this.#dataUIState.minimized; }\n\n   /**\n    * Returns the current resizing UI state.\n    *\n    * @returns {boolean} Resizing UI state.\n    */\n   get resizing() { return this.#dataUIState.resizing; }\n\n   /**\n    * Sets the current active Window / WindowProxy UI state.\n    *\n    * Note: This is protected usage and used internally.\n    *\n    * @param {Window} activeWindow - Active Window / WindowProxy UI state.\n    *\n    * @hidden\n    */\n   set activeWindow(activeWindow)\n   {\n      // Note: when setting activeWindow to undefined `globalThis` is set. There isn't a great test for Window /\n      // WindowProxy, so check `toString`.\n      if (activeWindow === void 0 || activeWindow === null ||\n       (Object.prototype.toString.call(activeWindow) === '[object Window]'))\n      {\n         this.#storeUIStateUpdate((options) => deepMerge(options, { activeWindow: activeWindow ?? globalThis }));\n      }\n   }\n\n// Reactive getter / setters -----------------------------------------------------------------------------------------\n\n   /**\n    * Returns the draggable app option.\n    *\n    * @returns {boolean} Draggable app option.\n    */\n   get draggable() { return this.#application?.options?.draggable; }\n\n   /**\n    * Returns the focusAuto app option.\n    *\n    * @returns {boolean} When true auto-management of app focus is enabled.\n    */\n   get focusAuto() { return this.#application?.options?.focusAuto; }\n\n   /**\n    * Returns the focusKeep app option.\n    *\n    * @returns {boolean} When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    */\n   get focusKeep() { return this.#application?.options?.focusKeep; }\n\n   /**\n    * Returns the focusTrap app option.\n    *\n    * @returns {boolean} When true focus trapping / wrapping is enabled keeping focus inside app.\n    */\n   get focusTrap() { return this.#application?.options?.focusTrap; }\n\n   /**\n    * Returns the headerButtonNoClose app option.\n    *\n    * @returns {boolean} Remove the close the button in header app option.\n    */\n   get headerButtonNoClose() { return this.#application?.options?.headerButtonNoClose; }\n\n   /**\n    * Returns the headerButtonNoLabel app option.\n    *\n    * @returns {boolean} Remove the labels from buttons in header app option.\n    */\n   get headerButtonNoLabel() { return this.#application?.options?.headerButtonNoLabel; }\n\n   /**\n    * Returns the headerIcon app option.\n    *\n    * @returns {string|void} URL for header app icon.\n    */\n   get headerIcon() { return this.#application?.options?.headerIcon; }\n\n   /**\n    * Returns the headerNoTitleMinimized app option.\n    *\n    * @returns {boolean} When true removes the header title when minimized.\n    */\n   get headerNoTitleMinimized() { return this.#application?.options?.headerNoTitleMinimized; }\n\n   /**\n    * Returns the minimizable app option.\n    *\n    * @returns {boolean} Minimizable app option.\n    */\n   get minimizable() { return this.#application?.options?.minimizable; }\n\n   /**\n    * Returns the Foundry popOut state; {@link Application.popOut}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get popOut() { return this.#application.popOut; }\n\n   /**\n    * Returns the positionable app option; {@link SvelteApp.Options.positionable}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get positionable() { return this.#application?.options?.positionable; }\n\n   /**\n    * Returns the resizable option.\n    *\n    * @returns {boolean} Resizable app option.\n    */\n   get resizable() { return this.#application?.options?.resizable; }\n\n   /**\n    * Returns the title accessor from the parent Application class; {@link Application.title}\n    *\n    * @privateRemarks\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.    *\n    *\n    * @returns {string} Title.\n    */\n   get title() { return this.#application.title; }\n\n   /**\n    * Sets `this.options.draggable` which is reactive for application shells.\n    *\n    * @param {boolean}  draggable - Sets the draggable option.\n    */\n   set draggable(draggable)\n   {\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\n   }\n\n   /**\n    * Sets `this.options.focusAuto` which is reactive for application shells.\n    *\n    * @param {boolean}  focusAuto - Sets the focusAuto option.\n    */\n   set focusAuto(focusAuto)\n   {\n      if (typeof focusAuto === 'boolean') { this.setOptions('focusAuto', focusAuto); }\n   }\n\n   /**\n    * Sets `this.options.focusKeep` which is reactive for application shells.\n    *\n    * @param {boolean}  focusKeep - Sets the focusKeep option.\n    */\n   set focusKeep(focusKeep)\n   {\n      if (typeof focusKeep === 'boolean') { this.setOptions('focusKeep', focusKeep); }\n   }\n\n   /**\n    * Sets `this.options.focusTrap` which is reactive for application shells.\n    *\n    * @param {boolean}  focusTrap - Sets the focusTrap option.\n    */\n   set focusTrap(focusTrap)\n   {\n      if (typeof focusTrap === 'boolean') { this.setOptions('focusTrap', focusTrap); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoClose` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoClose - Sets the headerButtonNoClose option.\n    */\n   set headerButtonNoClose(headerButtonNoClose)\n   {\n      if (typeof headerButtonNoClose === 'boolean') { this.setOptions('headerButtonNoClose', headerButtonNoClose); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoLabel` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoLabel - Sets the headerButtonNoLabel option.\n    */\n   set headerButtonNoLabel(headerButtonNoLabel)\n   {\n      if (typeof headerButtonNoLabel === 'boolean') { this.setOptions('headerButtonNoLabel', headerButtonNoLabel); }\n   }\n\n   /**\n    * Sets `this.options.headerIcon` which is reactive for application shells.\n    *\n    * @param {string | undefined}  headerIcon - Sets the headerButtonNoLabel option.\n    */\n   set headerIcon(headerIcon)\n   {\n      if (headerIcon === void 0 || typeof headerIcon === 'string') { this.setOptions('headerIcon', headerIcon); }\n   }\n\n   /**\n    * Sets `this.options.headerNoTitleMinimized` which is reactive for application shells.\n    *\n    * @param {boolean}  headerNoTitleMinimized - Sets the headerNoTitleMinimized option.\n    */\n   set headerNoTitleMinimized(headerNoTitleMinimized)\n   {\n      if (typeof headerNoTitleMinimized === 'boolean')\n      {\n         this.setOptions('headerNoTitleMinimized', headerNoTitleMinimized);\n      }\n   }\n\n   /**\n    * Sets `this.options.minimizable` which is reactive for application shells that are also pop out.\n    *\n    * @param {boolean}  minimizable - Sets the minimizable option.\n    */\n   set minimizable(minimizable)\n   {\n      if (typeof minimizable === 'boolean') { this.setOptions('minimizable', minimizable); }\n   }\n\n   /**\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\n    * from `ui.windows`.\n    *\n    * @param {boolean}  popOut - Sets the popOut option.\n    */\n   set popOut(popOut)\n   {\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\n   }\n\n   /**\n    * Sets `this.options.positionable` enabling / disabling {@link SvelteApp.position}.\n    *\n    * @param {boolean}  positionable - Sets the positionable option.\n    */\n   set positionable(positionable)\n   {\n      if (typeof positionable === 'boolean') { this.setOptions('positionable', positionable); }\n   }\n\n   /**\n    * Sets `this.options.resizable` which is reactive for application shells.\n    *\n    * @param {boolean}  resizable - Sets the resizable option.\n    */\n   set resizable(resizable)\n   {\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\n   }\n\n   /**\n    * Sets `this.options.title` which is reactive for application shells.\n    *\n    * Note: Will set empty string if title is undefined or null.\n    *\n    * @param {string | undefined | null}   title - Application title; will be localized, so a translation key is fine.\n    */\n   set title(title)\n   {\n      if (typeof title === 'string')\n      {\n         this.setOptions('title', title);\n      }\n      else if (title === void 0 || title === null)\n      {\n         this.setOptions('title', '');\n      }\n   }\n\n   // Reactive Options API -------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a way to safely get this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {*} Value at the accessor.\n    */\n   getOptions(accessor, defaultValue)\n   {\n      return safeAccess(this.#application.options, accessor, defaultValue);\n   }\n\n   /**\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\n    *\n    * @param {object}   options - The options object to merge with `this.options`.\n    */\n   mergeOptions(options)\n   {\n      this.#storeAppOptionsUpdate((instanceOptions) => deepMerge(instanceOptions, options));\n   }\n\n   /**\n    * Provides a way to safely set this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Additionally, if an application shell Svelte component is mounted and exports the `appOptions` property then\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      value - Value to set.\n    */\n   setOptions(accessor, value)\n   {\n      const success = safeSet(this.#application.options, accessor, value, { createMissing: true });\n\n      // If `this.options` modified then update the app options store.\n      if (success)\n      {\n         this.#storeAppOptionsUpdate(() => this.#application.options);\n      }\n   }\n\n   /**\n    * Serializes the main {@link SvelteApp.Options} for common application state.\n    *\n    * @returns {import('../../types').SvelteApp.API.Reactive.Data} Common application state.\n    */\n   toJSON()\n   {\n      return {\n         draggable: this.#application?.options?.draggable ?? true,\n         focusAuto: this.#application?.options?.focusAuto ?? true,\n         focusKeep: this.#application?.options?.focusKeep ?? false,\n         focusTrap: this.#application?.options?.focusTrap ?? true,\n         headerButtonNoClose: this.#application?.options?.headerButtonNoClose ?? false,\n         headerButtonNoLabel: this.#application?.options?.headerButtonNoLabel ?? false,\n         headerNoTitleMinimized: this.#application?.options?.headerNoTitleMinimized ?? false,\n         minimizable: this.#application?.options?.minimizable ?? true,\n         positionable: this.#application?.options?.positionable ?? true,\n         resizable: this.#application?.options?.resizable ?? true\n      };\n   }\n\n   /**\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\n    * the new buttons.\n    *\n    * Optionally you can set in the SvelteApp app options {@link SvelteApp.Options.headerButtonNoClose}\n    * to remove the close button and {@link SvelteApp.Options.headerButtonNoLabel} to true and labels will be\n    * removed from the header buttons.\n    *\n    * @param {object} [opts] - Optional parameters (for internal use)\n    *\n    * @param {boolean} [opts.headerButtonNoClose] - The value for `headerButtonNoClose`.\n    *\n    * @param {boolean} [opts.headerButtonNoLabel] - The value for `headerButtonNoLabel`.\n    */\n   updateHeaderButtons({ headerButtonNoClose = this.#application.options.headerButtonNoClose,\n    headerButtonNoLabel = this.#application.options.headerButtonNoLabel } = {})\n   {\n      let buttons = this.#application._getHeaderButtons();\n\n      // Remove close button if this.options.headerButtonNoClose is true;\n      if (typeof headerButtonNoClose === 'boolean' && headerButtonNoClose)\n      {\n         buttons = buttons.filter((button) => button.class !== 'close');\n      }\n\n      // Remove labels if this.options.headerButtonNoLabel is true;\n      if (typeof headerButtonNoLabel === 'boolean' && headerButtonNoLabel)\n      {\n         for (const button of buttons) { button.label = void 0; }\n      }\n\n      this.#storeUIStateUpdate((options) =>\n      {\n         options.headerButtons = buttons;\n         return options;\n      });\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\n    *\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\n    * stores are provided for essential options which are commonly used.\n    *\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\n    * `storeUIState`.\n    */\n   #storesInitialize()\n   {\n      const writableAppOptions = writable(this.#application.options);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeAppOptionsUpdate = writableAppOptions.update;\n\n      /**\n       * Create custom store. The main subscribe method for all app options changes is provided along with derived\n       * writable stores for all reactive options.\n       *\n       * @type {import('./types').StoreAppOptions}\n       */\n      const storeAppOptions = {\n         subscribe: writableAppOptions.subscribe,\n\n         draggable: propertyStore(writableAppOptions, 'draggable'),\n         focusAuto: propertyStore(writableAppOptions, 'focusAuto'),\n         focusKeep: propertyStore(writableAppOptions, 'focusKeep'),\n         focusTrap: propertyStore(writableAppOptions, 'focusTrap'),\n         headerButtonNoClose: propertyStore(writableAppOptions, 'headerButtonNoClose'),\n         headerButtonNoLabel: propertyStore(writableAppOptions, 'headerButtonNoLabel'),\n         headerIcon: propertyStore(writableAppOptions, 'headerIcon'),\n         headerNoTitleMinimized: propertyStore(writableAppOptions, 'headerNoTitleMinimized'),\n         minimizable: propertyStore(writableAppOptions, 'minimizable'),\n         popOut: propertyStore(writableAppOptions, 'popOut'),\n         positionable: propertyStore(writableAppOptions, 'positionable'),\n         resizable: propertyStore(writableAppOptions, 'resizable'),\n         title: propertyStore(writableAppOptions, 'title')\n      };\n\n      Object.freeze(storeAppOptions);\n\n      this.#storeAppOptions = storeAppOptions;\n\n      this.#dataUIState = {\n         activeWindow: globalThis,\n         dragging: false,\n         headerButtons: [],\n         minimized: this.#application._minimized,\n         resizing: false\n      };\n\n      // Create a store for UI state data.\n      const writableUIOptions = writable(this.#dataUIState);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeUIStateUpdate = writableUIOptions.update;\n\n      /**\n       * @type {import('./types').StoreUIOptions}\n       */\n      const storeUIState = {\n         subscribe: writableUIOptions.subscribe,\n\n         // activeWindow: propertyStore(writableUIOptions, 'activeWindow'),\n         activeWindow: derived(writableUIOptions, ($options, set) => set($options.activeWindow)),\n         dragging: propertyStore(writableUIOptions, 'dragging'),\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized)),\n         resizing: propertyStore(writableUIOptions, 'resizing')\n      };\n\n      Object.freeze(storeUIState);\n\n      // Initialize the store with options set in the Application constructor.\n      this.#storeUIState = storeUIState;\n   }\n\n   /**\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\n    *\n    * @see SvelteApp._injectHTML\n    */\n   #storesSubscribe()\n   {\n      // Register local subscriptions.\n\n      // Handles updating header buttons to add / remove the close button.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoClose, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoClose: value });\n      }));\n\n      // Handles updating header buttons to add / remove button labels.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoLabel, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoLabel: value });\n      }));\n\n      // Handles adding / removing this application from `ui.windows` when popOut changes.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.popOut, (value) =>\n      {\n         if (value && this.#application.rendered)\n         {\n            globalThis.ui.windows[this.#application.appId] = this.#application;\n         }\n         else\n         {\n            delete globalThis.ui.windows[this.#application.appId];\n         }\n      }));\n   }\n\n   /**\n    * Unsubscribes from any locally monitored stores.\n    *\n    * @see SvelteApp.close\n    */\n   #storesUnsubscribe()\n   {\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\n      this.#storeUnsubscribe = [];\n   }\n}\n\n/**\n * Defines the application shell contract. If Svelte components export getter / setters for the following properties\n * then that component is considered an application shell.\n *\n * @type {string[]}\n */\nconst applicationShellContract = ['elementRoot'];\n\nObject.freeze(applicationShellContract);\n\n/**\n * Provides a method to determine if the passed in object / Svelte component follows the application shell contract.\n * This involves ensuring that the accessors defined in `applicationShellContract`.\n *\n * Note: A caveat is that when using Vite in a developer build components are wrapped in a proxy / ProxyComponent that\n * defines instance accessors versus on the prototype, so the check below ensures that all accessors in the contract are\n * either available on the prototype or directly on the instance.\n *\n * @param {*}  component - Object / component to test.\n *\n * @returns {boolean} Whether the component is a ApplicationShell or TJSApplicationShell.\n */\nfunction isApplicationShell(component)\n{\n   if (component === null || component === void 0) { return false; }\n\n   let compHasContract = true;\n   let protoHasContract = true;\n\n   // Check for accessors on the instance.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(component, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { compHasContract = false; }\n   }\n\n   // Get the prototype which is the parent SvelteComponent that has any getter / setters.\n   const prototype = Object.getPrototypeOf(component);\n\n   // Verify the application shell contract. If the accessors (getters / setters) are defined for\n   // `applicationShellContract`.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { protoHasContract = false; }\n   }\n\n   return compHasContract || protoHasContract;\n}\n\n/**\n * Instantiates and attaches a Svelte component to the main inserted HTML.\n *\n * @param {object}            [opts] - Optional parameters.\n *\n * @param {object}            [opts.app] - The target application\n *\n * @param {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelte.Config.Dynamic}  [opts.config] - Svelte component options\n *\n * @param {Function}          [opts.elementRootUpdate] - A callback to assign to the external context.\n *\n * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteData} The config + instantiated Svelte component.\n */\nfunction loadSvelteConfig({ app, config, elementRootUpdate } = {})\n{\n   let target;\n\n   // A specific HTMLElement to append Svelte component.\n   if (CrossWindow.isHTMLElement(config.target))\n   {\n      target = config.target;\n   }\n   else if (typeof config.target === 'string')\n   {\n      // Attempt to find target from query selector string.\n      const activeWindow = app?.reactive?.activeWindow;\n      target = activeWindow?.document?.querySelector(config.target);\n   }\n\n   if (!CrossWindow.isHTMLElement(target))\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - Could not find target, '${config.target}', for config:\\n`,\n        'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   const NewSvelteComponent = config.class;\n\n   const svelteConfig = TJSSvelte.config.parseConfig({ ...config, target }, { contextExternal: true, thisArg: app });\n\n   const externalContext = svelteConfig.context.get('#external');\n\n   // Inject the Foundry application instance and `elementRootUpdate` to the external context.\n   externalContext.application = app;\n   externalContext.elementRootUpdate = elementRootUpdate;\n   externalContext.sessionStorage = app.reactive.sessionStorage;\n\n   let eventbus;\n\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\n   if (isObject(app._eventbus) && typeof app._eventbus.createProxy === 'function')\n   {\n      eventbus = app._eventbus.createProxy();\n      externalContext.eventbus = eventbus;\n   }\n\n   // Seal external context so that it can't be extended.\n   Object.seal(externalContext);\n\n   // Create the Svelte component.\n   /**\n    * @type {import('svelte').SvelteComponent}\n    */\n   const component = new NewSvelteComponent(svelteConfig);\n\n   // Set any eventbus to the config.\n   svelteConfig.eventbus = eventbus;\n\n   /**\n    * @type {HTMLElement}\n    */\n   let element;\n\n   // We can directly get the root element from components which follow the application store contract.\n   if (isApplicationShell(component))\n   {\n      element = component.elementRoot;\n   }\n\n   if (!CrossWindow.isHTMLElement(element))\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - No application shell contract found. Did you bind and export a HTMLElement ` +\n        `as 'elementRoot' and include '<svelte:options accessors={true}/>'?\\n` +\n         `\\nOffending config:\\n`, 'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   return { config: svelteConfig, component, element };\n}\n\n/**\n * Provides an index of all visible rendered {@link SvelteApp} instances in a given Svelte runtime. This allows\n * bulk operations to be performed across all apps.\n */\nclass TJSAppIndex\n{\n   /**\n    * Stores all visible / rendered apps.\n    *\n    * @type {Map<string, import('@typhonjs-fvtt/runtime/svelte/application').SvelteApp>}\n    */\n   static #visibleApps = new Map();\n\n   /**\n    * Adds a SvelteApp to all visible apps tracked.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApp} app - A SvelteApp\n    *\n    * @package\n    */\n   static add(app)\n   {\n      this.#visibleApps.set(app.id, app);\n   }\n\n   /**\n    * Removes a SvelteApp from all visible apps tracked.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApp} app - A SvelteApp\n    *\n    * @package\n    */\n   static delete(app)\n   {\n      this.#visibleApps.delete(app.id);\n   }\n\n   /**\n    * Gets a particular app by ID.\n    *\n    * @param {string}   key - App ID.\n    *\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApp} Associated app.\n    */\n   static get(key)\n   {\n      return this.#visibleApps.get(key);\n   }\n\n   /**\n    * Returns whether an associated app by ID is being tracked.\n    *\n    * @param {string}   key - App ID.\n    *\n    * @returns {boolean} The given App ID is visible.\n    */\n   static has(key)\n   {\n      return this.#visibleApps.has(key);\n   }\n\n   /**\n    * @returns {IterableIterator<string>} All visible app IDs.\n    */\n   static keys()\n   {\n      return this.#visibleApps.keys();\n   }\n\n   /**\n    * @returns {IterableIterator<import('@typhonjs-fvtt/runtime/svelte/application').SvelteApp>} All visible apps.\n    */\n   static values()\n   {\n      return this.#visibleApps.values();\n   }\n}\n\nclass FoundryHMRSupport\n{\n   static initialize()\n   {\n      if (import.meta.hot)\n      {\n         Hooks.on('hotReload', (data) =>\n         {\n            // Only handle JSON hot reload presumably specified in package manifest for language translation files.\n            if (data?.extension === 'json')\n            {\n               // Postpone until next macrotask to allow Foundry to update localization first.\n               setTimeout(() =>\n               {\n                  for (const app of TJSAppIndex.values())\n                  {\n                     const appShell = app.svelte.appShell;\n\n                     // Retrieve the original `svelte-hmr` instrumented HMR component / not the proxy.\n                     const hmrComponent = appShell?.$$?.hmr_cmp;\n\n                     if (appShell && typeof hmrComponent?.$replace === 'function')\n                     {\n                        const svelteData = app.svelte.appShellData;\n                        if (svelteData)\n                        {\n                           try\n                           {\n                              // Replace with self; this will invoke `on_hmr` callback in associated SvelteApp.\n                              hmrComponent.$replace(hmrComponent.constructor, {\n                                 target: svelteData.config.target,\n                                 anchor: svelteData.config.anchor,\n                                 preserveLocalState: true,\n                                 conservative: true\n                              });\n                           }\n                           catch (error)\n                           {\n                              const name = hmrComponent?.constructor?.name ?? 'Unknown';\n                              console.error(`TyphonJS Runtime Library error; Could not hot reload component: '${name}'`);\n                              console.error(error);\n                           }\n                        }\n                     }\n                  }\n               }, 0);\n            }\n\n            return true;\n         });\n      }\n   }\n}\n\n/**\n * Provides a Svelte aware extension to the Foundry {@link Application} class to manage the app lifecycle\n * appropriately. You can declaratively load one or more components from `defaultOptions` using a\n * {@link #runtime/svelte/util!TJSSvelte.Config.Dynamic} object in the {@link SvelteApp.Options.svelte} property.\n *\n * @implements {TJSPosition.Positionable}\n */\nclass SvelteApp extends Application\n{\n   /**\n    * Stores the first mounted component which follows the application shell contract.\n    *\n    * @type {import('svelte').SvelteComponent[] | null[]} Application shell.\n    */\n   #applicationShellHolder = [null];\n\n   /**\n    * Stores and manages application state for saving / restoring / serializing.\n    *\n    * @type {import('./types').SvelteApp.API.State}\n    */\n   #applicationState;\n\n   /**\n    * Stores the target element which may not necessarily be the main element.\n    *\n    * @type {HTMLElement}\n    */\n   #elementTarget = null;\n\n   /**\n    * Stores the content element which is set for application shells.\n    *\n    * @type {HTMLElement}\n    */\n   #elementContent = null;\n\n   /**\n    * On initial render gating of `setPosition` invoked by `Application._render` occurs, so that percentage values\n    * can correctly be positioned with initial helper constraints (centered).\n    *\n    * @type {boolean}\n    */\n   #gateSetPosition = false;\n\n   /**\n    * Stores initial z-index from `_renderOuter` to set to target element / Svelte component.\n    *\n    * @type {number}\n    */\n   #initialZIndex = 95;\n\n   /**\n    * Stores on mount state which is checked in _render to trigger onSvelteMount callback.\n    *\n    * @type {boolean}\n    */\n   #onMount = false;\n\n   /**\n    * The position store.\n    *\n    * @type {TJSPosition}\n    */\n   #position;\n\n   /**\n    * Contains the Svelte stores and reactive accessors.\n    *\n    * @type {SvelteReactive}\n    */\n   #reactive;\n\n   /**\n    * Stores SvelteData entries with instantiated Svelte components.\n    *\n    * @type {import('./internal/state-svelte/types').SvelteData[] | null[]}\n    */\n   #svelteData = [null];\n\n   /**\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\n    * #svelteData.\n    *\n    * @type {import('./types').SvelteApp.API.Svelte<Options>}\n    */\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\n\n   /**\n    * Contains methods to interact with the Svelte stores.\n    *\n    * @type {import('./internal/state-reactive/types-local').SvelteReactiveStores}\n    */\n   #stores;\n\n   /**\n    * @param {Partial<import('./types').SvelteApp.Options>} [options] - The options for the application.\n    */\n   constructor(options = {})\n   {\n      super(options);\n\n      if (!isObject(this.options.svelte))\n      {\n         throw new Error(`SvelteApp - constructor - No Svelte configuration object found in 'options'.`);\n      }\n\n      this.#applicationState = new ApplicationState(this);\n\n      // Initialize TJSPosition with the position object set by Application.\n      this.#position = new TJSPosition(this, {\n         ...this.position,\n         ...this.options,\n         initial: this.options.positionInitial,\n         ortho: this.options.positionOrtho,\n         validator: this.options.positionValidator\n      });\n\n      // Remove old position field.\n      delete this.position;\n\n      /**\n       * Define accessors to retrieve TJSPosition by `this.position`.\n       *\n       * @member {TJSPosition} position - Adds accessors to SvelteApp to get / set the position data.\n       *\n       * @memberof SvelteApp#\n       */\n      Object.defineProperty(this, 'position', {\n         get: () => this.#position,\n         set: (position) => { if (isObject(position)) { this.#position.set(position); } }\n      });\n\n      this.#reactive = new SvelteReactive(this);\n\n      this.#stores = this.#reactive.initialize();\n   }\n\n   /**\n    * Specifies the default options that SvelteApp supports.\n    *\n    * @returns {import('./types').SvelteApp.Options} options - Application options.\n    * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n    */\n   static get defaultOptions()\n   {\n      return /** @type {import('./types').SvelteApp.Options} */ deepMerge(super.defaultOptions, {\n         defaultCloseAnimation: true,     // If false the default slide close animation is not run.\n         draggable: true,                 // If true then application shells are draggable.\n         focusAuto: true,                 // When true auto-management of app focus is enabled.\n         focusKeep: false,                // When `focusAuto` and `focusKeep` is true; keeps internal focus.\n         focusSource: void 0,             // Stores any A11yFocusSource data that is applied when app is closed.\n         focusTrap: true,                 // When true focus trapping / wrapping is enabled keeping focus inside app.\n         headerButtonNoClose: false,      // If true then the close header button is removed.\n         headerButtonNoLabel: false,      // If true then header button labels are removed for application shells.\n         headerIcon: void 0,              // Sets a header icon given an image URL.\n         headerNoTitleMinimized: false,   // If true then header title is hidden when application is minimized.\n         minHeight: MIN_WINDOW_HEIGHT,    // Assigned to position. Number specifying minimum window height.\n         minWidth: MIN_WINDOW_WIDTH,      // Assigned to position. Number specifying minimum window width.\n         positionable: true,              // If false then `position.set` does not take effect.\n         positionInitial: TJSPosition.Initial.browserCentered,      // A helper for initial position placement.\n         positionOrtho: true,             // When true TJSPosition is optimized for orthographic use.\n         positionValidator: TJSPosition.Validators.transformWindow, // A function providing the default validator.\n         sessionStorage: void 0,          // An instance of WebStorage (session) to share across SvelteApps.\n         svelte: void 0,                  // A Svelte configuration object.\n         transformOrigin: 'top left'      // By default, 'top / left' respects rotation when minimizing.\n      });\n   }\n\n   /**\n    * Returns the content element if an application shell is mounted.\n    *\n    * @returns {HTMLElement} Content element.\n    */\n   get elementContent() { return this.#elementContent; }\n\n   /**\n    * Returns the target element or main element if no target defined.\n    *\n    * @returns {HTMLElement} Target element.\n    */\n   get elementTarget() { return this.#elementTarget; }\n\n   /**\n    * Returns the reactive accessors & Svelte stores for SvelteApp.\n    *\n    * @returns {import('./types').SvelteApp.API.Reactive} The reactive accessors & Svelte stores.\n    */\n   get reactive() { return this.#reactive; }\n\n   /**\n    * Returns the application state manager.\n    *\n    * @returns {import('./types').SvelteApp.API.State} The application state manager.\n    */\n   get state() { return this.#applicationState; }\n\n   /**\n    * Returns the `Svelte` helper class w/ various methods to access the mounted application shell component.\n    *\n    * @returns {import('./types').SvelteApp.API.Svelte<Options>} `Svelte` / mounted application shell API.\n    */\n   get svelte() { return this.#getSvelteData; }\n\n   /**\n    * In this case of when a template is defined in app options `html` references the inner HTML / template. However,\n    * to activate classic v1 tabs for a Svelte component the element target is passed as an array simulating JQuery as\n    * the element is retrieved immediately and the core listeners use standard DOM queries.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _activateCoreListeners(html)\n   {\n      super._activateCoreListeners(typeof this.options.template === 'string' ? html :\n       [this.popOut ? this.#elementTarget?.firstChild : this.#elementTarget]);\n   }\n\n   /**\n    * Provide an override to set this application as the active window regardless of z-index. Changes behaviour from\n    * Foundry core.\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean} [opts.focus=true] - When true and the active element is not contained in the app `elementTarget`\n    *        is focused..\n    *\n    * @param {boolean} [opts.force=false] - Force bring to top; will increment z-index by popOut order.\n    *\n    * @ignore\n    * @internal\n    */\n   bringToTop({ focus = true, force = false } = {})\n   {\n      // Only perform bring to top when the active window is the main Foundry window instance.\n      if (this.reactive.activeWindow !== globalThis) { return; }\n\n      if (force || this.popOut) { super.bringToTop(); }\n\n      const elementTarget = this.elementTarget;\n      const activeElement = document.activeElement;\n\n      // If the activeElement is not contained in this app via elementTarget then blur the current active element\n      // and make elementTarget focused.\n      if (focus && elementTarget && activeElement !== elementTarget && !elementTarget?.contains(activeElement))\n      {\n         // Blur current active element.\n         if (A11yHelper.isFocusTarget(activeElement))\n         {\n            activeElement.blur();\n         }\n\n         elementTarget?.focus();\n      }\n\n      globalThis.ui.activeWindow = this;\n   }\n\n   /**\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\n    * best visual result is to destroy them after the default slide up animation occurs, but before the element\n    * is removed from the DOM.\n    *\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\n    * the Svelte components are destroyed and then the element is removed from the DOM.\n    *\n    * Close the application and unregisters references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes.\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>}    A Promise which resolves once the application is closed.\n    *\n    * @ignore\n    * @internal\n    */\n   async close(options = {})\n   {\n      const states = Application.RENDER_STATES;\n\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\n\n      /**\n       * Get the element.\n       *\n       * @type {HTMLElement}\n       */\n      const el = this.#elementTarget;\n      if (!el)\n      {\n         /**\n          * @ignore\n          * @internal\n          */\n         this._state = states.CLOSED;\n\n         return;\n      }\n\n      // Support for PopOut! module; `close` is double invoked; once before the element is rejoined to the main window.\n      // Reject close invocations when the element window is not the main originating window / globalThis.\n      if (CrossWindow.getWindow(el, { throws: false }) !== globalThis) { return; }\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._state = states.CLOSING;\n\n      // Unsubscribe from any local stores.\n      this.#stores.unsubscribe();\n\n      // Make any window content overflow hidden to avoid any scrollbars appearing in default or Svelte outro\n      // transitions.\n      const content = el.querySelector('.window-content');\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      // Dispatch Hooks for closing the base and subclass applications\n      for (const cls of this.constructor._getInheritanceChain())\n      {\n         /**\n          * A hook event that fires whenever this Application is closed.\n          *\n          * Note: JQuery wrapping as Foundry event arguments uses JQuery.\n          */\n         Hooks.call(`close${cls.name}`, this, $(el));\n      }\n\n      // If options `defaultCloseAnimation` is false then do not execute the standard slide up animation.\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\n      // `defaultCloseAnimation` based on any out transition set or unset.\n      const animate = typeof this.options.defaultCloseAnimation === 'boolean' ? this.options.defaultCloseAnimation :\n       true;\n\n      if (animate)\n      {\n         // Set min height for full slide.\n         el.style.minHeight = '0';\n\n         const { paddingBottom, paddingTop } = globalThis.getComputedStyle(el);\n\n         // Slide-up application.\n         await el.animate([\n            { maxHeight: `${el.clientHeight}px`, paddingTop, paddingBottom },\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: 250, easing: 'ease-in', fill: 'forwards' }).finished;\n      }\n\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\n      const svelteDestroyPromises = [];\n\n      // Manually invoke the destroy callbacks for all Svelte components.\n      for (const entry of this.#svelteData)\n      {\n         if (!isObject(entry)) { continue; }\n\n         // Use `outroAndDestroy` to run outro transitions before destroying.\n         svelteDestroyPromises.push(TJSSvelte.util.outroAndDestroy(entry.component));\n\n         // If any proxy eventbus has been added then remove all event registrations from the component.\n         const eventbus = entry.config.eventbus;\n         if (isObject(eventbus) && typeof eventbus.off === 'function')\n         {\n            eventbus.off();\n            entry.config.eventbus = void 0;\n         }\n      }\n\n      // Await all Svelte components to destroy.\n      await Promise.allSettled(svelteDestroyPromises);\n\n      // Remove from all visible apps tracked.\n      TJSAppIndex.delete(this);\n\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\n      this.#svelteData[0] = null;\n\n      // Remove element from the DOM. Most SvelteComponents have already removed it.\n      el.remove();\n\n      // Silently restore any width / height state before minimized as applicable.\n      this.position.state.restore({\n         name: '#beforeMinimized',\n         properties: ['width', 'height'],\n         silent: true,\n         remove: true\n      });\n\n      // Clean up data\n      this.#applicationShellHolder[0] = null;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._element = null;\n      this.#elementContent = null;\n      this.#elementTarget = null;\n\n      delete globalThis.ui.windows[this.appId];\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._minimized = false;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._scrollPositions = null;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._state = states.CLOSED;\n\n      this.#onMount = false;\n\n      // Update the minimized UI store state.\n      this.#stores.uiStateUpdate((storeOptions) => deepMerge(storeOptions, { minimized: this._minimized }));\n\n      // Apply any stored focus options and then remove them from options.\n      A11yHelper.applyFocusSource(this.options.focusSource);\n\n      delete this.options.focusSource;\n   }\n\n   /**\n    * Specify the set of config buttons which should appear in the SvelteApp header. Buttons should be returned as\n    * an Array of objects. The header buttons which are added to the application can be modified by the\n    * `getApplicationHeaderButtons` hook.\n    *\n    * SvelteApp extends the button functionality with full reactivity for state changes during callbacks. Callbacks\n    * receive the button data and can modify it to update the button state.\n    *\n    * @privateRemarks Provide a basic override implementation to extend types with additional SvelteApp functionality.\n    *\n    * @returns {import('./types').SvelteApp.HeaderButton[]} All header buttons.\n    * @protected\n    */\n   _getHeaderButtons()\n   {\n      return super._getHeaderButtons();\n   }\n\n   /**\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\n    * DOM.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _injectHTML()\n   {\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\n      this.reactive.updateHeaderButtons();\n\n      // Create a function to generate a callback for Svelte components to invoke to update the tracked elements for\n      // application shells in the rare cases that the main element root changes. The update is only triggered on\n      // successive changes of `elementRoot`. Returns a boolean to indicate the element roots are updated.\n      const elementRootUpdate = () =>\n      {\n         let cntr = 0;\n\n         return (elementRoot) =>\n         {\n            if (elementRoot !== null && elementRoot !== void 0 && cntr++ > 0)\n            {\n               this.#updateApplicationShell();\n               return true;\n            }\n\n            return false;\n         };\n      };\n\n      // A sanity check; absence should be detected in constructor.\n      if (!isObject(this.options.svelte))\n      {\n         throw new Error(`SvelteApp - _injectHTML - No Svelte configuration object found in 'options'.`);\n      }\n\n      const svelteData = loadSvelteConfig({\n         app: this,\n         config: this.options.svelte,\n         elementRootUpdate\n      });\n\n      // A sanity check as shouldn't hit this case as only one component is being mounted.\n      if (this.svelte.appShell !== null)\n      {\n         throw new Error(\n          `SvelteApp - _injectHTML - An application shell is already mounted; offending config:\\n` +\n           `${JSON.stringify(this.options.svelte)}`);\n      }\n\n      this.#applicationShellHolder[0] = svelteData.component;\n\n      // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n      // refreshes. Update the element root accordingly and force an update to TJSPosition.\n      // See this issue for info about `on_hmr`:\n      // https://github.com/sveltejs/svelte-hmr/issues/57\n      if (TJSSvelte.util.isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n      {\n         svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n      }\n\n      this.#svelteData[0] = svelteData;\n\n      // Wrap `elementRoot` as a JQuery object and set to AppV1 / Application element.\n      this._element = $(this.svelte.appShell.elementRoot);\n\n      // Detect if the application shell exports an `elementContent` accessor.\n      this.#elementContent = hasGetter(this.svelte.appShell, 'elementContent') ?\n       this.svelte.appShell.elementContent : null;\n\n      // Detect if the application shell exports an `elementTarget` accessor if not set `elementTarget` to\n      // `elementRoot`.\n      this.#elementTarget = hasGetter(this.svelte.appShell, 'elementTarget') ? this.svelte.appShell.elementTarget :\n       this.svelte.appShell.elementRoot;\n\n      // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n      // in `this.#initialZIndex`.\n      if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n      {\n         this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n          this.#initialZIndex ?? 95;\n      }\n\n      // Subscribe to local store handling.\n      this.#stores.subscribe();\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for maximized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.maximize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApp.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default maximizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async maximize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      // Get content\n      const element = this.elementTarget;\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Get the complete position before minimized. Used to reset min width & height to initial values later.\n      const positionBefore = this.position.state.get({ name: '#beforeMinimized' });\n\n      // First animate / restore width / async.\n      if (animate)\n      {\n         await this.position.state.restore({\n            name: '#beforeMinimized',\n            async: true,\n            animateTo: true,\n            properties: ['width'],\n            duration: 0.1\n         });\n      }\n\n      element.classList.remove('minimized');\n\n      // Reset display none on all children of header.\n      for (let cntr = header.children.length; --cntr >= 0;) { header.children[cntr].style.display = null; }\n\n      content.style.display = null;\n\n      let constraints;\n\n      if (animate)\n      {\n         // Next animate / restore height synchronously and remove key. Retrieve constraints data for slide up animation\n         // below.\n         ({ constraints } = this.position.state.restore({\n            name: '#beforeMinimized',\n            animateTo: true,\n            properties: ['height'],\n            remove: true,\n            duration\n         }));\n      }\n      else\n      {\n         ({ constraints } = this.position.state.remove({ name: '#beforeMinimized' }));\n      }\n\n      // Slide down content with stored constraints.\n      await content.animate([\n         { maxHeight: 0, paddingTop: 0, paddingBottom: 0, offset: 0 },\n         { ...constraints, offset: 1 },\n         { maxHeight: '100%', offset: 1 },\n      ], { duration: durationMS, fill: 'forwards' }).finished; // WAAPI in ms.\n\n      // Restore previous min width & height from saved data, app options, or default Foundry values.\n      this.position.set({\n         minHeight: positionBefore.minHeight ?? this.options?.minHeight ?? MIN_WINDOW_HEIGHT,\n         minWidth: positionBefore.minWidth ?? this.options?.minWidth ?? MIN_WINDOW_WIDTH,\n      });\n\n      // Remove inline styles that override any styles assigned to the app.\n      element.style.minWidth = null;\n      element.style.minHeight = null;\n\n      this._minimized = false;\n\n      // Using a 50ms timeout prevents any instantaneous display of scrollbars with the above maximize animation.\n      setTimeout(() =>\n      {\n         content.style.overflow = null;\n\n         // Reset all children of content removing overflow hidden.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = null;\n         }\n      }, 50);\n\n      this.#stores.uiStateUpdate((options) => deepMerge(options, { minimized: false }));\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for minimized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.minimize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApp.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default minimizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async minimize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\n\n      this.#stores.uiStateUpdate((options) => deepMerge(options, { minimized: true }));\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      const element = this.elementTarget;\n\n      // Get content\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Save current max / min height & width.\n      const beforeMinWidth = this.position.minWidth;\n      const beforeMinHeight = this.position.minHeight;\n\n      // Set minimized min width & height for header bar.\n      this.position.set({ minWidth: 100, minHeight: 30 });\n\n      // Also set inline styles to override any styles scoped to the app.\n      element.style.minWidth = '100px';\n      element.style.minHeight = '30px';\n\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      const { paddingBottom, paddingTop } = globalThis.getComputedStyle(content);\n\n      // Extra data that is saved with the current position. Used during `maximize`.\n      const constraints = {\n         maxHeight: `${content.clientHeight}px`,\n         paddingTop,\n         paddingBottom\n      };\n\n      // Slide-up content\n      if (animate)\n      {\n         const animation = content.animate([\n            constraints,\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: durationMS, fill: 'forwards' }); // WAAPI in ms.\n\n         // Set display style to none when animation finishes.\n         animation.finished.then(() => content.style.display = 'none');\n      }\n      else\n      {\n         setTimeout(() => content.style.display = 'none', durationMS);\n      }\n\n      // Save current position state and add the constraint data to use in `maximize`.\n      const saved = this.position.state.save({ name: '#beforeMinimized', constraints });\n\n      // Set the initial before min width & height.\n      saved.minWidth = beforeMinWidth;\n      saved.minHeight = beforeMinHeight;\n\n      const headerOffsetHeight = header.offsetHeight;\n\n      // minHeight needs to be adjusted to header height.\n      this.position.minHeight = headerOffsetHeight;\n\n      if (animate)\n      {\n         // First await animation of height upward.\n         await this.position.animate.to({ height: headerOffsetHeight }, { duration }).finished;\n      }\n\n      // Set all header buttons besides close and the window title to display none.\n      for (let cntr = header.children.length; --cntr >= 0;)\n      {\n         const className = header.children[cntr].className;\n\n         if (className.includes('window-title') || className.includes('close')) { continue; }\n\n         // v10+ of Foundry core styles automatically hides anything besides the window title and close button, so\n         // explicitly set display to block.\n         if (className.includes('keep-minimized'))\n         {\n            header.children[cntr].style.display = 'block';\n            continue;\n         }\n\n         header.children[cntr].style.display = 'none';\n      }\n\n      if (animate)\n      {\n         // Await animation of width to the left / minimum width.\n         await this.position.animate.to({ width: MIN_WINDOW_WIDTH }, { duration: 0.1 }).finished;\n      }\n\n      element.classList.add('minimized');\n\n      this._minimized = true;\n   }\n\n   /**\n    * Provides a callback after all Svelte components are initialized.\n    */\n   onSvelteMount() {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Provides a callback after the main application shell is remounted. This may occur during HMR / hot module\n    * replacement or directly invoked from the `elementRootUpdate` callback passed to the application shell component\n    * context.\n    */\n   onSvelteRemount() {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      this.reactive.updateHeaderButtons();\n   }\n\n   /**\n    * Provides an override verifying that a new Application being rendered for the first time doesn't have a\n    * corresponding DOM element already loaded. This is a check that only occurs when `this._state` is\n    * `Application.RENDER_STATES.NONE`. It is useful in particular when SvelteApp has a static ID\n    * explicitly set in `this.options.id` and long intro / outro transitions are assigned. If a new application\n    * sharing this static ID attempts to open / render for the first time while an existing DOM element sharing\n    * this static ID exists then the initial render is cancelled below rather than crashing later in the render\n    * cycle {@link TJSPosition.set}.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _render(force = false, options = {})\n   {\n      // Store any focusSource instance.\n      if (isObject(options?.focusSource)) { this.options.focusSource = options.focusSource; }\n\n      const activeWindow = this.reactive.activeWindow;\n\n      try\n      {\n         if (this._state === Application.RENDER_STATES.NONE &&\n          A11yHelper.isFocusTarget(activeWindow.document.querySelector(`#${this.id}`)))\n         {\n            console.warn(`SvelteApp - _render: A DOM element already exists for CSS ID '${this.id\n             }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n            return;\n         }\n      }\n      catch (err)\n      {\n         console.warn(`SvelteApp - _render: Potentially malformed application ID '${this.id\n          }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n         return;\n      }\n\n      // On initial render gating of `setPosition` invoked by `Application._render` occurs, so that percentage values\n      // can correctly be positioned with initial helper constraints (centered).\n      this.#gateSetPosition = true;\n\n      await super._render(force, options);\n\n      this.#gateSetPosition = false;\n\n      // Handle the same render exclusion tests that reject a render in Application.\n\n      // Do not render under certain conditions.\n      if ([Application.RENDER_STATES.CLOSING, Application.RENDER_STATES.RENDERING].includes(this._state)) { return; }\n\n      // Applications which are not currently rendered must be forced.\n      if (!force && (this._state <= Application.RENDER_STATES.NONE)) { return; }\n\n      // It is necessary to directly invoke `position.set` as TJSPosition uses accessors and is not a bare object, so\n      // the merging that occurs in `Application._render` does not take effect. Additionally, any of the main\n      // positional properties that are defined as strings such as percentage values need to be set after the element\n      // is mounted.\n      if (!this._minimized)\n      {\n         this.#position.set({\n            left: typeof this.options?.left === 'string' ? this.options.left : void 0,\n            height: typeof this.options?.height === 'string' ? this.options.height : void 0,\n            maxHeight: typeof this.options?.maxHeight === 'string' ? this.options.maxHeight : void 0,\n            maxWidth: typeof this.options?.maxWidth === 'string' ? this.options.maxWidth : void 0,\n            minHeight: typeof this.options?.minHeight === 'string' ? this.options.minHeight : void 0,\n            minWidth: typeof this.options?.minWidth === 'string' ? this.options.minWidth : void 0,\n            rotateX: typeof this.options?.rotateX === 'string' ? this.options.rotateX : void 0,\n            rotateY: typeof this.options?.rotateY === 'string' ? this.options.rotateY : void 0,\n            rotateZ: typeof this.options?.rotateZ === 'string' ? this.options.rotateZ : void 0,\n            rotation: typeof this.options?.rotation === 'string' ? this.options.rotation : void 0,\n            top: typeof this.options?.top === 'string' ? this.options.top : void 0,\n            width: typeof this.options?.width === 'string' ? this.options.width : void 0,\n\n            ...options\n         });\n      }\n\n      if (!this.#onMount)\n      {\n         // Add to visible apps tracked.\n         TJSAppIndex.add(this);\n\n         this.onSvelteMount();\n\n         this.#onMount = true;\n      }\n   }\n\n   /**\n    * Render the inner application content. Provide an empty JQuery element per the core Foundry API.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _renderInner()\n   {\n      const activeWindow = this.reactive.activeWindow;\n\n      const html = activeWindow.document.createDocumentFragment();\n\n      return $(html);\n   }\n\n   /**\n    * Stores the initial z-index set in `_renderOuter` which is used in `_injectHTML` to set the target element\n    * z-index after the Svelte component is mounted.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _renderOuter()\n   {\n      const html = await super._renderOuter();\n      this.#initialZIndex = html[0].style.zIndex;\n      return html;\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link TJSPosition.set}.\n    * This allows position to be fully reactive and in control of updating inline styles for the application.\n    *\n    * This method remains for backward compatibility with Foundry. If you have a custom override quite likely you need\n    * to update to using the {@link TJSPosition.validators} / ValidatorAPI functionality.\n    *\n    * @param {TJSPosition.API.Data.TJSPositionDataRelative}   [position] - TJSPosition data.\n    *\n    * @returns {TJSPosition} The updated position object for the application containing the new values.\n    * @ignore\n    */\n   setPosition(position)\n   {\n      return !this.#gateSetPosition ? this.position.set(position) : this.position;\n   }\n\n   /**\n    * This method is invoked by the `elementRootUpdate` callback that is added to the external context passed to\n    * Svelte components. When invoked it updates the local element roots tracked by SvelteApp.\n    *\n    * This method may also be invoked by HMR / hot module replacement via `svelte-hmr`.\n    */\n   #updateApplicationShell()\n   {\n      const applicationShell = this.svelte.appShell;\n\n      if (applicationShell !== null)\n      {\n         this._element = $(applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(applicationShell, 'elementContent') ?\n          applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(applicationShell, 'elementTarget') ?\n          applicationShell.elementTarget : null;\n\n         if (this.#elementTarget === null)\n         {\n            this.#elementTarget = typeof this.options.selectorTarget === 'string' ?\n             this._element[0].querySelector(this.options.selectorTarget) : this._element[0];\n         }\n\n         // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n         // in `this.#initialZIndex`.\n         if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n         {\n            this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n             this.#initialZIndex ?? 95;\n\n            super.bringToTop();\n\n            // Ensure that new root element has inline position styles set.\n            this.position.set(this.position.get());\n         }\n\n         super._activateCoreListeners([this.popOut ? this.#elementTarget?.firstChild : this.#elementTarget]);\n\n         this.onSvelteRemount();\n      }\n   }\n}\n\n/**\n * Handle `PopOut!` module hooks to allow applications to popout to their own browser window.\n */\nclass PopoutSupport\n{\n   static initialize()\n   {\n      Hooks.on('PopOut:loading', (app, popout) =>\n      {\n         if (app instanceof SvelteApp)\n         {\n            // Disable app position system.\n            app.position.enabled = false;\n\n            // Save current `headerButtonNoClose` state.\n            app.state.save({\n               name: '#beforePopout',\n               headerButtonNoClose: app.reactive.headerButtonNoClose\n            });\n\n            // Set the apps active window to the popout browser window.\n            app.reactive.activeWindow = popout;\n\n            // Disable the close button.\n            app.reactive.headerButtonNoClose = true;\n         }\n      });\n\n      Hooks.on('PopOut:popin', (app) => this.#handleRejoin(app));\n      Hooks.on('PopOut:close', (app) => this.#handleRejoin(app));\n   }\n\n   /**\n    * Handles rejoining the app to main browser window.\n    *\n    * @param {Application} app - The target app.\n    */\n   static #handleRejoin(app)\n   {\n      if (app instanceof SvelteApp)\n      {\n         // Enable the app position system.\n         app.position.enabled = true;\n\n         // Restore the initial header button no close state.\n         const beforeData = app.state.remove({ name: '#beforePopout' });\n         if (beforeData) { app.reactive.headerButtonNoClose = beforeData?.headerButtonNoClose ?? false; }\n\n         // Reset the apps active window to the main `globalThis` reference.\n         app.reactive.activeWindow = void 0;\n      }\n   }\n}\n\n/**\n * Provides storage for all dialog options through individual accessors and `get`, `merge`, `replace` and `set` methods\n * that safely access and update data changed to the mounted DialogShell component reactively.\n */\nclass TJSDialogData\n{\n   /**\n    * @type {import('../../index.js').SvelteApp}\n    */\n   #application;\n\n   /**\n    * Stores the dialog options data.\n    *\n    * @type {import('./types').TJSDialog.OptionsData}\n    */\n   #internal = {};\n\n   /**\n    * @param {import('../../index.js').SvelteApp} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {{ [key: string]: import('./types').TJSDialogButtonData }} The dialog button configuration.\n    */\n   get buttons()\n   {\n      return this.#internal.buttons;\n   }\n\n   /**\n    * Set the dialog button configuration.\n    *\n    * @param {string} buttons - New dialog button configuration.\n    */\n   set buttons(buttons)\n   {\n      this.#internal.buttons = buttons;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelte.Config.Minimal | string} The Svelte configuration object or HTML string\n    *          content.\n    */\n   get content()\n   {\n      return this.#internal.content;\n   }\n\n   /**\n    * Set the Svelte configuration object or HTML string content.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelte.Config.Minimal | string} content - New Svelte configuration object or\n    *        HTML string content.\n    */\n   set content(content)\n   {\n      this.#internal.content = content;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {string} The default button ID to focus initially.\n    */\n   get default()\n   {\n      return this.#internal.default;\n   }\n\n   /**\n    * Set the default button ID to focus initially.\n    *\n    * @param {string} newDefault - New default button ID to focus initially.\n    */\n   set default(newDefault)\n   {\n      this.#internal.default = newDefault;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} The dialog draggable state; draggable when true.\n    */\n   get draggable()\n   {\n      return this.#internal.draggable;\n   }\n\n   /**\n    * Set the dialog state; draggable when true.\n    *\n    * @param {boolean} draggable - New dialog draggable state; draggable when true.\n    */\n   set draggable(draggable)\n   {\n      this.#internal.draggable = draggable;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true auto-management of app focus is enabled.\n    */\n   get focusAuto()\n   {\n      return this.#internal.focusAuto;\n   }\n\n   /**\n    * Set the dialog auto-management of app focus.\n    *\n    * @param {boolean} focusAuto - New dialog auto-management of app focus.\n    */\n   set focusAuto(focusAuto)\n   {\n      this.#internal.focusAuto = focusAuto;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true the first focusable element that isn't a button is focused.\n    */\n   get focusFirst()\n   {\n      return this.#internal.focusFirst;\n   }\n\n   /**\n    * Set the dialog first focusable element state.\n    *\n    * @param {boolean} focusFirst - New dialog first focusable element state.\n    */\n   set focusFirst(focusFirst)\n   {\n      this.#internal.focusFirst = focusFirst;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    */\n   get focusKeep()\n   {\n      return this.#internal.focusKeep;\n   }\n\n   /**\n    * Set the dialog `focusKeep` state. When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    *\n    * @param {boolean} focusKeep - New dialog `focusKeep` state.\n    */\n   set focusKeep(focusKeep)\n   {\n      this.#internal.focusKeep = focusKeep;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true the dialog is minimizable.\n    */\n   get minimizable()\n   {\n      return this.#internal.minimizable;\n   }\n\n   /**\n    * Set the dialog `minimizable` state. When true the dialog is minimizable.\n    *\n    * @param {boolean} minimizable - New dialog `minimizable` state.\n    */\n   set minimizable(minimizable)\n   {\n      this.#internal.minimizable = minimizable;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true a modal dialog is displayed.\n    */\n   get modal()\n   {\n      return this.#internal.modal;\n   }\n\n   /**\n    * Set the dialog `modal` state. When true a modal dialog is displayed.\n    *\n    * @param {boolean} modal - New dialog `modal` state.\n    */\n   set modal(modal)\n   {\n      this.#internal.modal = modal;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {import('./types').TJSDialog.OptionsModal} Additional options for modal dialog display.\n    */\n   get modalOptions()\n   {\n      return this.#internal.modalOptions;\n   }\n\n   /**\n    * Set additional options for modal dialog display.\n    *\n    * @param {import('./types').TJSDialog.OptionsModal} modalOptions - New additional options for modal dialog display.\n    */\n   set modalOptions(modalOptions)\n   {\n      this.#internal.modalOptions = modalOptions;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true and an error is raised in dialog callback functions post a UI error notification.\n    */\n   get notifyError()\n   {\n      return this.#internal.notifyError;\n   }\n\n   /**\n    * Set the dialog `notifyError` state. When true and an error is raised in dialog callback functions post a UI error\n    * notification.\n    *\n    * @param {boolean} notifyError - New dialog `notifyError` state.\n    */\n   set notifyError(notifyError)\n   {\n      this.#internal.notifyError = notifyError;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {string | ((data?: { application?: import('../../index.js').TJSDialog }) => any)} Callback invoked when\n    *          dialog is closed; no button option selected. When defined as a string any matching function by name\n    *          exported from content Svelte component is invoked.\n    */\n   get onClose()\n   {\n      return this.#internal.onClose;\n   }\n\n   /**\n    * Set callback invoked when dialog is closed; no button option selected. When defined as a string any matching\n    * function by name exported from content Svelte component is invoked..\n    *\n    * @param {string | ((data?: { application?: import('../../index.js').TJSDialog }) => any)} onClose - New dialog\n    *        `onClose` state.\n    */\n   set onClose(onClose)\n   {\n      this.#internal.onClose = onClose;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} Dialog `rejectClose` state. When true and a Promise has been created by {@link TJSDialog.wait}\n    *          and the Promise is not in the process of being resolved or rejected on close of the dialog any `onClose`\n    *          function is invoked and any result that is undefined will cause the Promise to then be rejected..\n    */\n   get rejectClose()\n   {\n      return this.#internal.rejectClose;\n   }\n\n   /**\n    * Set the dialog `rejectClose` state.\n    *\n    * @param {boolean} rejectClose - New dialog `rejectClose` state.\n    */\n   set rejectClose(rejectClose)\n   {\n      this.#internal.rejectClose = rejectClose;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true the dialog is resizable.\n    */\n   get resizable()\n   {\n      return this.#internal.resizable;\n   }\n\n   /**\n    * Set the dialog `resizable` state. When true the dialog is resizable.\n    *\n    * @param {boolean} resizable - New dialog `resizable` state.\n    */\n   set resizable(resizable)\n   {\n      this.#internal.resizable = resizable;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true and resolving any Promises and there are undefined results from any button callbacks\n    *          the button ID is resolved.\n    */\n   get resolveId()\n   {\n      return this.#internal.resolveId;\n   }\n\n   /**\n    * Set the dialog `resolveId` state. When true and resolving any Promises and there are undefined results from any\n    * button callbacks the button ID is resolved.\n    *\n    * @param {boolean} resolveId - New dialog `resolveId` state.\n    */\n   set resolveId(resolveId)\n   {\n      this.#internal.resolveId = resolveId;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {string} The dialog window title.\n    */\n   get title()\n   {\n      return this.#internal.title;\n   }\n\n   /**\n    * Set the dialog window title.\n    *\n    * @param {string} title - New dialog window title.\n    */\n   set title(title)\n   {\n      this.#internal.title = title;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {import('./types').TJSDialog.OptionsTransition} Transition options for the dialog.\n    */\n   get transition()\n   {\n      return this.#internal.transition;\n   }\n\n   /**\n    * Set transition options for the dialog.\n    *\n    * @param {import('./types').TJSDialog.OptionsTransition} transition - New transition options for the dialog.\n    */\n   set transition(transition)\n   {\n      this.#internal.transition = transition;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {number | null} A specific z-index for the dialog. Pass null for the dialog to act like other\n    *          applications in regard bringing to top when activated.\n    */\n   get zIndex()\n   {\n      return this.#internal.zIndex;\n   }\n\n   /**\n    * Set specific z-index for the dialog.\n    *\n    * @param {number | null} zIndex - New z-index for the dialog.\n    */\n   set zIndex(zIndex)\n   {\n      this.#internal.zIndex = zIndex;\n      this.#updateComponent();\n   }\n\n   /**\n    * Provides a cloned copy of the dialog data.\n    * Note: The content attribute is not cloned as complex / props may be present.\n    *\n    * @returns {import('./types').TJSDialog.OptionsData} A clone of the dialog data.\n    */\n   clone()\n   {\n      // Make a shallow copy of internally stored data.\n      const shallowCopy = { ...this.#internal };\n\n      // Remove the content parameter as it may contain complex props sent to the hosted dialog component.\n      delete shallowCopy.content;\n\n      // Clone the internal data and then set the content directly.\n      const cData = klona(shallowCopy);\n      cData.content = this.#internal.content;\n\n      return cData;\n   }\n\n   /**\n    * Provides a way to safely get this dialogs data given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {any} Value at the accessor.\n    */\n   get(accessor, defaultValue)\n   {\n      return safeAccess(this.#internal, accessor, defaultValue);\n   }\n\n   /**\n    * @param {import('./types').TJSDialog.OptionsData} data - Merge provided data object into Dialog data.\n    */\n   merge(data)\n   {\n      deepMerge(this.#internal, data);\n      this.#updateComponent();\n   }\n\n   /**\n    * Sets the dialog data; this is reactive.\n    *\n    * @param {import('./types').TJSDialog.OptionsData}   data - Dialog data.\n    */\n   replace(data)\n   {\n      if (!isObject(data)) { throw new TypeError(`TJSDialogData replace error: 'data' is not an object'.`); }\n\n      this.#internal = {};\n\n      // Merge new data and perform a reactive update.\n      this.merge(data);\n   }\n\n   /**\n    * Provides a way to safely set this dialogs data given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Automatically the dialog data will be updated in the associated DialogShell Svelte component.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      value - Value to set.\n    *\n    * @returns {boolean} True if successful.\n    */\n   set(accessor, value)\n   {\n      const success = safeSet(this.#internal, accessor, value, { createMissing: true });\n\n      // If `this.#internal` modified then update the app options store.\n      if (success) { this.#updateComponent(); }\n\n      return success;\n   }\n\n   /**\n    * Updates the data in the Svelte dialog component.\n    */\n   #updateComponent()\n   {\n      const component = this.#application.svelte.appShell;\n      if (component?.data) { component.data = this.clone(); }\n   }\n}\n\n/**\n * Provides a reactive dialog implementation configured from a unique dialog options object. The dialog features a\n * bottom button bar for user selection.\n *\n * A glasspane / modal option with various styling and transition capabilities is available when setting `modal: true`.\n *\n * Most importantly the `content` attribute of dialog data can be a Svelte component configuration object to render\n * your custom component as the dialog content. When using a Svelte component as the content you can assign a string\n * to the various `on<XXX>` dialog callbacks and an exported function from your component will be invoked to handle the\n * button callback. All dialog button callbacks and `onClose` callback receive a single argument which is the dialog /\n * application instance.\n *\n * When making a form with form validation or other dialog that you don't want to close immediately on button press you\n * can set `autoClose: false`, however you are 100% in control of resolving any Promise callbacks from button presses\n * and also closing the application. Each button can also be configured with `autoClose: false` in the button data.\n *\n * There is a handy Promise management capability to track a single Promise for the lifetime of a dialog available\n * at {@link TJSDialog.managedPromise}. By default when the user closes the dialog / application any managed Promise is\n * resolved with `null`. The managed Promise is available in any Svelte content component by using\n * `const managedPromise = getContext('#managedPromise')`. When handling any custom resolution particularly when\n * setting `autoClose: false` for a given button you are 100% in control of resolving or rejecting asynchronous data to\n * return from the dialog.\n *\n * To create and wait upon a managed promise for asynchronous return results use the static or member variation of\n * {@link TJSDialog.wait}.\n *\n * Please refer to {@link TJSDialog.OptionsData} for the various options used to construct the dialog.\n *\n * There are a couple of static helper methods to quickly create standard dialogs such as a 'yes' / 'no' confirmation\n * dialog with {@link TJSDialog.confirm} and an 'ok' single button dialog with {@link TJSDialog.prompt}.\n */\nclass TJSDialog extends SvelteApp\n{\n   /** @type {TJSDialogData} */\n   #data;\n\n   /** @type {ManagedPromise} */\n   #managedPromise;\n\n   /**\n    * @param {import('./internal/state-dialog/types').TJSDialog.OptionsData} data - Dialog options.\n    *\n    * @param {import('./types').SvelteApp.OptionsCore}   [options] - SvelteApp options.\n    */\n   constructor(data, options = {})\n   {\n      // Note: explicit setting of `popOutModuleDisable` to prevent the PopOut! module from acting on modal dialogs.\n      // @ts-expect-error\n      super({ popOutModuleDisable: typeof data?.modal === 'boolean' ? data.modal : false, ...options });\n\n      this.#managedPromise = new ManagedPromise();\n\n      this.#data = new TJSDialogData(this);\n      this.#data.replace(data);\n   }\n\n   /**\n    * Default options for TJSDialog. Provides a default width and setting `height` to `auto` to always display dialog\n    * content even if it changes. The default `DialogShell` / `svelte` options should not be changed and instead mount\n    * the dialog content component by supplying a Svelte configuration object to dialog data `content` field.\n    *\n    * @returns {import('./types').SvelteApp.Options} Default options\n    */\n   static get defaultOptions()\n   {\n      return /** @type {import('./types').SvelteApp.Options} */ deepMerge(super.defaultOptions, {\n         classes: ['dialog', 'tjs-dialog'],\n         width: 400,\n         height: 'auto',\n         svelte: {\n            class: DialogShell,\n            intro: true,\n            target: document.body,\n            /**\n             * `this` is the TJSDialog instance when invoked.\n             *\n             * @this {TJSDialog}\n             *\n             * @returns {{data: import('./types').TJSDialog.OptionsData, managedPromise: ManagedPromise}} Props\n             */\n            props: function()\n            {\n               return {\n                  data: this.#data.clone(),\n                  managedPromise: this.#managedPromise\n               };\n            }\n         }\n      });\n   }\n\n   /**\n    * Returns the dialog data.\n    *\n    * @returns {import('./internal/state-dialog/types').TJSDialog.Data} Dialog data.\n    */\n   get data() { return this.#data; }\n\n   /**\n    * @returns {import('@typhonjs-fvtt/runtime/util/async').ManagedPromise} Returns the managed promise.\n    */\n   get managedPromise() { return this.#managedPromise; }\n\n   /**\n    * Close the dialog and un-register references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes.\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>} A Promise which resolves once the application is closed with the callback value or\n    *                          `true`.\n    */\n   async close(options)\n   {\n      try\n      {\n         // Note: When handling a managed promise if a button selection has already been made the managed promise is\n         // already processing and the resolution below is skipped.\n         if (this.#managedPromise.isActive && !this.#managedPromise.isProcessing)\n         {\n            const result = TJSDialog.#invokeFn(this.#data.onClose, this, null);\n            const rejectClose = typeof this.#data.rejectClose === 'boolean' ? this.#data.rejectClose : false;\n\n            if (rejectClose && result === null)\n            {\n               this.#managedPromise.reject(new Error('TJSDialog was closed without a choice being made.'));\n            }\n            else\n            {\n               this.#managedPromise.resolve(result);\n            }\n         }\n      }\n      catch (err)\n      {\n         const notifyError = typeof this.#data.notifyError === 'boolean' ? this.#data.notifyError : true;\n         if (notifyError)\n         {\n            // TODO: When app eventbus is available send event for UI notification instead of Foundry API usage.\n            globalThis.ui.notifications.error(err, { console: false });\n         }\n\n         // If there is a managed Promise reject it or re-throw error.\n         if (!this.#managedPromise.reject(err)) { throw err; }\n      }\n      finally\n      {\n         await super.close(options);\n      }\n   }\n\n   /**\n    * Brings to top or renders this dialog returning a Promise that is resolved any button pressed or when the dialog\n    * is closed.\n    *\n    * Creates an anonymous data defined TJSDialog returning a Promise that can be awaited upon for the user to make a\n    * choice.\n    *\n    * Note: `null` is returned if the dialog is closed without a user making a choice.\n    *\n    * @template T\n    *\n    * @param {object}   [options] - Options.\n    *\n    * @param {boolean}  [options.reuse=false] - When true if there is an existing managed Promise this allows multiple\n    *        sources to await on the same result.\n    *\n    * @returns {Promise<T>} A promise for dialog resolution.\n    */\n   async wait(options)\n   {\n      // TODO: Direct usage of Foundry core Application API.\n      if (this.rendered)\n      {\n         this.bringToTop();\n      }\n      else\n      {\n         this.render(true, { focus: true });\n      }\n\n      // Return a managed Promise which is automatically resolved on button press via `DialogContent` component or when\n      // the dialog is closed.\n      return this.#managedPromise.create(options);\n   }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * A helper factory method to create simple confirmation dialog windows which consist of simple yes / no prompts.\n    * If you require more flexibility, a custom TJSDialog instance is preferred. The default focused button is 'yes'.\n    * You can change the default focused button by setting `default` to `yes` or `no`.\n    *\n    * @template T\n    *\n    * @param {import('./internal/state-dialog/types').TJSDialog.OptionsData & {\n    *    onYes?: string | ((data?: { application?: TJSDialog }) => any),\n    *    onNo?: string | ((data?: { application?: TJSDialog }) => any)\n    * }} [data] - Confirm dialog options.\n    *\n    * @param {string|((data?: { application?: TJSDialog }) => any)} [data.onYes] - Callback function upon `yes`; may be\n    *        an async function. When defined as a string any matching function by name exported from content Svelte\n    *        component is invoked.\n    *\n    * @param {string|((data?: { application?: TJSDialog }) => any)} [data.onNo] - Callback function upon `no`; may be an\n    *        async function. When defined as a string any matching function by name exported from content Svelte\n    *        component is invoked.\n    *\n    * @param {import('./types').SvelteApp.OptionsCore}  [options]  SvelteApp options passed to the\n    *        TJSDialog constructor.\n    *\n    * @returns {Promise<T>} A promise which resolves with result of yes / no callbacks or true / false.\n    *\n    * @example\n    * const result = await TJSDialog.confirm({\n    *  title: 'A Yes or No Question',\n    *  content: '<p>Choose wisely.</p>',\n    *  onYes: () => 'YES Result',\n    *  onNo: () => 'NO Result'\n    * });\n    *\n    * // Logs 'YES result', 'NO Result', or null if the user closed the dialog without making a selection.\n    * console.log(result);\n    */\n   static async confirm({ onYes, onNo, ...data } = {}, options = {})\n   {\n      // Allow overwriting of default icon and labels.\n      const mergedButtons = deepMerge({\n         yes: {\n            icon: 'fas fa-check',\n            label: 'Yes'\n         },\n         no: {\n            icon: 'fas fa-times',\n            label: 'No',\n         }\n      }, data.buttons ?? {});\n\n      return this.wait({\n         ...data,\n         buttons: deepMerge(mergedButtons, {\n            yes: {\n               onPress: ({ application }) => this.#invokeFn(onYes, application, true)\n            },\n            no: {\n               onPress: ({ application }) => this.#invokeFn(onNo, application, false)\n            }\n         }),\n         default: data.default ?? 'yes'\n      }, options);\n   }\n\n   /**\n    * A helper method to invoke a callback function directly or lookup an exported function with the same name from any\n    * content Svelte component to invoke. This is used internally to apply default values for `confirm` and `prompt`.\n    *\n    * @param {string|((data?: { application?: TJSDialog }) => any)} callback - Callback function to invoke; may be an\n    *        async function. When defined as a string any matching function by name exported from content Svelte\n    *        component is invoked.\n    *\n    * @param {TJSDialog} application - TJSDialog instance passed to callback.\n    *\n    * @param {*} [defaultResult] - An optional default result to return; undefined if not specified.\n    *\n    * @returns {*} Result.\n    *\n    * @internal\n    */\n   static #invokeFn(callback, application, defaultResult = void 0)\n   {\n      let result = defaultResult;\n\n      switch (typeof callback)\n      {\n         case 'function':\n            // Pass the dialog instance to the callback.\n            result = callback({ application });\n            break;\n\n         case 'string':\n         {\n            const dialogComponent = application?.svelte?.appShell?.dialogComponent;\n\n            // Attempt lookup by function name in dialog instance component.\n            if (dialogComponent !== void 0 && typeof dialogComponent?.[callback] === 'function')\n            {\n               result = dialogComponent?.[callback]({ application });\n            }\n            else\n            {\n               if (dialogComponent === void 0)\n               {\n                  console.warn(`[TRL] TJSDialog warning: 'onPress' defined as a string with no ` +\n                   `associated content Svelte component.`);\n               }\n               else if (typeof dialogComponent?.[callback] !== 'function')\n               {\n                  console.warn(`[TRL] TJSDialog warning: The content Svelte component does not contain ` +\n                   `an associated function '${callback}'. Did you remember to add ` +\n                   `'<svelte:options accessors={true} />' and export the function?`);\n               }\n            }\n            break;\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * A helper factory method to display a basic \"prompt\" style TJSDialog with a single button.\n    *\n    * @template T\n    *\n    * @param {import('./internal/state-dialog/types').TJSDialog.OptionsData & {\n    *    onOk?: string | ((data?: { application?: TJSDialog }) => any),\n    *    label?: string,\n    *    icon?: string\n    * }} [data] - Prompt dialog options that includes any TJSDialog options along with the following optional fields:\n    *\n    * @param {string|((data?: { application?: TJSDialog }) => any)} [data.onOk] - Callback function upon `ok`; may be\n    *        an async function. When defined as a string any matching function by name exported from content Svelte\n    *        component is invoked.\n    *\n    * @param {string}   [data.label] - The OK prompt button text.\n    *\n    * @param {string}   [data.icon=\"fas fa-check\"] - Set another icon besides `fas fa-check` for button.\n    *\n    * @param {import('./types').SvelteApp.OptionsCore}  [options]  SvelteApp options passed to the\n    *        TJSDialog constructor.\n    *\n    * @returns {Promise<T>} The returned value from the provided callback function or `true` if the button\n    *          is pressed.\n    *\n    * @example\n    * const result = await TJSDialog.prompt({\n    *  title: 'Are you OK?',\n    *  content: '<p>Are you OK?.</p>',\n    *  label: 'Feeling Fine!',\n    *  onOk: () => 'OK'\n    * });\n    *\n    * // Logs 'OK' or null if the user closed the dialog without making a selection.\n    * console.log(result);\n    */\n   static async prompt({ onOk, label, icon = 'fas fa-check', ...data } = {}, options = {})\n   {\n      return this.wait({\n         ...data,\n         buttons: {\n            ok: {\n               icon,\n               label,\n               onPress: ({ application }) => this.#invokeFn(onOk, application, true)\n            }\n         },\n         default: 'ok'\n      }, options);\n   }\n\n   /**\n    * Creates an anonymous data defined TJSDialog returning a Promise that can be awaited upon for the user to make a\n    * choice.\n    *\n    * Note: By default `null` is returned if the dialog is closed without a user making a choice.\n    *\n    * @template T\n    *\n    * @param {import('./internal/state-dialog/types').TJSDialog.OptionsData}  data - Dialog data passed to the\n    *        TJSDialog constructor.\n    *\n    * @param {import('./types').SvelteApp.OptionsCore}  [options]  SvelteApp options passed to the\n    *        TJSDialog constructor.\n    *\n    * @returns {Promise<T>} A Promise that resolves to the chosen result.\n    */\n   static async wait(data, options = {})\n   {\n      if (!isObject(data)) { throw new TypeError(`TJSDialog.wait error: 'data' is not an object'.`); }\n\n      // Instantiate and render the dialog.\n      return new this({ ...data }, options).wait();\n   }\n}\n\n// Handle `hotReload` Foundry hook when running the Vite dev server.\nif (import.meta.hot) { FoundryHMRSupport.initialize(); }\n\n// Handle `PopOut!` module hooks to allow applications to popout to their own browser window.\nPopoutSupport.initialize();\n\nexport { SvelteApp, SvelteApp as SvelteApplication, TJSDialog };\n//# sourceMappingURL=index.js.map\n","<script lang=\"ts\">\n\n </script>\n \n<div class=\"panel\">\n    <slot></slot>\n</div>\n \n <style lang=\"scss\">\n    .panel {\n        pointer-events: all;\n        background: var(--outer-background);\n        border-radius: 5px;\n        color: white;\n    }\n </style>\n ","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  export let items = null\n  export let id = null\n  const dispatch = createEventDispatcher();\n\n  const dispatchItemRoll = (item) => {\n    item.use({})\n  }\n</script>\n\n<div id={id} class=\"popover\">\n  {#each items as item}\n  <!-- svelte-ignore a11y-no-static-element-interactions -->\n  <!-- svelte-ignore a11y-missing-attribute -->\n  <div class=\"item\">\n    <!-- svelte-ignore a11y-click-events-have-key-events -->\n    <a on:click={() => dispatchItemRoll(item)}>{item.name}</a>\n  </div>\n  {/each}\n</div>\n  \n<style lang=\"scss\">\n  .popover {\n    display: flex;\n    gap: 3px;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    border-radius: 1em;\n    color: white;\n    pointer-events: all;\n    border-radius: 5px;\n    z-index: var(--z-index-app);\n    background: url(\"../../../ui/denim075.png\") repeat #4d4d4d;\n\n    .item {\n      margin: 5px;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n</style>\n  ","export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];","export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}","export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}","import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };","import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};","import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}","export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;","export default function getUAString() {\n  var uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(function (item) {\n      return item.brand + \"/\" + item.version;\n    }).join(' ');\n  }\n\n  return navigator.userAgent;\n}","import getUAString from \"../utils/userAgent.js\";\nexport default function isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}","import { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport { round } from \"../utils/math.js\";\nimport getWindow from \"./getWindow.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  var clientRect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  var _ref = isElement(element) ? getWindow(element) : window,\n      visualViewport = _ref.visualViewport;\n\n  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n  var width = clientRect.width / scaleX;\n  var height = clientRect.height / scaleY;\n  return {\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x: x,\n    y: y\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}","import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}","import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}","import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}","import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}","import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}","import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getUAString from \"../utils/userAgent.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = /firefox/i.test(getUAString());\n  var isIE = /Trident/i.test(getUAString());\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}","export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}","import { max as mathMax, min as mathMin } from \"./math.js\";\nexport function within(min, value, max) {\n  return mathMax(min, mathMin(value, max));\n}\nexport function withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}","export default function getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}","import getFreshSideObject from \"./getFreshSideObject.js\";\nexport default function mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}","export default function expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport { within } from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","export default function getVariation(placement) {\n  return placement.split('-')[1];\n}","import { top, left, right, bottom, end } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref, win) {\n  var x = _ref.x,\n      y = _ref.y;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }, getWindow(popper)) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};","import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};","var hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nexport default function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}","var hash = {\n  start: 'end',\n  end: 'start'\n};\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}","import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}","import getWindow from \"./getWindow.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getViewportRect(element, strategy) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}","import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}","import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}","import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}","export default function rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}","import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  var rect = getBoundingClientRect(element, false, strategy === 'fixed');\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary, strategy) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}","import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}","import getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$strategy = _options.strategy,\n      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}","import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}","import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};","import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};","export default function getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}","import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport { within, withinMaxClamp } from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { min as mathMin, max as mathMax } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};","export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}","import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}","export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}","export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}","import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        });\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref) {\n        var name = _ref.name,\n            _ref$options = _ref.options,\n            options = _ref$options === void 0 ? {} : _ref$options,\n            effect = _ref.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };","import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nimport offset from \"./modifiers/offset.js\";\nimport flip from \"./modifiers/flip.js\";\nimport preventOverflow from \"./modifiers/preventOverflow.js\";\nimport arrow from \"./modifiers/arrow.js\";\nimport hide from \"./modifiers/hide.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles, offset, flip, preventOverflow, arrow, hide];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow }; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper as createPopperLite } from \"./popper-lite.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport * from \"./modifiers/index.js\";","<script lang=\"ts\">\n    import { createPopper } from '@popperjs/core/dist/esm';\n   import { SvelteComponent } from 'svelte';\n\n    export let props = null\n    export let component = SvelteComponent\n    let ref;\n    let popperInstance = null\n    let componentInstance = null\n    let isActive = false\n    let id = Date.now().toString(36) + Math.random().toString(36).substr(2)\n\n    function show(e) {\n        isActive = true\n        componentInstance = new component({\n            target: document.body,\n            props: {...props, id}\n        });\n\n        const renderedComponent = document.querySelector(`#${id}`);\n\n        popperInstance = createPopper(ref, renderedComponent, {\n            placement: 'top'\n        });\n\n        document.addEventListener('click', detectClickOutside)\n    }\n\n    function detectClickOutside(event) {\n        if (!isActive) return\n        if (ref && !ref.contains(event.target)) {\n            event.stopPropagation()\n            hide()\n        }\n    }\n\n    function hide () {\n        popperInstance?.destroy()\n        componentInstance?.$destroy()\n        popperInstance = null\n        componentInstance = null\n        isActive = false\n        document.removeEventListener('click', detectClickOutside);\n    }\n\n    function togglePop(event) {\n        if (!isActive) {\n            show()\n        } else {\n            hide()\n        }\n    }\n  </script>\n  \n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<!-- svelte-ignore a11y-no-static-element-interactions -->\n<div bind:this={ref} on:click={togglePop}>\n    <slot />\n</div>\n  \n  ","<script lang=\"ts\">\n    import ItemsPopover from './popovers/ItemsPopover.svelte';\n    import Popover from './popovers/Popover.svelte';\n    export let actor = null\n\n    const getActorAttacks = () => {\n     return actor?.items.map((item) => {\n        if (item.type === 'weapon') {\n          return item\n        }\n        return null;\n      }).filter(Boolean);\n    }\n\n    const getAdversaryAttacks = () => {\n      return actor?.system?.attack ? [actor?.system?.attack] : [];\n    }\n\n    $: attacks = actor?.type === 'character' ? getActorAttacks() : getAdversaryAttacks()\n  </script>\n  \n<Popover component={ItemsPopover} props={{ items: attacks }}>\n  <div class=\"attacks { attacks?.length === 0 ? 'fade' : '' }\">\n    <!-- svelte-ignore a11y-missing-attribute -->\n    <a data-tooltip=\"Attacks\" role=\"button\">\n      <i class=\"fa-solid fa-sword\"></i>\n    </a>\n  </div>\n</Popover>\n  \n  <style lang=\"scss\">\n    .attacks {\n      pointer-events: all;\n      color: white;\n      padding: 5px;\n      min-width: 24px;\n      &.fade {\n        cursor: not-allowed;\n        opacity: 0.5;\n      }\n    }\n  </style>\n  \n  ","<script lang=\"ts\">\n    import ItemsPopover from './popovers/ItemsPopover.svelte';\n    import Popover from './popovers/Popover.svelte';\n    export let actor = null\n\n    $: features = actor?.items.map((item) => {\n        if (item.type === 'feature') {\n          return item\n        }\n        return null;\n      }).filter(Boolean);\n  </script>\n  \n<Popover component={ItemsPopover} props={{ items: features }}>\n  <div class=\"features { features?.length === 0 ? 'fade' : '' }\">\n    <!-- svelte-ignore a11y-missing-attribute -->\n    <a data-tooltip=\"features\" role=\"button\">\n      <i class=\"fa-solid fa-bolt\"></i>\n    </a>\n  </div>\n</Popover>\n  \n  <style lang=\"scss\">\n    .features {\n      pointer-events: all;\n      color: white;\n      padding: 5px;\n      min-width: 24px;\n      &.fade {\n        cursor: not-allowed;\n        opacity: 0.5;\n      }\n    }\n  </style>\n  \n  ","<script lang=\"ts\">\n    import ItemsPopover from './popovers/ItemsPopover.svelte';\n    import Popover from './popovers/Popover.svelte';\n    export let actor = null\n\n    $: domains = actor?.items.map((item) => {\n        if (item.type === 'domainCard') {\n          return item\n        }\n        return null;\n      }).filter(Boolean);\n  </script>\n  \n<Popover component={ItemsPopover} props={{ items: domains }}>\n  <div class=\"domains { domains?.length === 0 ? 'fade' : '' }\">\n    <!-- svelte-ignore a11y-missing-attribute -->\n    <a data-tooltip=\"domains\" role=\"button\">\n      <i class=\"fa-solid fa-book\"></i>\n    </a>\n  </div>\n</Popover>\n  \n  <style lang=\"scss\">\n    .domains {\n      pointer-events: all;\n      color: white;\n      padding: 5px;\n      min-width: 24px;\n      &.fade {\n        cursor: not-allowed;\n        opacity: 0.5;\n      }\n    }\n  </style>\n  \n  ","<script lang='ts'>\n  import { createEventDispatcher } from 'svelte';\n  export let actor = null\n\n\t$: ({ resources } = actor?.system);\n\n   const getAttribute = (key: string) => {\n      switch (key) {\n         case 'hitPoints':\n            return 'system.resources.hitPoints.value';\n         case 'hope':\n            return 'system.resources.hope.value';\n         case 'stress':\n            return 'system.resources.stress.value';\n         case 'armor':\n            return 'system.resources.armor.value';\n         default:\n            return '';\n      }\n   }\n\n   let timer: NodeJS.Timeout\n    const updateAttribute = (event: any, key) => {\n      debounceUpdateActor(Number(event.target.value), key)\n    }\n\n    const debounceUpdateActor = (newValue: number, attribute: string) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n         const attrKey = getAttribute(attribute)\n         try {\n               actor.update({ [attrKey]: newValue })\n         } catch (error) {\n               console.error('dh-hud', `Error updating actor attribute: ${attribute}`, error)\n         }\n      }, 750);\n    }\n\n  const onAttributeChange = (e: Event, key: string) => {\n    updateAttribute(e, key)\n  }\n</script>\n\n<div class=\"portrait\">\n    <div class=\"top\">\n       {#if actor?.name}\n          {actor?.name}\n       {/if}\n    </div>\n    {#if actor?.img}\n       <div class=\"avatar\" style=\"background-image: url({actor?.img});\"/>\n    {/if}\n        <div class=\"bottom\">\n            {#if resources?.armor}\n            <!-- armor -->\n            <div class=\"stat\" data-tooltip=\"Armor\">\n                <div class=\"icon\">\n                    <i class=\"fa-solid fa-shield\"></i>\n                </div>\n                <div class=\"field\">\n                    <input type=\"number\" value={resources?.armor.value} on:input={(e) => onAttributeChange(e, 'armor')} />\n                    <div class=\"max\">\n                        <div>/</div>\n                        <div>{resources?.armor?.max}</div>\n                    </div>\n                </div>\n            </div>\n            {/if}\n\n            {#if resources?.hitPoints}\n            <!-- health -->\n            <div class=\"stat\" data-tooltip=\"Health points\">\n                <div class=\"icon\">\n                    <i class=\"fa-solid fa-heart\"></i>\n                </div>\n                <div class=\"field\">\n                    <input type=\"number\" value={resources?.hitPoints.value} on:input={(e) => onAttributeChange(e, 'hitPoints')} />\n                    <div class=\"max\">\n                        <div>/</div>\n                        <div>{resources?.hitPoints?.max}</div>\n                    </div>\n                </div>\n            </div>\n            {/if}\n\n            {#if resources?.stress}\n            <!-- stress -->\n            <div class=\"stat\" data-tooltip=\"Stress points\" on:input={(e) => onAttributeChange(e, 'stress')}>\n                <div class=\"icon\">\n                    <i class=\"fa-solid fa-droplet\"></i>\n                </div>\n                <div class=\"field\">\n                    <input type=\"number\" value={resources?.stress?.value} />\n                    <div class=\"max\">\n                        <div>/</div>\n                        <div>{resources?.stress?.max}</div>\n                    </div>\n                </div>\n            </div>\n            {/if}\n\n            {#if resources?.hope}\n            <!-- hope -->\n            <div class=\"stat\" data-tooltip=\"Hope points\">\n                <div class=\"icon\">\n                    <i class=\"fa-solid fa-bolt\"></i>\n                </div>\n                <div class=\"field\">\n                    <input type=\"number\" value={resources?.hope?.value} on:input={(e) => onAttributeChange(e, 'hope')} />\n                    <div class=\"max\">\n                        <div>/</div>\n                        <div>{resources?.hope?.max}</div>\n                    </div>\n                </div>\n            </div>\n            {/if}\n        </div>\n </div>\n\n<style lang=\"scss\">\n    .portrait {\n        background: var(--outer-background);\n        border-radius: 5px;\n        position: relative;\n        height: 100%;\n        padding: 0;\n        aspect-ratio: 1 / 1;\n        pointer-events: all;\n\n        .top {\n            position: absolute;\n            height: 17px;\n            color: white;\n            top: 0;\n            inset-inline: 0;\n            text-align: center;\n            background: linear-gradient(90deg, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0.6) 20%, rgba(0, 0, 0, 0.8) 50%, rgba(0, 0, 0, 0.6) 80%, rgba(0, 0, 0, 0.3) 100%);\n        }\n\n        .avatar {\n            inset: 0;\n            background-position: center top;\n            background-repeat: no-repeat;\n            background-size: cover;\n            width: 100%;\n            height: 100%;\n        }\n\n        .bottom {\n            color: white;\n            position: absolute;\n            bottom: 0;\n            inset-inline: 0;\n            display: grid;\n            gap: var(--section-gap);\n            background: rgba(33, 33, 33, .7019607843);\n            padding: .2em .1em .1em;\n            grid-template-columns: repeat(2, 1fr);\n            align-items: center;\n\n            .stat {\n                display: flex;\n                margin: 0 auto;\n\n                .icon {\n                    width: 15px;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                }\n\n                .field {\n                    display:flex;\n                    align-items: center;\n                    input {\n                        height: 20px;\n                        background: rgba(33, 33, 33, .7019607843);\n                        color: white;\n                        width: var(--input-width);\n                        text-align: center;\n                        border: none;\n                        &:focus {\n                            box-shadow: 0 0 5px var(--color-shadow-primary);\n                        }\n                    }\n\n                    .max {\n                        display: flex;\n                        width: 30px;\n                        gap: 5px;\n                    }\n                }\n            }\n        }\n    }\n</style>\n","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import Panel from './Panel.svelte';\n  export let actor = null\n\n  $: traits = Object.keys(actor?.system?.traits).map((key) => ({\n    key: key,\n    label: key,\n    icon: `fa-solid fa-${getIconByKey(key)}`,\n    value: actor?.system?.traits[key]?.value || 0,\n  }));\n\n  const rollTrait = (event, trait) => {\n    actor.sheet.options.actions.rollAttribute.call(actor.sheet, event, {\n        dataset: {\n            attribute: trait\n        }\n    })\n  }\n\n  const getIconByKey = (key) => {\n    switch (key) {\n      case 'strength':\n        return 'fist-raised';\n      case 'agility':\n        return 'running';\n      case 'finesse':\n        return 'user-ninja';\n      case 'instinct':\n        return 'head-side-brain';\n      case 'presence':\n        return 'person-burst';\n      case 'knowledge':\n        return 'brain';\n      default:\n        return key;\n    }\n  }\n\n</script>\n<div>\n    <Panel>\n        <!-- svelte-ignore a11y-missing-attribute -->\n        <div class=\"traits\">\n            { #each traits as trait}\n                <!-- svelte-ignore a11y-click-events-have-key-events -->\n                <a\n                    class=\"trait\"\n                    data-tooltip=\"{trait.label}\"\n                    role=\"button\"\n                    tabindex=\"0\"\n                    on:click={(e) => rollTrait(e, trait.key)}\n                >\n                    <i class=\"{trait.icon}\" />\n                    <span class=\"value\">{trait.value}</span>\n                </a>\n            {/each}\n        </div>\n    </Panel>\n</div>\n\n <style lang=\"scss\">\n    .traits {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        padding: 5px;\n        width: var(--special-width);\n        border-radius: 5px;\n        height: calc(var(--hotbar-height) + var(--hud-height));\n\n       .trait {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          gap: 2px;\n          justify-content: center;\n          align-items: center;\n\n          .traits {\n            min-width: 15px;\n            text-align: center;\n          }\n          .value {\n            min-width: 15px;\n            text-align: center;\n          }\n       }\n    }\n </style>\n ","<script lang=\"ts\">\n   import { EmptyApplicationShell } from '#runtime/svelte/component/application';\n   import Panel from './Panel.svelte'\n   import Attacks from './Attacks.svelte'\n   import Features from './Features.svelte'\n   import Domains from './Domains.svelte'\n   import Portrait from './Portrait.svelte'\n   import Stats from './Stats.svelte'\n\n   type Actor = {\n      name: string\n      img: string\n   }\n\n   export let elementRoot = void 0;\n   let actor: Actor = null;\n\n   function getActor() {\n      if (game.user.isGM) {\n         if (canvas.tokens.controlled.length === 0) return actor || null\n         return canvas.tokens.controlled[0].document.actor\n      }\n\n      try {\n         return game.actors.get(game.user.character.id)\n      } catch (error) {\n         console.error(error)\n         ui.notifications.warn('dh-hud: Actor not found, have you assigned a player character to this user in the user configuration?')\n         return null\n      }\n   }\n\n   function setActor() {\n      actor = getActor()\n      console.log('actor', actor)\n   }\n\n   Hooks.on('controlToken', setActor);\n   Hooks.on('updateActor', setActor);\n   Hooks.on('refreshToken', setActor);\n   \n</script>\n\n<svelte:options accessors={true}/>\n\n<EmptyApplicationShell bind:elementRoot>\n   <!--\n    * width & height will be what you set in app options.\n    *\n    * You are in control of adding the draggable action to whatever element that you want to be the drag handle.\n    * In this case it is added to the entire `drag-target` content div therefore to allow focusable elements like the\n    * included input element you should limit draggable targets by `hasTargetClassList`.\n    *\n    * You may choose to have a specific drag handle element that is smaller than the content area and can apply the\n    * draggable action to that without the need for `hasTargetClassList`.\n   -->\n   <div class=\"overlay\" role=\"application\">\n      {#if actor}\n         <Portrait actor={actor} />\n         {#if actor?.type === 'character'}\n            <Stats actor={actor} />\n         {/if}\n         <div>\n            <Panel>\n               <div class=\"horizontal\">\n                  <Attacks actor={actor} />\n                  <Features actor={actor} />\n                  <Domains actor={actor} />\n                  <!-- <Items actorUuid={actor.uuid} equipables={equipables} consumables={consumables} /> -->\n                  <!-- <Common actorUuid={actor.uuid} /> -->\n               </div>\n            </Panel>\n         </div>\n      {/if}\n   </div>\n</EmptyApplicationShell>\n\n<style lang=\"scss\">\n   .overlay {\n      display: flex;\n      align-items: flex-start;\n      font-size: var(--font-size);\n      gap: var(--dh-hud-panel-gap);\n      height: calc(var(--hotbar-height) + var(--hud-height));\n      z-index: var(--z-index-app);\n      width: var(--players-width);\n      padding: 0;\n\n      .abilities {\n         width: var(--special-width);\n         height: calc(var(--hotbar-height) + var(--hud-height));\n         border-radius: 5px;\n\n         .section {\n            display: flex;\n            gap: 5px;\n         }\n      }\n\n      .horizontal {\n         display: flex;\n      }\n\n      .penalties {\n         color: white;\n         margin-top: 5px;\n         display: flex;\n      }\n\n   }\n\n   .panel {\n      pointer-events: all;\n      line-height: 1.4;\n      display: grid;\n      gap: var(--section-gap);\n   }\n</style>\n","import { SvelteApp } from '#runtime/svelte/application';\nimport { deepMerge } from '#runtime/util/object';\n\nimport Overlay from './Overlay.svelte';\n\nexport class PositionBasicOverlayApp extends SvelteApp {\n   /**\n    * Default Application options\n    *\n    * @returns {SvelteApp.Options} options - SvelteApp options.\n    * @see https://typhonjs-fvtt-lib.github.io/api-docs/interfaces/_runtime_svelte_application.SvelteApp.Options.html\n    */\n   static get defaultOptions() {\n      return deepMerge(super.defaultOptions, {\n         id: 'position-basic-overlay',\n         classes: ['dh-hud'],\n         minimizable: false,\n         positionable: false,\n         resizable: false,\n         popOut: false,\n\n         svelte: {\n            class: Overlay,\n            styles: {\n               position: 'static',\n            },\n            target: document.querySelector(\"#ui-left-column-1\") || document.body\n         }\n      });\n   }\n}\n","/**\n * Defines the main constants for module name and label.\n *\n * @type {{moduleId: string, moduleLabel: string}}\n */\nconst constants = {\n   moduleId: 'dh-hud',\n   moduleLabel: `DH Hud`\n};\n\n/**\n * @type {ESSettingConstants} Defines the Foundry game setting keys.\n */\nconst settings = {\n   appStateClient: 'appStateClient',\n   sideSlideLayer: 'sideSlideLayer'\n};\n\n/**\n * @type {ESSessionConstants} Defines all the module session storage static constants.\n */\nconst sessionConstants = {\n   appStateClient: `${constants.moduleId}.${settings.appStateClient}`,\n   themeDarkMode: `${constants.moduleId}.theme.dark`,\n   sidebarCustomTab: `${constants.moduleId}.sidebar.custom-tab`\n};\n\n\nexport { constants, sessionConstants, settings };\n\n/**\n * @typedef {object} ESSessionConstants\n *\n * @property {string} appStateClient Stores the current app state in /src/view/app-state demo.\n *\n * @property {string} themeDarkMode Indicates whether dark mode is enabled.\n *\n * @property {string} sidebarCustomTab Indicates whether to load a custom Svelte sidebar tab.\n */\n\n/**\n * @typedef {object} ESSettingConstants\n *\n * @property {string} appStateClient Stores the current app state in /src/view/app-state demo.\n *\n * @property {string} sideSlideLayer Stores the props persisted to Foundry settings as an object.\n */\n","import { PositionBasicOverlayApp } from './view/PositionBasicOverlayApp';\nimport '../styles/base.scss'; // Import any styles as this includes them in the build.\nimport { constants } from '#constants';\n\n// shim\nwindow.MIN_WINDOW_WIDTH = 200;\nwindow.MIN_WINDOW_HEIGHT = 50;\n\n/**\n * Launches and positions the main `essential-svelte-esm` menu app to the left of the sidebar.\n */\nHooks.once('ready', () => {\n   const enabled = game.settings.get(constants.moduleId, \"dhHudEnabled\");\n   if (!enabled) return\n   new PositionBasicOverlayApp().render(true, { focus: true });\n});\n\nHooks.once(\"init\", () => {\n   game.settings.register(constants.moduleId, \"dhHudEnabled\", {\n      name: \"dh-hud\",\n      hint: \"Enable hud\",\n      label: \"\",\n      scope: \"client\",\n      config: true,\n      type: Boolean,\n      default: true,\n      requiresReload: true,\n   });\n})\n// Hooks.once(\"ready\", () => {\n//    if (game.user.isGM) {\n//       // manual rename\n//       Hooks.on(\"renderTokenHUD\", renderTokenHUD);\n//    }\n// });\n"],"names":["target","fn","now","element","text","hash","detach","linear","instance","create_fragment","start","update","subscribe","run","auto","get","writable","result","active","min","max","end","left","right","bottom","top","document","duration","ease","options","applyStyles","ctx","storeResizing","promise","name","effect","style","window","mathMax","mathMin","toPaddingObject","popperOffsets","offset","popper","clippingParents","reference","allPlacements","placements","placement","_loop","_i","checks","merged","defaultModifiers","createPopper","state","noopFn","computeStyles","flip","preventOverflow","arrow","hide","SvelteComponent","create_if_block_1","create_if_block"],"mappings":"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c,KAAK,IAAI,GAAG,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,GAA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97]}